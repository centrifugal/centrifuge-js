!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Centrifuge",[],t):"object"==typeof exports?exports.Centrifuge=t():e.Centrifuge=t()}(this,(function(){return(()=>{"use strict";var e={187:e=>{var t,s="object"==typeof Reflect?Reflect:null,i=s&&"function"==typeof s.apply?s.apply:function(e,t,s){return Function.prototype.apply.call(e,t,s)};t=s&&"function"==typeof s.ownKeys?s.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var r=Number.isNaN||function(e){return e!=e};function n(){n.init.call(this)}e.exports=n,e.exports.once=function(e,t){return new Promise((function(s,i){function r(){void 0!==n&&e.removeListener("error",n),s([].slice.call(arguments))}var n;"error"!==t&&(n=function(s){e.removeListener(t,r),i(s)},e.once("error",n)),e.once(t,r)}))},n.EventEmitter=n,n.prototype._events=void 0,n.prototype._eventsCount=0,n.prototype._maxListeners=void 0;var o=10;function h(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function c(e){return void 0===e._maxListeners?n.defaultMaxListeners:e._maxListeners}function a(e,t,s,i){var r,n,o,a;if(h(s),void 0===(n=e._events)?(n=e._events=Object.create(null),e._eventsCount=0):(void 0!==n.newListener&&(e.emit("newListener",t,s.listener?s.listener:s),n=e._events),o=n[t]),void 0===o)o=n[t]=s,++e._eventsCount;else if("function"==typeof o?o=n[t]=i?[s,o]:[o,s]:i?o.unshift(s):o.push(s),(r=c(e))>0&&o.length>r&&!o.warned){o.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=o.length,a=u,console&&console.warn&&console.warn(a)}return e}function u(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function _(e,t,s){var i={fired:!1,wrapFn:void 0,target:e,type:t,listener:s},r=u.bind(i);return r.listener=s,i.wrapFn=r,r}function l(e,t,s){var i=e._events;if(void 0===i)return[];var r=i[t];return void 0===r?[]:"function"==typeof r?s?[r.listener||r]:[r]:s?function(e){for(var t=new Array(e.length),s=0;s<t.length;++s)t[s]=e[s].listener||e[s];return t}(r):d(r,r.length)}function f(e){var t=this._events;if(void 0!==t){var s=t[e];if("function"==typeof s)return 1;if(void 0!==s)return s.length}return 0}function d(e,t){for(var s=new Array(t),i=0;i<t;++i)s[i]=e[i];return s}Object.defineProperty(n,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(e){if("number"!=typeof e||e<0||r(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");o=e}}),n.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},n.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||r(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},n.prototype.getMaxListeners=function(){return c(this)},n.prototype.emit=function(e){for(var t=[],s=1;s<arguments.length;s++)t.push(arguments[s]);var r="error"===e,n=this._events;if(void 0!==n)r=r&&void 0===n.error;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var h=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw h.context=o,h}var c=n[e];if(void 0===c)return!1;if("function"==typeof c)i(c,this,t);else{var a=c.length,u=d(c,a);for(s=0;s<a;++s)i(u[s],this,t)}return!0},n.prototype.addListener=function(e,t){return a(this,e,t,!1)},n.prototype.on=n.prototype.addListener,n.prototype.prependListener=function(e,t){return a(this,e,t,!0)},n.prototype.once=function(e,t){return h(t),this.on(e,_(this,e,t)),this},n.prototype.prependOnceListener=function(e,t){return h(t),this.prependListener(e,_(this,e,t)),this},n.prototype.removeListener=function(e,t){var s,i,r,n,o;if(h(t),void 0===(i=this._events))return this;if(void 0===(s=i[e]))return this;if(s===t||s.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete i[e],i.removeListener&&this.emit("removeListener",e,s.listener||t));else if("function"!=typeof s){for(r=-1,n=s.length-1;n>=0;n--)if(s[n]===t||s[n].listener===t){o=s[n].listener,r=n;break}if(r<0)return this;0===r?s.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(s,r),1===s.length&&(i[e]=s[0]),void 0!==i.removeListener&&this.emit("removeListener",e,o||t)}return this},n.prototype.off=n.prototype.removeListener,n.prototype.removeAllListeners=function(e){var t,s,i;if(void 0===(s=this._events))return this;if(void 0===s.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==s[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete s[e]),this;if(0===arguments.length){var r,n=Object.keys(s);for(i=0;i<n.length;++i)"removeListener"!==(r=n[i])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=s[e]))this.removeListener(e,t);else if(void 0!==t)for(i=t.length-1;i>=0;i--)this.removeListener(e,t[i]);return this},n.prototype.listeners=function(e){return l(this,e,!0)},n.prototype.rawListeners=function(e){return l(this,e,!1)},n.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):f.call(e,t)},n.prototype.listenerCount=f,n.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},889:(e,t,s)=>{s.r(t),s.d(t,{default:()=>b});var i=s(187),r=s.n(i);function n(e,t){return 0===e.lastIndexOf(t,0)}function o(e){return null!=e&&"function"==typeof e}function h(e,t){if(s.g.console){const i=s.g.console[e];o(i)&&i.apply(s.g.console,t)}}class c extends(r()){constructor(e,t,s){super(),this.channel=t,this._centrifuge=e,this._status=0,this._error=null,this._isResubscribe=!1,this._ready=!1,this._subscriptionPromise=null,this._noResubscribe=!1,this._recoverable=!1,this._recover=!1,this._setEvents(s),this._initializePromise(),this._promises={},this._promiseId=0,this.on("error",(function(e){this._centrifuge._debug("subscription error",e)}))}_nextPromiseId(){return++this._promiseId}_initializePromise(){this._ready=!1,this._subscriptionPromise=new Promise(((e,t)=>{this._resolve=t=>{this._ready=!0,e(t)},this._reject=e=>{this._ready=!0,t(e)}})).then((function(){}),(function(){}))}_needRecover(){return!0===this._recoverable&&!0===this._recover}_setEvents(e){if(e)if(o(e))this.on("publish",e);else if(Object.prototype.toString.call(e)===Object.prototype.toString.call({})){const t=["publish","join","leave","unsubscribe","subscribe","error"];for(let s=0,i=t.length;s<i;s++){const i=t[s];i in e&&this.on(i,e[i])}}}_isNew(){return 0===this._status}_isUnsubscribed(){return 4===this._status}_isSubscribing(){return 1===this._status}_isReady(){return 2===this._status||3===this._status}_isSuccess(){return 2===this._status}_isError(){return 3===this._status}_setNew(){this._status=0}_setSubscribing(e){this._isResubscribe=e||!1,!0===this._ready&&this._initializePromise(),this._status=1}_setSubscribeSuccess(e){if(2===this._status)return;this._status=2;const t=this._getSubscribeSuccessContext(e);this._recover=!1,this.emit("subscribe",t),this._resolve(t);for(const e in this._promises)clearTimeout(this._promises[e].timeout),this._promises[e].resolve(),delete this._promises[e]}_setSubscribeError(e){if(3===this._status)return;this._status=3,this._error=e;const t=this._getSubscribeErrorContext();this.emit("error",t),this._reject(t);for(const t in this._promises)clearTimeout(this._promises[t].timeout),this._promises[t].reject(e),delete this._promises[t]}_triggerUnsubscribe(){this.emit("unsubscribe",{channel:this.channel})}_setUnsubscribed(e){if(this._centrifuge._clearSubRefreshTimeout(this.channel),4===this._status)return;const t=2===this._status;this._status=4,!0===e&&(this._recover=!1,this._noResubscribe=!0,delete this._centrifuge._lastSeq[this.channel],delete this._centrifuge._lastGen[this.channel],delete this._centrifuge._lastEpoch[this.channel]),t&&this._triggerUnsubscribe()}_shouldResubscribe(){return!this._noResubscribe}_getSubscribeSuccessContext(e){let t={channel:this.channel,isResubscribe:this._isResubscribe};return e&&(t=this._centrifuge._expandSubscribeContext(t,e)),t}_getSubscribeErrorContext(){const e=this._error;return e.channel=this.channel,e.isResubscribe=this._isResubscribe,e}ready(e,t){this._ready&&(this._isSuccess()?e(this._getSubscribeSuccessContext()):t(this._getSubscribeErrorContext()))}subscribe(){2!==this._status&&(this._noResubscribe=!1,this._centrifuge._subscribe(this))}unsubscribe(){this._setUnsubscribed(!0),this._centrifuge._unsubscribe(this)}_methodCall(e,t){return new Promise(((s,i)=>{let r;r=this._isSuccess()?Promise.resolve():this._isError()?Promise.reject(this._error):new Promise(((e,t)=>{const s=setTimeout((function(){t({code:0,message:"timeout"})}),this._centrifuge._config.timeout);this._promises[this._nextPromiseId()]={timeout:s,resolve:e,reject:t}})),r.then((()=>this._centrifuge._call(e).then((e=>{s(this._centrifuge._decoder.decodeCommandResult(t,e.result)),e.next&&e.next()}),(e=>{i(e.error),e.next&&e.next()}))),(e=>{i(e)}))}))}publish(e){return this._methodCall({method:this._centrifuge._methodType.PUBLISH,params:{channel:this.channel,data:e}},this._centrifuge._methodType.PUBLISH)}presence(){return this._methodCall({method:this._centrifuge._methodType.PRESENCE,params:{channel:this.channel}},this._centrifuge._methodType.PRESENCE)}presenceStats(){return this._methodCall({method:this._centrifuge._methodType.PRESENCE_STATS,params:{channel:this.channel}},this._centrifuge._methodType.PRESENCE_STATS)}history(e){const t=this._centrifuge._getHistoryParams(this.channel,e);return this._methodCall({method:this._centrifuge._methodType.HISTORY,params:t},this._centrifuge._methodType.HISTORY)}}const a={CONNECT:0,SUBSCRIBE:1,UNSUBSCRIBE:2,PUBLISH:3,PRESENCE:4,PRESENCE_STATS:5,HISTORY:6,PING:7,SEND:8,RPC:9,REFRESH:10,SUB_REFRESH:11},u={PUBLICATION:0,JOIN:1,LEAVE:2,UNSUB:3,MESSAGE:4,SUB:5};class _{encodeCommands(e){const t=[];for(const s in e)e.hasOwnProperty(s)&&t.push(JSON.stringify(e[s]));return t.join("\n")}}class l{decodeReplies(e){const t=[],s=e.split("\n");for(const e in s)if(s.hasOwnProperty(e)){if(!s[e])continue;const i=JSON.parse(s[e]);t.push(i)}return t}decodeCommandResult(e,t){return t}decodePush(e){return e}decodePushData(e,t){return t}}const f="timeout",d="connection closed";class p extends(r()){constructor(e,t){super(),this._url=e,this._websocket=null,this._sockjs=null,this._isSockjs=!1,this._binary=!1,this._methodType=null,this._pushType=null,this._encoder=null,this._decoder=null,this._status="disconnected",this._reconnect=!0,this._reconnecting=!1,this._transport=null,this._transportName=null,this._transportClosed=!0,this._messageId=0,this._clientID=null,this._refreshRequired=!1,this._subs={},this._serverSubs={},this._lastSeq={},this._lastGen={},this._lastOffset={},this._lastEpoch={},this._messages=[],this._isBatching=!1,this._isSubscribeBatching=!1,this._privateChannels={},this._numRefreshFailed=0,this._refreshTimeout=null,this._pingTimeout=null,this._pongTimeout=null,this._subRefreshTimeouts={},this._retries=0,this._callbacks={},this._latency=null,this._latencyStart=null,this._connectData=null,this._token=null,this._xhrID=0,this._xhrs={},this._dispatchPromise=Promise.resolve(),this._config={debug:!1,name:"",version:"",websocket:null,sockjs:null,minRetry:1e3,maxRetry:2e4,timeout:5e3,ping:!0,pingInterval:25e3,pongWaitTimeout:5e3,privateChannelPrefix:"$",onTransportClose:null,sockjsServer:null,sockjsTransports:["websocket","xdr-streaming","xhr-streaming","eventsource","iframe-eventsource","iframe-htmlfile","xdr-polling","xhr-polling","iframe-xhr-polling","jsonp-polling"],refreshEndpoint:"/centrifuge/refresh",refreshHeaders:{},refreshParams:{},refreshData:{},refreshAttempts:null,refreshInterval:1e3,onRefreshFailed:null,onRefresh:null,subscribeEndpoint:"/centrifuge/subscribe",subscribeHeaders:{},subscribeParams:{},subRefreshInterval:1e3,onPrivateSubscribe:null},this._configure(t)}setToken(e){this._token=e}setConnectData(e){this._connectData=e}setRefreshHeaders(e){this._config.refreshHeaders=e}setRefreshParams(e){this._config.refreshParams=e}setRefreshData(e){this._config.refreshData=e}setSubscribeHeaders(e){this._config.subscribeHeaders=e}setSubscribeParams(e){this._config.subscribeParams=e}_ajax(e,t,i,r,n){let o="";this._debug("sending AJAX request to",e,"with data",JSON.stringify(r));const h=s.g.XMLHttpRequest?new s.g.XMLHttpRequest:new s.g.ActiveXObject("Microsoft.XMLHTTP");for(const e in t)t.hasOwnProperty(e)&&(o.length>0&&(o+="&"),o+=encodeURIComponent(e)+"="+encodeURIComponent(t[e]));o.length>0&&(o="?"+o),h.open("POST",e+o,!0),"withCredentials"in h&&(h.withCredentials=!0),h.setRequestHeader("X-Requested-With","XMLHttpRequest"),h.setRequestHeader("Content-Type","application/json");for(const e in i)i.hasOwnProperty(e)&&h.setRequestHeader(e,i[e]);return h.onreadystatechange=()=>{if(4===h.readyState)if(200===h.status){let e,t=!1;try{e=JSON.parse(h.responseText),t=!0}catch(e){n({error:"Invalid JSON. Data was: "+h.responseText,status:200,data:null})}t&&n({data:e,status:200})}else this._log("wrong status code in AJAX response",h.status),n({status:h.status,data:null})},setTimeout((()=>h.send(JSON.stringify(r))),20),h}_log(){h("info",arguments)}_debug(){!0===this._config.debug&&h("debug",arguments)}_websocketSupported(){return null!==this._config.websocket||!("function"!=typeof WebSocket&&"object"!=typeof WebSocket)}_setFormat(e){if(!this._formatOverride(e)){if("protobuf"===e)throw new Error("not implemented by JSON only Centrifuge client – use client with Protobuf");this._binary=!1,this._methodType=a,this._pushType=u,this._encoder=new _,this._decoder=new l}}_formatOverride(e){return!1}_configure(e){if(!("Promise"in s.g))throw new Error("Promise polyfill required");if(function(e,t){for(const s in t)t.hasOwnProperty(s)&&(e[s]=t[s])}(this._config,e||{}),this._debug("centrifuge config",this._config),!this._url)throw new Error("url required");if(n(this._url,"ws")&&this._url.indexOf("format=protobuf")>-1?this._setFormat("protobuf"):this._setFormat("json"),n(this._url,"http"))if(this._debug("client will try to connect to SockJS endpoint"),null!==this._config.sockjs)this._debug("SockJS explicitly provided in options"),this._sockjs=this._config.sockjs;else{if(void 0===s.g.SockJS)throw new Error("SockJS not found, use ws:// in url or include SockJS");this._debug("use globally defined SockJS"),this._sockjs=s.g.SockJS}else this._debug("client will connect to websocket endpoint")}_setStatus(e){this._status!==e&&(this._debug("Status",this._status,"->",e),this._status=e)}_isDisconnected(){return"disconnected"===this._status}_isConnecting(){return"connecting"===this._status}_isConnected(){return"connected"===this._status}_nextMessageId(){return++this._messageId}_resetRetry(){this._debug("reset retries count to 0"),this._retries=0}_getRetryInterval(){const e=function(e,t,s){const i=.5*Math.random(),r=Math.min(s,t*Math.pow(2,e+1));return Math.floor((1-i)*r)}(this._retries,this._config.minRetry,this._config.maxRetry);return this._retries+=1,e}_abortInflightXHRs(){for(const e in this._xhrs){try{this._xhrs[e].abort()}catch(e){this._debug("error aborting xhr",e)}delete this._xhrs[e]}}_clearConnectedState(e){this._clientID=null,this._stopPing();for(const e in this._callbacks)if(this._callbacks.hasOwnProperty(e)){const t=this._callbacks[e];clearTimeout(t.timeout);const s=t.errback;if(!s)continue;s({error:this._createErrorObject("disconnected")})}this._callbacks={};for(const t in this._subs)if(this._subs.hasOwnProperty(t)){const s=this._subs[t];e?(s._isSuccess()&&(s._triggerUnsubscribe(),s._recover=!0),s._shouldResubscribe()&&s._setSubscribing()):s._setUnsubscribed()}this._abortInflightXHRs(),null!==this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._refreshTimeout=null);for(const e in this._subRefreshTimeouts)this._subRefreshTimeouts.hasOwnProperty(e)&&this._subRefreshTimeouts[e]&&this._clearSubRefreshTimeout(e);this._subRefreshTimeouts={},this._reconnect||(this._subs={})}_isTransportOpen(){return this._isSockjs?this._transport&&this._transport.transport&&this._transport.transport.readyState===this._transport.transport.OPEN:this._transport&&this._transport.readyState===this._transport.OPEN}_transportSend(e){if(!e.length)return!0;if(!this._isTransportOpen()){for(let t in e){let e=t.id;if(!(e in this._callbacks))continue;const s=this._callbacks[e];clearTimeout(this._callbacks[e].timeout),delete this._callbacks[e],(0,s.errback)({error:this._createErrorObject(d,0)})}return!1}return this._transport.send(this._encoder.encodeCommands(e)),!0}_setupTransport(){if(this._isSockjs=!1,null!==this._sockjs){const e={transports:this._config.sockjsTransports};null!==this._config.sockjsServer&&(e.server=this._config.sockjsServer),this._isSockjs=!0,this._transport=new this._sockjs(this._url,null,e)}else{if(!this._websocketSupported())return void this._debug("No Websocket support and no SockJS configured, can not connect");null!==this._config.websocket?this._websocket=this._config.websocket:this._websocket=WebSocket,this._transport=new this._websocket(this._url),!0===this._binary&&(this._transport.binaryType="arraybuffer")}this._transport.onopen=()=>{this._transportClosed=!1,this._isSockjs?(this._transportName="sockjs-"+this._transport.transport,this._transport.onheartbeat=()=>this._restartPing()):this._transportName="websocket";const e={};(this._token||this._connectData||this._config.name||this._config.version)&&(e.params={}),this._token&&(e.params.token=this._token),this._connectData&&(e.params.data=this._connectData),this._config.name&&(e.params.name=this._config.name),this._config.version&&(e.params.version=this._config.version);let t={},s=!1;for(const e in this._serverSubs)if(this._serverSubs.hasOwnProperty(e)&&this._serverSubs[e].recoverable){s=!0;let i={recover:!0};this._serverSubs[e].seq||this._serverSubs[e].gen?(this._serverSubs[e].seq&&(i.seq=this._serverSubs[e].seq),this._serverSubs[e].gen&&(i.gen=this._serverSubs[e].gen)):this._serverSubs[e].offset&&(i.offset=this._serverSubs[e].offset),this._serverSubs[e].epoch&&(i.epoch=this._serverSubs[e].epoch),t[e]=i}s&&(e.params||(e.params={}),e.params.subs=t),this._latencyStart=new Date,this._call(e).then((e=>{this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT,e.result),s),e.next&&e.next()}),(e=>{109===e.error.code&&(this._refreshRequired=!0),this._disconnect("connect error",!0),e.next&&e.next()}))},this._transport.onerror=e=>{this._debug("transport level error",e)},this._transport.onclose=e=>{this._transportClosed=!0;let t=d,s=!0;if(e&&"reason"in e&&e.reason)try{const i=JSON.parse(e.reason);this._debug("reason is an advice object",i),t=i.reason,s=i.reconnect}catch(s){t=e.reason,this._debug("reason is a plain string",t)}if(null!==this._config.onTransportClose&&this._config.onTransportClose({event:e,reason:t,reconnect:s}),this._disconnect(t,s),!0===this._reconnect){this._reconnecting=!0;const e=this._getRetryInterval();this._debug("reconnect after "+e+" milliseconds"),setTimeout((()=>{!0===this._reconnect&&(this._refreshRequired?this._refresh():this._connect())}),e)}},this._transport.onmessage=e=>{this._dataReceived(e.data)}}rpc(e){return this._rpc("",e)}namedRPC(e,t){return this._rpc(e,t)}_rpc(e,t){let s={data:t};""!==e&&(s.method=e);const i={method:this._methodType.RPC,params:s};return this._methodCall(i,(function(e){return e}))}send(e){const t={method:this._methodType.SEND,params:{data:e}};return this.isConnected()&&this._transportSend([t])?Promise.resolve({}):Promise.reject(this._createErrorObject(d,0))}_getHistoryParams(e,t){let s={channel:e};return void 0!==t&&(t.since&&(s.use_since=!0,t.since.offset&&(s.offset=t.since.offset),t.since.epoch&&(s.epoch=t.since.epoch)),void 0!==t.limit&&(s.use_limit=!0,s.limit=t.limit)),s}_methodCall(e,t){return this.isConnected()?new Promise(((s,i)=>{this._call(e).then((i=>{s(t(this._decoder.decodeCommandResult(e.method,i.result))),i.next&&i.next()}),(e=>{i(e.error),e.next&&e.next()}))})):Promise.reject(this._createErrorObject(d,0))}publish(e,t){const s={method:this._methodType.PUBLISH,params:{channel:e,data:t}};return this._methodCall(s,(function(e){return{}}))}history(e,t){const s=this._getHistoryParams(e,t),i={method:this._methodType.HISTORY,params:s};return this._methodCall(i,(function(e){return e}))}presence(e){const t={method:this._methodType.PRESENCE,params:{channel:e}};return this._methodCall(t,(function(e){return e}))}presenceStats(e){const t={method:this._methodType.PRESENCE_STATS,params:{channel:e}};return this._methodCall(t,(function(e){return e}))}_dataReceived(e){const t=this._decoder.decodeReplies(e);this._dispatchPromise=this._dispatchPromise.then((()=>{let e;this._dispatchPromise=new Promise((t=>{e=t})),this._dispatchSynchronized(t,e)})),this._restartPing()}_dispatchSynchronized(e,t){let s=Promise.resolve();for(const t in e)e.hasOwnProperty(t)&&(s=s.then((()=>this._dispatchReply(e[t]))));s=s.then((()=>{t()}))}_dispatchReply(e){var t;const s=new Promise((e=>{t=e}));if(null==e)return this._debug("dispatch: got undefined or null reply"),t(),s;const i=e.id;return i&&i>0?this._handleReply(e,t):this._handlePush(e.result,t),s}_call(e){return new Promise(((t,s)=>{const i=this._addMessage(e);this._registerCall(i,t,s)}))}_connect(){this.isConnected()?this._debug("connect called when already connected"):"connecting"!==this._status&&(this._debug("start connecting"),this._setStatus("connecting"),this._clientID=null,this._reconnect=!0,this._setupTransport())}_disconnect(e,t){const s=t||!1;if(!1===s&&(this._reconnect=!1),this._isDisconnected())s||this._clearConnectedState(s);else{if(this._clearConnectedState(s),this._debug("disconnected:",e,t),this._setStatus("disconnected"),this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._refreshTimeout=null),!1===this._reconnecting){for(const e in this._serverSubs)this._serverSubs.hasOwnProperty(e)&&this.emit("unsubscribe",{channel:e});this.emit("disconnect",{reason:e,reconnect:s})}!1===s&&(this._subs={},this._serverSubs={}),this._transportClosed||this._transport.close()}}_refreshFailed(){this._numRefreshFailed=0,this._isDisconnected()||this._disconnect("refresh failed",!1),null!==this._config.onRefreshFailed&&this._config.onRefreshFailed()}_refresh(){if(this._debug("refresh token"),0===this._config.refreshAttempts)return this._debug("refresh attempts set to 0, do not send refresh request at all"),void this._refreshFailed();null!==this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._refreshTimeout=null);const e=this._clientID,t=this._newXHRID(),s=s=>{if(t in this._xhrs&&delete this._xhrs[t],this._clientID===e)if(s.error||200!==s.status){if(s.error?this._debug("error refreshing connection token",s.error):this._debug("error refreshing connection token: wrong status code",s.status),this._numRefreshFailed++,null!==this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._refreshTimeout=null),null!==this._config.refreshAttempts&&this._numRefreshFailed>=this._config.refreshAttempts)return void this._refreshFailed();const e=Math.round(1e3*Math.random()*Math.max(this._numRefreshFailed,20)),t=this._config.refreshInterval+e;this._refreshTimeout=setTimeout((()=>this._refresh()),t)}else if(this._numRefreshFailed=0,this._token=s.data.token,this._token)if(this._isDisconnected()&&this._reconnect)this._debug("token refreshed, connect from scratch"),this._connect();else{this._debug("send refreshed token");const e={method:this._methodType.REFRESH,params:{token:this._token}};this._call(e).then((e=>{this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH,e.result)),e.next&&e.next()}),(e=>{this._refreshError(e.error),e.next&&e.next()}))}else this._refreshFailed()};if(null!==this._config.onRefresh){const e={};this._config.onRefresh(e,s)}else{const e=this._ajax(this._config.refreshEndpoint,this._config.refreshParams,this._config.refreshHeaders,this._config.refreshData,s);this._xhrs[t]=e}}_refreshError(e){this._debug("refresh error",e),this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._refreshTimeout=null);const t=this._config.refreshInterval+Math.round(1e3*Math.random());this._refreshTimeout=setTimeout((()=>this._refresh()),t)}_refreshResponse(e){this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._refreshTimeout=null),e.expires&&(this._clientID=e.client,this._refreshTimeout=setTimeout((()=>this._refresh()),this._getTTLMilliseconds(e.ttl)))}_newXHRID(){return this._xhrID++,this._xhrID}_subRefresh(e){if(this._debug("refresh subscription token for channel",e),void 0===this._subRefreshTimeouts[e])return;this._clearSubRefreshTimeout(e);const t=this._clientID,s=this._newXHRID(),i=i=>{if(s in this._xhrs&&delete this._xhrs[s],i.error||200!==i.status||this._clientID!==t)return;let r={};if(i.data.channels)for(const e in i.data.channels){const t=i.data.channels[e];t.channel&&(r[t.channel]=t.token)}const n=r[e];if(!n)return;const o={method:this._methodType.SUB_REFRESH,params:{channel:e,token:n}};null!==this._getSub(e)&&this._call(o).then((t=>{this._subRefreshResponse(e,this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH,t.result)),t.next&&t.next()}),(t=>{this._subRefreshError(e,t.error),t.next&&t.next()}))},r={client:this._clientID,channels:[e]};if(null!==this._config.onPrivateSubscribe)this._config.onPrivateSubscribe({data:r},i);else{const e=this._ajax(this._config.subscribeEndpoint,this._config.subscribeParams,this._config.subscribeHeaders,r,i);this._xhrs[s]=e}}_clearSubRefreshTimeout(e){void 0!==this._subRefreshTimeouts[e]&&(clearTimeout(this._subRefreshTimeouts[e]),delete this._subRefreshTimeouts[e])}_subRefreshError(e,t){if(this._debug("subscription refresh error",e,t),this._clearSubRefreshTimeout(e),null===this._getSub(e))return;const s=Math.round(1e3*Math.random());let i=setTimeout((()=>this._subRefresh(e)),this._config.subRefreshInterval+s);this._subRefreshTimeouts[e]=i}_subRefreshResponse(e,t){if(this._debug("subscription refresh success",e),this._clearSubRefreshTimeout(e),null!==this._getSub(e)&&!0===t.expires){let s=setTimeout((()=>this._subRefresh(e)),this._getTTLMilliseconds(t.ttl));this._subRefreshTimeouts[e]=s}}_subscribe(e,t){this._debug("subscribing on",e.channel);const s=e.channel;if(s in this._subs||(this._subs[s]=e),!this.isConnected())return void e._setNew();e._setSubscribing(t);const i={method:this._methodType.SUBSCRIBE,params:{channel:s}};if(n(s,this._config.privateChannelPrefix))this._isSubscribeBatching?this._privateChannels[s]=!0:(this.startSubscribeBatching(),this._subscribe(e),this.stopSubscribeBatching());else{const t=e._needRecover();if(!0===t){i.params.recover=!0;const e=this._getLastSeq(s),t=this._getLastGen(s);if(e||t)e&&(i.params.seq=e),t&&(i.params.gen=t);else{const e=this._getLastOffset(s);e&&(i.params.offset=e)}const r=this._getLastEpoch(s);r&&(i.params.epoch=r)}this._call(i).then((e=>{this._subscribeResponse(s,t,this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE,e.result)),e.next&&e.next()}),(e=>{this._subscribeError(s,e.error),e.next&&e.next()}))}}_unsubscribe(e){delete this._subs[e.channel],delete this._lastOffset[e.channel],delete this._lastSeq[e.channel],delete this._lastGen[e.channel],this.isConnected()&&this._addMessage({method:this._methodType.UNSUBSCRIBE,params:{channel:e.channel}})}_getTTLMilliseconds(e){return Math.min(1e3*e,2147483647)}getSub(e){return this._getSub(e)}_getSub(e){return this._subs[e]||null}_isServerSub(e){return void 0!==this._serverSubs[e]}_connectResponse(e,t){const s=this._reconnecting;if(this._reconnecting=!1,this._resetRetry(),this._refreshRequired=!1,this.isConnected())return;null!==this._latencyStart&&(this._latency=(new Date).getTime()-this._latencyStart.getTime(),this._latencyStart=null),this._clientID=e.client,this._setStatus("connected"),this._refreshTimeout&&clearTimeout(this._refreshTimeout),e.expires&&(this._refreshTimeout=setTimeout((()=>this._refresh()),this._getTTLMilliseconds(e.ttl))),this.startBatching(),this.startSubscribeBatching();for(const e in this._subs)if(this._subs.hasOwnProperty(e)){const t=this._subs[e];t._shouldResubscribe()&&this._subscribe(t,s)}this.stopSubscribeBatching(),this.stopBatching(),this._startPing();const i={client:e.client,transport:this._transportName,latency:this._latency};e.data&&(i.data=e.data),this.emit("connect",i),e.subs&&this._processServerSubs(e.subs)}_processServerSubs(e){for(const t in e)if(e.hasOwnProperty(t)){const s=e[t];let i={channel:t,isResubscribe:void 0!==this._serverSubs[t]};i=this._expandSubscribeContext(i,s),this.emit("subscribe",i)}for(const t in e)if(e.hasOwnProperty(t)){const s=e[t];if(s.recovered){let e=s.publications;if(e&&e.length>0){e.length>1&&(!e[0].offset||e[0].offset>e[1].offset)&&(e=e.reverse());for(let s in e)e.hasOwnProperty(s)&&this._handlePublication(t,e[s])}}this._serverSubs[t]={seq:s.seq,gen:s.gen,offset:s.offset,epoch:s.epoch,recoverable:s.recoverable}}}_stopPing(){null!==this._pongTimeout&&(clearTimeout(this._pongTimeout),this._pongTimeout=null),null!==this._pingTimeout&&(clearTimeout(this._pingTimeout),this._pingTimeout=null)}_startPing(){!0!==this._config.ping||this._config.pingInterval<=0||this.isConnected()&&(this._pingTimeout=setTimeout((()=>{this.isConnected()?(this.ping(),this._pongTimeout=setTimeout((()=>{this._disconnect("no ping",!0)}),this._config.pongWaitTimeout)):this._stopPing()}),this._config.pingInterval))}_restartPing(){this._stopPing(),this._startPing()}_subscribeError(e,t){const s=this._getSub(e);s&&s._isSubscribing()&&(0!==t.code||t.message!==f?s._setSubscribeError(t):this._disconnect("timeout",!0))}_expandSubscribeContext(e,t){let s=!1;"recovered"in t&&(s=t.recovered),e.recovered=s;let i=!1;"positioned"in t&&(i=t.positioned);let r="";"epoch"in t&&(r=t.epoch);let n=0;return"offset"in t&&(n=t.offset),i&&(e.streamPosition={offset:n,epoch:r}),e}_subscribeResponse(e,t,s){const i=this._getSub(e);if(!i)return;if(!i._isSubscribing())return;i._setSubscribeSuccess(s);let r=s.publications;if(r&&r.length>0){r.length>=2&&!r[0].offset&&!r[1].offset&&(r=r.reverse());for(let t in r)r.hasOwnProperty(t)&&this._handlePublication(e,r[t])}if(!s.recoverable||t&&s.recovered||(this._lastSeq[e]=s.seq||0,this._lastGen[e]=s.gen||0,this._lastOffset[e]=s.offset||0),this._lastEpoch[e]=s.epoch||"",s.recoverable&&(i._recoverable=!0),!0===s.expires){let t=setTimeout((()=>this._subRefresh(e)),this._getTTLMilliseconds(s.ttl));this._subRefreshTimeouts[e]=t}}_handleReply(e,t){const s=e.id,i=e.result;if(!(s in this._callbacks))return void t();const r=this._callbacks[s];if(clearTimeout(this._callbacks[s].timeout),delete this._callbacks[s],"error"in(n=e)&&null!==n.error){const s=r.errback;if(!s)return void t();s({error:e.error,next:t})}else{const e=r.callback;if(!e)return;e({result:i,next:t})}var n}_handleJoin(e,t){const s={info:t.info},i=this._getSub(e);i?i.emit("join",s):this._isServerSub(e)&&(s.channel=e,this.emit("join",s))}_handleLeave(e,t){const s={info:t.info},i=this._getSub(e);i?i.emit("leave",s):this._isServerSub(e)&&(s.channel=e,this.emit("leave",s))}_handleUnsub(e,t){const s={},i=this._getSub(e);i?(i.unsubscribe(),!0===t.resubscribe&&i.subscribe()):this._isServerSub(e)&&(delete this._serverSubs[e],s.channel=e,this.emit("unsubscribe",s))}_handleSub(e,t){this._serverSubs[e]={seq:t.seq,gen:t.gen,offset:t.offset,epoch:t.epoch,recoverable:t.recoverable};let s={channel:e,isResubscribe:!1};s=this._expandSubscribeContext(s,t),this.emit("subscribe",s)}_handlePublication(e,t){const s=this._getSub(e),i={data:t.data,seq:t.seq,gen:t.gen,offset:t.offset};t.info&&(i.info=t.info),s?(void 0!==t.seq&&(this._lastSeq[e]=t.seq),void 0!==t.gen&&(this._lastGen[e]=t.gen),void 0!==t.offset&&(this._lastOffset[e]=t.offset),s.emit("publish",i)):this._isServerSub(e)&&(void 0!==t.seq&&(this._serverSubs[e].seq=t.seq),void 0!==t.gen&&(this._serverSubs[e].gen=t.gen),void 0!==t.offset&&(this._serverSubs[e].offset=t.offset),i.channel=e,this.emit("publish",i))}_handleMessage(e){this.emit("message",e.data)}_handlePush(e,t){const s=this._decoder.decodePush(e);let i=0;"type"in s&&(i=s.type);const r=s.channel;if(i===this._pushType.PUBLICATION){const e=this._decoder.decodePushData(this._pushType.PUBLICATION,s.data);this._handlePublication(r,e)}else if(i===this._pushType.MESSAGE){const e=this._decoder.decodePushData(this._pushType.MESSAGE,s.data);this._handleMessage(e)}else if(i===this._pushType.JOIN){const e=this._decoder.decodePushData(this._pushType.JOIN,s.data);this._handleJoin(r,e)}else if(i===this._pushType.LEAVE){const e=this._decoder.decodePushData(this._pushType.LEAVE,s.data);this._handleLeave(r,e)}else if(i===this._pushType.UNSUB){const e=this._decoder.decodePushData(this._pushType.UNSUB,s.data);this._handleUnsub(r,e)}else if(i===this._pushType.SUB){const e=this._decoder.decodePushData(this._pushType.SUB,s.data);this._handleSub(r,e)}t()}_flush(){const e=this._messages.slice(0);this._messages=[],this._transportSend(e)}_ping(){const e={method:this._methodType.PING};this._call(e).then((e=>{this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING,e.result)),e.next&&e.next()}),(e=>{this._debug("ping error",e.error),e.next&&e.next()}))}_pingResponse(e){this.isConnected()&&(this._stopPing(),this._startPing())}_getLastSeq(e){return this._lastSeq[e]||0}_getLastOffset(e){return this._lastOffset[e]||0}_getLastGen(e){return this._lastGen[e]||0}_getLastEpoch(e){return this._lastEpoch[e]||""}_createErrorObject(e,t){return{message:e,code:t||0}}_registerCall(e,t,s){this._callbacks[e]={callback:t,errback:s,timeout:null},this._callbacks[e].timeout=setTimeout((()=>{delete this._callbacks[e],o(s)&&s({error:this._createErrorObject(f)})}),this._config.timeout)}_addMessage(e){let t=this._nextMessageId();return e.id=t,!0===this._isBatching?this._messages.push(e):this._transportSend([e]),t}isConnected(){return this._isConnected()}connect(){this._connect()}disconnect(){this._disconnect("client",!1)}ping(){return this._ping()}startBatching(){this._isBatching=!0}stopBatching(){this._isBatching=!1,this._flush()}startSubscribeBatching(){this._isSubscribeBatching=!0}stopSubscribeBatching(){this._isSubscribeBatching=!1;const e=this._privateChannels;this._privateChannels={};const t=[];for(const s in e)if(e.hasOwnProperty(s)){if(!this._getSub(s))continue;t.push(s)}if(0===t.length)return void this._debug("no private channels found, no need to make request");const s={client:this._clientID,channels:t},i=this._clientID,r=this._newXHRID(),n=e=>{if(r in this._xhrs&&delete this._xhrs[r],this._clientID!==i)return;if(e.error||200!==e.status){this._debug("authorization request failed");for(const e in t)if(t.hasOwnProperty(e)){const s=t[e];this._subscribeError(s,this._createErrorObject("authorization request failed"))}return}let s={};if(e.data.channels)for(const t in e.data.channels){const i=e.data.channels[t];i.channel&&(s[i.channel]=i.token)}let n=!1;this._isBatching||(this.startBatching(),n=!0);for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],r=s[i];if(!r){this._subscribeError(i,this._createErrorObject("permission denied",103));continue}{const e={method:this._methodType.SUBSCRIBE,params:{channel:i,token:r}},t=this._getSub(i);if(null===t)continue;const s=t._needRecover();if(!0===s){e.params.recover=!0;const t=this._getLastSeq(i),s=this._getLastGen(i);if(t||s)t&&(e.params.seq=t),s&&(e.params.gen=s);else{const t=this._getLastOffset(i);t&&(e.params.offset=t)}const r=this._getLastEpoch(i);r&&(e.params.epoch=r)}this._call(e).then((e=>{this._subscribeResponse(i,s,this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE,e.result)),e.next&&e.next()}),(e=>{this._subscribeError(i,e.error),e.next&&e.next()}))}}n&&this.stopBatching()};if(null!==this._config.onPrivateSubscribe)this._config.onPrivateSubscribe({data:s},n);else{const e=this._ajax(this._config.subscribeEndpoint,this._config.subscribeParams,this._config.subscribeHeaders,s,n);this._xhrs[r]=e}}subscribe(e,t){const s=this._getSub(e);if(null!==s)return s._setEvents(t),s._isUnsubscribed()&&s.subscribe(),s;const i=new c(this,e,t);return this._subs[e]=i,i.subscribe(),i}}const b=p}},t={};function s(i){if(t[i])return t[i].exports;var r=t[i]={exports:{}};return e[i](r,r.exports,s),r.exports}return s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s(889)})()}));
//# sourceMappingURL=centrifuge.min.js.map