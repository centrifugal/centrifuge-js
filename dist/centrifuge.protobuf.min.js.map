{"version":3,"sources":["webpack://Centrifuge/webpack/universalModuleDefinition","webpack://Centrifuge/./node_modules/@protobufjs/aspromise/index.js","webpack://Centrifuge/./node_modules/@protobufjs/base64/index.js","webpack://Centrifuge/./node_modules/@protobufjs/codegen/index.js","webpack://Centrifuge/./node_modules/@protobufjs/eventemitter/index.js","webpack://Centrifuge/./node_modules/@protobufjs/fetch/index.js","webpack://Centrifuge/./node_modules/@protobufjs/float/index.js","webpack://Centrifuge/./node_modules/@protobufjs/inquire/index.js","webpack://Centrifuge/./node_modules/@protobufjs/path/index.js","webpack://Centrifuge/./node_modules/@protobufjs/pool/index.js","webpack://Centrifuge/./node_modules/@protobufjs/utf8/index.js","webpack://Centrifuge/./node_modules/events/events.js","webpack://Centrifuge/./node_modules/protobufjs/light.js","webpack://Centrifuge/./node_modules/protobufjs/src/converter.js","webpack://Centrifuge/./node_modules/protobufjs/src/decoder.js","webpack://Centrifuge/./node_modules/protobufjs/src/encoder.js","webpack://Centrifuge/./node_modules/protobufjs/src/enum.js","webpack://Centrifuge/./node_modules/protobufjs/src/field.js","webpack://Centrifuge/./node_modules/protobufjs/src/index-light.js","webpack://Centrifuge/./node_modules/protobufjs/src/index-minimal.js","webpack://Centrifuge/./node_modules/protobufjs/src/mapfield.js","webpack://Centrifuge/./node_modules/protobufjs/src/message.js","webpack://Centrifuge/./node_modules/protobufjs/src/method.js","webpack://Centrifuge/./node_modules/protobufjs/src/namespace.js","webpack://Centrifuge/./node_modules/protobufjs/src/object.js","webpack://Centrifuge/./node_modules/protobufjs/src/oneof.js","webpack://Centrifuge/./node_modules/protobufjs/src/reader.js","webpack://Centrifuge/./node_modules/protobufjs/src/reader_buffer.js","webpack://Centrifuge/./node_modules/protobufjs/src/root.js","webpack://Centrifuge/./node_modules/protobufjs/src/roots.js","webpack://Centrifuge/./node_modules/protobufjs/src/rpc.js","webpack://Centrifuge/./node_modules/protobufjs/src/rpc/service.js","webpack://Centrifuge/./node_modules/protobufjs/src/service.js","webpack://Centrifuge/./node_modules/protobufjs/src/type.js","webpack://Centrifuge/./node_modules/protobufjs/src/types.js","webpack://Centrifuge/./node_modules/protobufjs/src/util.js","webpack://Centrifuge/./node_modules/protobufjs/src/util/longbits.js","webpack://Centrifuge/./node_modules/protobufjs/src/util/minimal.js","webpack://Centrifuge/./node_modules/protobufjs/src/verifier.js","webpack://Centrifuge/./node_modules/protobufjs/src/wrappers.js","webpack://Centrifuge/./node_modules/protobufjs/src/writer.js","webpack://Centrifuge/./node_modules/protobufjs/src/writer_buffer.js","webpack://Centrifuge/./src/utils.js","webpack://Centrifuge/./src/subscription.js","webpack://Centrifuge/./src/json.js","webpack://Centrifuge/./src/centrifuge.js","webpack://Centrifuge/./src/protobuf.js","webpack://Centrifuge/./src/index_protobuf.js","webpack://Centrifuge/webpack/bootstrap","webpack://Centrifuge/webpack/startup","webpack://Centrifuge/webpack/runtime/compat get default export","webpack://Centrifuge/webpack/runtime/define property getters","webpack://Centrifuge/webpack/runtime/global","webpack://Centrifuge/webpack/runtime/hasOwnProperty shorthand","webpack://Centrifuge/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","this","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","replace","$0","$1","value","Number","floor","JSON","stringify","functionNameOverride","EventEmitter","_listeners","prototype","on","evt","off","listeners","splice","emit","args","fetch","asPromise","fs","inquire","filename","options","callback","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","status","response","responseText","Uint8Array","overrideMimeType","responseType","open","send","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","moduleName","mod","eval","e","path","isAbsolute","normalize","split","absolute","prefix","shift","originPath","includePath","alreadyNormalized","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","init","once","emitter","name","eventListener","errorListener","removeListener","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","unshift","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","handler","addListener","prependListener","prependOnceListener","list","position","originalListener","pop","spliceOne","removeAllListeners","key","rawListeners","eventNames","converter","Enum","util","genValuePartial_fromObject","gen","field","fieldIndex","prop","resolvedType","values","repeated","typeDefault","fullName","isUnsigned","genValuePartial_toObject","fromObject","mtype","fields","fieldsArray","safeProp","map","toObject","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","valuesById","long","low","high","unsigned","toNumber","bytes","arrayDefault","hasKs2","_fieldsArray","indexOf","filter","group","ref","id","types","defaults","keyType","basic","packed","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","constructor","className","Namespace","comment","comments","reserved","fromJSON","json","enm","toJSON","toJSONOptions","keepComments","Boolean","add","isString","isInteger","isReservedId","isReservedName","allow_alias","remove","Field","Type","ruleRe","rule","extend","isObject","toLowerCase","defaultValue","Long","extensionField","declaringField","_packed","getOption","setOption","ifNotSet","resolved","parent","lookupTypeOrEnum","fromNumber","freeze","newBuffer","emptyObject","emptyArray","ctor","d","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldName","_configure","Type_","protobuf","build","load","Root","loadSync","encoder","decoder","verifier","OneOf","MapField","Service","Method","Message","wrappers","configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","resolvedKeyType","fieldKeyType","fieldValueType","properties","$type","writer","encodeDelimited","reader","decodeDelimited","verify","object","requestType","requestStream","responseStream","parsedOptions","resolvedRequestType","resolvedResponseType","lookupType","arrayToJSON","array","obj","nested","_nestedArray","clearCache","namespace","addJSON","toArray","nestedArray","nestedJson","names","methods","getEnum","prev","setOptions","onAdd","onRemove","isArray","ptr","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","lookupEnum","lookupService","Service_","Enum_","defineProperties","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","hasOwnProperty","newValue","setProperty","newOpt","Root_","fieldNames","oneof","addFieldsToParent","oneofName","oneOfGetter","oneOfSetter","LongBits","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","skip","skipType","BufferReader_","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","parse","common","deferred","files","SYNC","resolvePath","self","sync","finish","cb","getBundledFileName","idx","lastIndexOf","altname","substring","process","parsed","imports","weakImports","queued","weak","setTimeout","readFileSync","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","endedByRPC","_methodsArray","service","inherited","methodsArray","rpcService","methodName","lcFirst","isReserved","q","s","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","setup","wrapper","originalThis","fork","ldelim","typeName","bake","o","safePropBackslashRe","safePropQuoteRe","ucFirst","str","toUpperCase","camelCaseRe","camelCase","a","decorateRoot","decorateEnumIndex","dst","setProp","prevValue","zero","zzEncode","zeroHash","from","parseInt","fromString","toLong","fromHash","hash","toHash","mask","part0","part1","part2","src","newError","CustomError","captureStackTrace","stack","pool","g","versions","node","global","window","isFinite","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","longs","enums","encoding","allocUnsafe","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","expected","type_url","substr","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","byteLength","startsWith","isFunction","level","logger","Subscription","centrifuge","channel","super","_centrifuge","_status","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_recoverable","_recover","_setEvents","_initializePromise","_promises","_promiseId","errContext","_debug","_resolve","_reject","then","knownEvents","l","ev","isResubscribe","subscribeResult","successContext","_getSubscribeSuccessContext","clearTimeout","timeout","_getSubscribeErrorContext","noResubscribe","_clearSubRefreshTimeout","needTrigger","_lastSeq","_lastGen","_lastEpoch","_triggerUnsubscribe","_expandSubscribeContext","subscribeErrorContext","errback","_isSuccess","_subscribe","_setUnsubscribed","_unsubscribe","subPromise","_isError","res","rej","_config","_nextPromiseId","_call","resolveCtx","_decoder","decodeCommandResult","result","rejectCtx","data","_methodCall","_methodType","PUBLISH","PRESENCE","PRESENCE_STATS","_getHistoryParams","HISTORY","JsonMethodType","CONNECT","SUBSCRIBE","UNSUBSCRIBE","PING","SEND","RPC","REFRESH","SUB_REFRESH","JsonPushType","PUBLICATION","JOIN","LEAVE","UNSUB","MESSAGE","SUB","JsonEncoder","commands","encodedCommands","JsonDecoder","replies","encodedReplies","reply","methodType","pushType","_errorTimeout","_errorConnectionClosed","Centrifuge","url","_url","_websocket","_sockjs","_isSockjs","_binary","_pushType","_encoder","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastOffset","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","debug","version","websocket","sockjs","minRetry","maxRetry","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","token","headers","query","ActiveXObject","encodeURIComponent","withCredentials","setRequestHeader","headerName","_log","WebSocket","format","_formatOverride","configuration","_setFormat","SockJS","newStatus","interval","step","max","jitter","random","backoff","xhrID","abort","reconnect","_stopPing","callbacks","_createErrorObject","sub","_shouldResubscribe","_setSubscribing","_abortInflightXHRs","transport","OPEN","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","subs","hasSubs","recoverable","seq","epoch","Date","_connectResponse","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","isConnected","_transportSend","since","limit","resultCB","decodeReplies","finishDispatch","_dispatchSynchronized","_dispatchReply","_handleReply","_handlePush","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","close","_refreshFailed","clientID","_newXHRID","resp","_refreshResponse","_refreshError","_ajax","expires","client","_getTTLMilliseconds","ttl","channelsData","channels","channelData","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","_setNew","startSubscribeBatching","stopSubscribeBatching","recover","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","_subscribeResponse","_subscribeError","isRecover","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","latency","_processServerSubs","subCtx","recovered","pubs","publications","reverse","_handlePublication","_isSubscribing","_setSubscribeError","positioned","streamPosition","_setSubscribeSuccess","info","_isServerSub","leave","unsub","unsubscribe","resubscribe","subscribe","pub","decodePush","decodePushData","_handleMessage","_handleJoin","_handleLeave","_handleUnsub","_handleSub","messages","_pingResponse","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","currentSub","_isUnsubscribed","proto","methodValues","protobufMethodType","methodSchema","protobufPushType","PushSchema","Push","Command","Reply","ProtobufEncoder","assign","ProtobufDecoder","_decode","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","definition","globalThis","r","Symbol","toStringTag"],"mappings":"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","file":"centrifuge.protobuf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(subscribeResult) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(subscribeResult);\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(subscribeResult) {\n    let ctx = {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe\n    };\n    if (subscribeResult) {\n      // subscribeResult not available when called from Subscription.ready method at the moment.\n      ctx = this._centrifuge._expandSubscribeContext(ctx, subscribeResult);\n    }\n    return ctx;\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    const methodCallPromise = new Promise((resolve, reject) => {\n      let subPromise;\n      if (this._isSuccess()) {\n        subPromise = Promise.resolve();\n      } else if (this._isError()) {\n        subPromise = Promise.reject(this._error);\n      } else {\n        subPromise = new Promise((res, rej) => {\n          const timeout = setTimeout(function () {\n            rej({'code': 0, 'message': 'timeout'});\n          }, this._centrifuge._config.timeout);\n          this._promises[this._nextPromiseId()] = {\n            timeout: timeout,\n            resolve: res,\n            reject: rej\n          };\n        });\n      }\n      subPromise.then(\n        () => {\n          return this._centrifuge._call(message).then(\n            resolveCtx => {\n              resolve(this._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            },\n            rejectCtx => {\n              reject(rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            }\n          );\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n    return methodCallPromise;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history(options) {\n    const params = this._centrifuge._getHistoryParams(this.channel, options);\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: params\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4,\n  SUB: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnecte';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._config = {\n      debug: false,\n      name: '',\n      version: '',\n      websocket: null,\n      sockjs: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData || this._config.name || this._config.version) {\n        msg.params = {};\n      }\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n      if (this._config.name) {\n        msg.params.name = this._config.name;\n      }\n      if (this._config.version) {\n        msg.params.version = this._config.version;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        if (!msg.params) {msg.params = {};}\n        msg.params.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result), hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    let params = {\n      data: data\n    };\n    if (method !== '') {\n      params.method = method;\n    };\n    const msg = {\n      method: this._methodType.RPC,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  _getHistoryParams(channel, options) {\n    let params = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        params['use_since'] = true;\n        if (options.since.offset) {\n          params['offset'] = options.since.offset;\n        }\n        if (options.since.epoch) {\n          params['epoch'] = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        params['use_limit'] = true;\n        params['limit'] = options.limit;\n      }\n    };\n    return params;\n  }\n\n  _methodCall(msg, resultCB) {\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve(resultCB(this._decoder.decodeCommandResult(msg.method, resolveCtx.result)));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {};\n    });\n  }\n\n  history(channel, options) {\n    const params = this._getHistoryParams(channel, options);\n    const msg = {\n      method: this._methodType.HISTORY,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  presence(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  presenceStats(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE_STATS,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve =>{\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', {channel: channel});\n        }\n      }\n      this.emit('disconnect', {\n        reason: reason,\n        reconnect: reconnect\n      });\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          if (gen) {\n            msg.params.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            msg.params.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs);\n    }\n  };\n\n  _processServerSubs(subs) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const isResubscribe = this._serverSubs[channel] !== undefined;\n        let subCtx = {channel: channel, isResubscribe: isResubscribe};\n        subCtx = this._expandSubscribeContext(subCtx, sub);\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _expandSubscribeContext(ctx, result) {\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    ctx.recovered = recovered;\n\n    let positioned = false;\n    if ('positioned' in result) {\n      positioned = result.positioned;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (positioned) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    };\n    return ctx;\n  }\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribeSuccess(result);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !result.recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = {'info': join.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = {'info': leave.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    let ctx = {'channel': channel, isResubscribe: false};\n    ctx = this._expandSubscribeContext(ctx, sub);\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUB) {\n      const sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  msg.params.seq = seq;\n                }\n                if (gen) {\n                  msg.params.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  msg.params.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n","import {Centrifuge} from './centrifuge.js';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst methodValues = proto.lookupEnum('MethodType').values;\n\nconst protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nconst methodSchema = {\n  CONNECT: [\n    proto.lookupType('protocol.ConnectRequest'),\n    proto.lookupType('protocol.ConnectResult')\n  ],\n  REFRESH: [\n    proto.lookupType('protocol.RefreshRequest'),\n    proto.lookupType('protocol.RefreshResult')\n  ],\n  SUBSCRIBE: [\n    proto.lookupType('protocol.SubscribeRequest'),\n    proto.lookupType('protocol.SubscribeResult')\n  ],\n  SUB_REFRESH: [\n    proto.lookupType('protocol.SubRefreshRequest'),\n    proto.lookupType('protocol.SubRefreshResult')\n  ],\n  UNSUBSCRIBE: [\n    proto.lookupType('protocol.UnsubscribeRequest'),\n    proto.lookupType('protocol.UnsubscribeResult')\n  ],\n  PUBLISH: [\n    proto.lookupType('protocol.PublishRequest'),\n    proto.lookupType('protocol.PublishResult')\n  ],\n  PRESENCE: [\n    proto.lookupType('protocol.PresenceRequest'),\n    proto.lookupType('protocol.PresenceResult')\n  ],\n  PRESENCE_STATS: [\n    proto.lookupType('protocol.PresenceStatsRequest'),\n    proto.lookupType('protocol.PresenceStatsResult')\n  ],\n  HISTORY: [\n    proto.lookupType('protocol.HistoryRequest'),\n    proto.lookupType('protocol.HistoryResult')\n  ],\n  PING: [\n    proto.lookupType('protocol.PingRequest'),\n    proto.lookupType('protocol.PingResult')\n  ],\n  RPC: [\n    proto.lookupType('protocol.RPCRequest'),\n    proto.lookupType('protocol.RPCResult')\n  ],\n  SEND: [\n    proto.lookupType('protocol.SendRequest'),\n    null\n  ]\n};\n\nconst protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nconst PushSchema = {\n  PUBLICATION: proto.lookupType('protocol.Publication'),\n  JOIN: proto.lookupType('protocol.Join'),\n  LEAVE: proto.lookupType('protocol.Leave'),\n  UNSUB: proto.lookupType('protocol.Unsub'),\n  MESSAGE: proto.lookupType('protocol.Message'),\n  SUB: proto.lookupType('protocol.Sub')\n};\n\nconst Push = proto.lookupType('protocol.Push');\nconst Command = proto.lookupType('protocol.Command');\nconst Reply = proto.lookupType('protocol.Reply');\n\nexport class ProtobufEncoder {\n  encodeCommands(commands) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        if (command.params) {\n          let type;\n          if (!command.method) {\n            command.method = protobufMethodType.CONNECT;\n          };\n          switch (command.method) {\n            case protobufMethodType.CONNECT:\n              type = methodSchema.CONNECT[0];\n              break;\n            case protobufMethodType.REFRESH:\n              type = methodSchema.REFRESH[0];\n              break;\n            case protobufMethodType.SUBSCRIBE:\n              type = methodSchema.SUBSCRIBE[0];\n              break;\n            case protobufMethodType.SUB_REFRESH:\n              type = methodSchema.SUB_REFRESH[0];\n              break;\n            case protobufMethodType.UNSUBSCRIBE:\n              type = methodSchema.UNSUBSCRIBE[0];\n              break;\n            case protobufMethodType.PUBLISH:\n              type = methodSchema.PUBLISH[0];\n              break;\n            case protobufMethodType.PRESENCE:\n              type = methodSchema.PRESENCE[0];\n              break;\n            case protobufMethodType.PRESENCE_STATS:\n              type = methodSchema.PRESENCE_STATS[0];\n              break;\n            case protobufMethodType.HISTORY:\n              type = methodSchema.HISTORY[0];\n              break;\n            case protobufMethodType.PING:\n              type = methodSchema.PING[0];\n              break;\n            case protobufMethodType.RPC:\n              type = methodSchema.RPC[0];\n              break;\n            case protobufMethodType.SEND:\n              type = methodSchema.SEND[0];\n              break;\n          }\n          command.params = type.encode(command.params).finish();\n        }\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    var type;\n    switch (methodType) {\n      case protobufMethodType.CONNECT:\n        type = methodSchema.CONNECT[1];\n        break;\n      case protobufMethodType.REFRESH:\n        type = methodSchema.REFRESH[1];\n        break;\n      case protobufMethodType.SUBSCRIBE:\n        type = methodSchema.SUBSCRIBE[1];\n        break;\n      case protobufMethodType.SUB_REFRESH:\n        type = methodSchema.SUB_REFRESH[1];\n        break;\n      case protobufMethodType.UNSUBSCRIBE:\n        type = methodSchema.UNSUBSCRIBE[1];\n        break;\n      case protobufMethodType.PUBLISH:\n        type = methodSchema.PUBLISH[1];\n        break;\n      case protobufMethodType.PRESENCE:\n        type = methodSchema.PRESENCE[1];\n        break;\n      case protobufMethodType.PRESENCE_STATS:\n        type = methodSchema.PRESENCE_STATS[1];\n        break;\n      case protobufMethodType.HISTORY:\n        type = methodSchema.HISTORY[1];\n        break;\n      case protobufMethodType.PING:\n        type = methodSchema.PING[1];\n        break;\n      case protobufMethodType.RPC:\n        type = methodSchema.RPC[1];\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  decodePush(data) {\n    return this._decode(Push, data);\n  }\n\n  decodePushData(pushType, data) {\n    var type;\n    switch (pushType) {\n      case protobufPushType.PUBLICATION:\n        type = PushSchema.PUBLICATION;\n        break;\n      case protobufPushType.MESSAGE:\n        type = PushSchema.MESSAGE;\n        break;\n      case protobufPushType.JOIN:\n        type = PushSchema.JOIN;\n        break;\n      case protobufPushType.LEAVE:\n        type = PushSchema.LEAVE;\n        break;\n      case protobufPushType.UNSUB:\n        type = PushSchema.UNSUB;\n        break;\n      case protobufPushType.SUB:\n        type = PushSchema.SUB;\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  _decode(type, data) {\n    let res;\n    try {\n      res = type.decode(data);\n    } catch (err) {\n      return null;\n    }\n    return res;\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n  _formatOverride(format) {\n    if (format === 'protobuf') {\n      this._binary = true;\n      this._methodType = protobufMethodType;\n      this._pushType = protobufPushType;\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n","import {CentrifugeProtobuf} from './protobuf.js';\nexport default CentrifugeProtobuf;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(545);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}