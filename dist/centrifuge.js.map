{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7dae08519e5d62bf64a5","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js"],"names":["_errorTimeout","_errorConnectionClosed","Centrifuge","url","options","_url","_websocket","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastSeq","_lastGen","_lastOffset","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","Promise","resolve","_config","debug","websocket","sockjs","promise","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","_configure","token","data","headers","params","callback","query","_debug","JSON","stringify","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","e","error","_log","setTimeout","send","arguments","WebSocket","format","_formatOverride","Error","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","indexOf","_setFormat","SockJS","newStatus","interval","xhrID","abort","reconnect","_stopPing","id","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","subs","hasSubs","recoverable","seq","gen","offset","epoch","Date","_call","then","_connectResponse","decodeCommandResult","CONNECT","resolveCtx","result","next","err","rejectCtx","code","_disconnect","onerror","onclose","reason","needReconnect","closeEvent","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","method","RPC","isConnected","reject","SEND","sent","_transportSend","undefined","since","limit","_getHistoryParams","HISTORY","PUBLISH","replies","decodeReplies","finishDispatch","_dispatchSynchronized","p","_dispatchReply","reply","_handleReply","_handlePush","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","emit","close","_refreshFailed","clientID","_newXHRID","cb","resp","jitter","Math","round","random","max","REFRESH","_refreshResponse","_refreshError","context","_ajax","expires","client","_getTTLMilliseconds","ttl","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","min","isRecover","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","ctx","latency","_processServerSubs","subCtx","_expandSubscribeContext","recovered","pubs","publications","reverse","_handlePublication","_isSubscribing","message","_setSubscribeError","positioned","streamPosition","_setSubscribeSuccess","_recoverable","join","info","_isServerSub","leave","unsub","unsubscribe","resubscribe","subscribe","pub","push","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","SUB","_handleSub","messages","slice","PING","_pingResponse","lastSeq","lastOffset","lastGen","lastEpoch","errObject","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","events","currentSub","_setEvents","_isUnsubscribed","Subscription","EventEmitter","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","on","errContext","_resolve","value","_reject","Object","prototype","toString","call","knownEvents","l","ev","successContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeResult","subscribeErrorContext","_getSubscribeSuccessContext","_unsubscribe","methodCallPromise","subPromise","_isError","res","rej","_nextPromiseId","_methodCall","PRESENCE","PRESENCE_STATS","encodedCommands","encodedReplies","split","methodType","pushType","startsWith","isFunction","log","backoff","errorExists","extend","prefix","lastIndexOf","level","args","console","logger","apply","step","pow","floor","a","b","key"],"mappings":"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zF,IAAhB,CAAqB,IAArB,CAAP;AACD;;;;;;IAGU7K,W,WAAAA,W;;;;;;;kCACGvC,I,EAAM;AAClB,UAAM8H,UAAU,EAAhB;AACA,UAAMgL,iBAAiB9S,KAAK+S,KAAL,CAAW,IAAX,CAAvB;AACA,WAAK,IAAMnS,CAAX,IAAgBkS,cAAhB,EAAgC;AAC9B,YAAIA,eAAejS,cAAf,CAA8BD,CAA9B,CAAJ,EAAsC;AACpC,cAAI,CAACkS,eAAelS,CAAf,CAAL,EAAwB;AACtB;AACD;AACD,cAAMwH,QAAQ9H,KAAKkB,KAAL,CAAWsR,eAAelS,CAAf,CAAX,CAAd;AACAkH,kBAAQ+F,IAAR,CAAazF,KAAb;AACD;AACF;AACD,aAAON,OAAP;AACD;;;wCAEmBkL,U,EAAYhT,I,EAAM;AACpC,aAAOA,IAAP;AACD;;;+BAEUA,I,EAAM;AACf,aAAOA,IAAP;AACD;;;mCAEciT,Q,EAAUjT,I,EAAM;AAC7B,aAAOA,IAAP;AACD;;;;;;;;;;;AC9DH;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;ACpBA;;kBACe7E,sB;;;;;;;;;ACDf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;;QC/bgB+X,U,GAAAA,U;QAIAC,U,GAAAA,U;QAOAC,G,GAAAA,G;QAUAC,O,GAAAA,O;QAOAC,W,GAAAA,W;QAIAC,M,GAAAA,M;AAhCT,SAASL,UAAT,CAAoB/B,KAApB,EAA2BqC,MAA3B,EAAmC;AACxC,SAAOrC,MAAMsC,WAAN,CAAkBD,MAAlB,EAA0B,CAA1B,MAAiC,CAAxC;AACD;;AAEM,SAASL,UAAT,CAAoBhC,KAApB,EAA2B;AAChC,MAAIA,UAAU3J,SAAV,IAAuB2J,UAAU,IAArC,EAA2C;AACzC,WAAO,KAAP;AACD;AACD,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD;;AAEM,SAASiC,GAAT,CAAaM,KAAb,EAAoBC,IAApB,EAA0B;AAC/B,MAAIlT,OAAOmT,OAAX,EAAoB;AAClB,QAAMC,SAASpT,OAAOmT,OAAP,CAAeF,KAAf,CAAf;;AAEA,QAAIP,WAAWU,MAAX,CAAJ,EAAwB;AACtBA,aAAOC,KAAP,CAAarT,OAAOmT,OAApB,EAA6BD,IAA7B;AACD;AACF;AACF;;AAEM,SAASN,OAAT,CAAiBU,IAAjB,EAAuBpI,GAAvB,EAA4BlC,GAA5B,EAAiC;AACtC,MAAMJ,SAAS,MAAMC,KAAKE,MAAL,EAArB;AACA,MAAM3G,WAAWyG,KAAKqC,GAAL,CAASlC,GAAT,EAAckC,MAAMrC,KAAK0K,GAAL,CAAS,CAAT,EAAYD,OAAO,CAAnB,CAApB,CAAjB;;AAEA,SAAOzK,KAAK2K,KAAL,CAAW,CAAC,IAAI5K,MAAL,IAAexG,QAA1B,CAAP;AACD;;AAEM,SAASyQ,WAAT,CAAqBtT,IAArB,EAA2B;AAChC,SAAO,WAAWA,IAAX,IAAmBA,KAAK2B,KAAL,KAAe,IAAzC;AACD;;AAEM,SAAS4R,MAAT,CAAgBW,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3B,OAAK,IAAMC,GAAX,IAAkBD,CAAlB,EAAqB;AACnB,QAAIA,EAAEtT,cAAF,CAAiBuT,GAAjB,CAAJ,EAA2B;AACzBF,QAAEE,GAAF,IAASD,EAAEC,GAAF,CAAT;AACD;AACF;AACD,SAAOF,CAAP;AACD,E","file":"centrifuge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7dae08519e5d62bf64a5","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._config = {\n      debug: false,\n      websocket: null,\n      sockjs: null,\n      promise: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData) {\n        msg.params = {};\n      }\n\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        if (!msg.params) {msg.params = {};}\n        msg.params.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result), hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    let params = {\n      data: data\n    };\n    if (method !== '') {\n      params.method = method;\n    };\n    const msg = {\n      method: this._methodType.RPC,\n      params: params\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(resolveCtx => {\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n      return this._decoder.decodeCommandResult(this._methodType.RPC, resolveCtx.result);\n    }, rejectCtx => {\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n      return Promise.reject(rejectCtx.error);\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  _getHistoryParams(channel, options) {\n    let params = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        params['use_since'] = true;\n        if (options.since.offset) {\n          params['offset'] = options.since.offset;\n        }\n        if (options.since.epoch) {\n          params['epoch'] = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        params['use_limit'] = true;\n        params['limit'] = options.limit;\n      }\n    };\n    return params;\n  }\n\n  history(channel, options) {\n    const params = this._getHistoryParams(channel, options);\n    const msg = {\n      method: this._methodType.HISTORY,\n      params: params\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve(resolveCtx.result);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve({});\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve =>{\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', {channel: channel});\n        }\n      }\n      this.emit('disconnect', {\n        reason: reason,\n        reconnect: reconnect\n      });\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          if (gen) {\n            msg.params.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            msg.params.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs, isRecover);\n    }\n  };\n\n  _processServerSubs(subs, isRecover) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const isResubscribe = this._serverSubs[channel] !== undefined;\n        let subCtx = {channel: channel, isResubscribe: isResubscribe};\n        subCtx = this._expandSubscribeContext(subCtx, sub);\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _expandSubscribeContext(ctx, result) {\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    ctx.recovered = recovered;\n\n    let positioned = false;\n    if ('positioned' in result) {\n      positioned = result.positioned;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (positioned) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    };\n    return ctx;\n  }\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribeSuccess(result);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !result.recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = {'info': join.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = {'info': leave.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    let ctx = {'channel': channel, isResubscribe: false};\n    ctx = this._expandSubscribeContext(ctx, sub);\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUB) {\n      const sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  msg.params.seq = seq;\n                }\n                if (gen) {\n                  msg.params.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  msg.params.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(subCtx) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = subCtx;\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(subscribeResult) {\n    let ctx = {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe\n    };\n    ctx = this._centrifuge._expandSubscribeContext(ctx, subscribeResult);\n    return ctx;\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    const methodCallPromise = new Promise((resolve, reject) => {\n      let subPromise;\n      if (this._isSuccess()) {\n        subPromise = Promise.resolve();\n      } else if (this._isError()) {\n        subPromise = Promise.reject(this._error);\n      } else {\n        subPromise = new Promise((res, rej) => {\n          const timeout = setTimeout(function () {\n            rej({'code': 0, 'message': 'timeout'});\n          }, this._centrifuge._config.timeout);\n          this._promises[this._nextPromiseId()] = {\n            timeout: timeout,\n            resolve: res,\n            reject: rej\n          };\n        });\n      }\n      subPromise.then(\n        () => {\n          return this._centrifuge._call(message).then(\n            resolveCtx => {\n              resolve(this._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            },\n            rejectCtx => {\n              reject(rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            }\n          );\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n    return methodCallPromise;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history(options) {\n    const params = this._centrifuge._getHistoryParams(this.channel, options);\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: params\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4,\n  SUB: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","import {Centrifuge} from './centrifuge.js';\nexport default Centrifuge;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}