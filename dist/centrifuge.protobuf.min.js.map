{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///centrifuge.protobuf.min.js","webpack:///webpack/bootstrap fe3a0c95ebde1c2cb254","webpack:///./node_modules/protobufjs/src/util.js","webpack:///./node_modules/protobufjs/src/util/minimal.js","webpack:///./node_modules/protobufjs/src/enum.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/protobufjs/src/object.js","webpack:///./node_modules/protobufjs/src/field.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js","webpack:///./node_modules/protobufjs/src/namespace.js","webpack:///./node_modules/protobufjs/src/types.js","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///./node_modules/protobufjs/src/writer.js","webpack:///./node_modules/protobufjs/src/reader.js","webpack:///./node_modules/protobufjs/src/oneof.js","webpack:///./node_modules/protobufjs/src/message.js","webpack:///./node_modules/@protobufjs/aspromise/index.js","webpack:///./node_modules/@protobufjs/inquire/index.js","webpack:///./node_modules/protobufjs/src/rpc.js","webpack:///./node_modules/protobufjs/src/roots.js","webpack:///./node_modules/protobufjs/src/encoder.js","webpack:///./node_modules/protobufjs/src/type.js","webpack:///./node_modules/protobufjs/src/mapfield.js","webpack:///./node_modules/protobufjs/src/service.js","webpack:///./node_modules/protobufjs/src/method.js","webpack:///./node_modules/protobufjs/src/decoder.js","webpack:///./node_modules/protobufjs/src/verifier.js","webpack:///./node_modules/protobufjs/src/converter.js","webpack:///./node_modules/protobufjs/src/wrappers.js","webpack:///./node_modules/protobufjs/src/root.js","webpack:///./src/index_protobuf.js","webpack:///./src/protobuf.js","webpack:///./node_modules/protobufjs/light.js","webpack:///./node_modules/protobufjs/src/index-light.js","webpack:///./node_modules/protobufjs/src/index-minimal.js","webpack:///./node_modules/@protobufjs/base64/index.js","webpack:///./node_modules/@protobufjs/eventemitter/index.js","webpack:///./node_modules/@protobufjs/float/index.js","webpack:///./node_modules/@protobufjs/utf8/index.js","webpack:///./node_modules/@protobufjs/pool/index.js","webpack:///./node_modules/protobufjs/src/util/longbits.js","webpack:///./node_modules/protobufjs/src/writer_buffer.js","webpack:///./node_modules/protobufjs/src/reader_buffer.js","webpack:///./node_modules/protobufjs/src/rpc/service.js","webpack:///./node_modules/@protobufjs/codegen/index.js","webpack:///./node_modules/@protobufjs/fetch/index.js","webpack:///./node_modules/@protobufjs/path/index.js","webpack:///./src/client.proto.json"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Type","Enum","util","roots","codegen","fetch","path","fs","inquire","toArray","keys","array","Array","length","index","toObject","key","val","undefined","safePropBackslashRe","safePropQuoteRe","isReserved","test","safeProp","prop","replace","ucFirst","str","charAt","toUpperCase","substring","camelCaseRe","camelCase","$0","$1","compareFieldsById","a","b","id","decorateType","ctor","typeName","$type","decorateRoot","remove","add","type","value","decorateEnumIndex","decorateEnum","enm","global","merge","dst","src","ifNotSet","newError","CustomError","message","properties","Error","captureStackTrace","stack","create","constructor","toString","asPromise","base64","EventEmitter","float","utf8","pool","LongBits","window","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","node","isInteger","Number","isFinite","Math","floor","isString","String","isObject","isset","isSet","obj","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","values","options","comment","comments","ReflectionObject","TypeError","valuesById","reserved","className","Namespace","fromJSON","toJSON","keepComments","isReservedId","isReservedName","allow_alias","g","Function","eval","parent","resolved","filename","Root","defineProperties","ptr","fullName","unshift","join","onAdd","_handleAdd","onRemove","_handleRemove","resolve","getOption","setOption","setOptions","Root_","Field","rule","extend","ruleRe","required","optional","repeated","map","partOf","typeDefault","defaultValue","long","types","resolvedType","extensionField","declaringField","_packed","defaults","lookupTypeOrEnum","packed","fromNumber","buf","decode","write","fieldId","fieldType","fieldRule","fieldName","default","Type_","ProcessEmitWarning","warning","console","warn","init","$getMaxListeners","that","_maxListeners","defaultMaxListeners","_addListener","target","listener","prepend","events","existing","_events","_eventsCount","newListener","emit","push","warned","w","emitter","count","onceWrapper","args","arguments","fired","removeListener","wrapFn","ReflectApply","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","list","pop","ret","ReflectOwnKeys","R","Reflect","apply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","isNaN","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","context","handler","len","listeners","addListener","on","prependListener","once","prependOnceListener","position","originalListener","shift","off","removeAllListeners","rawListeners","eventNames","startsWith","prefix","lastIndexOf","isFunction","log","level","logger","backoff","step","min","max","jitter","random","interval","pow","errorExists","data","arrayToJSON","nested","_nestedArray","clearCache","namespace","Service","addJSON","nestedArray","nestedJson","ns","names","fields","methods","getEnum","prev","split","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","slice","found","indexOf","lookupType","lookupEnum","lookupService","Service_","Enum_","bake","offset","basic","mapKey","_interopRequireDefault","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","writable","setPrototypeOf","__proto__","Centrifuge","_typeof","Symbol","iterator","_createClass","props","descriptor","protoProps","staticProps","_events2","_subscription","_subscription2","_json","_utils","_EventEmitter","url","_this","_url","_websocket","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastSeq","_lastGen","_lastOffset","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","Promise","_config","debug","websocket","sockjs","promise","middleware","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","token","headers","params","_len","fns","_key","callback","_this2","query","_debug","JSON","stringify","xhr","XMLHttpRequest","ActiveXObject","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","_log","setTimeout","send","WebSocket","format","_formatOverride","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","_setFormat","SockJS","newStatus","xhrID","abort","reconnect","_stopPing","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","_this3","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","subs","hasSubs","recoverable","recover","seq","gen","epoch","Date","_call","then","resolveCtx","_connectResponse","decodeCommandResult","CONNECT","result","next","rejectCtx","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","method","_this4","RPC","isConnected","reject","SEND","_transportSend","PUBLISH","_this5","replies","decodeReplies","finishDispatch","_dispatchSynchronized","forEach","mw","_this6","_hookMiddleware","_dispatchReply","reply","_handleReply","_handlePush","_this7","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","close","_this8","_refreshFailed","clientID","_newXHRID","cb","resp","round","REFRESH","_refreshResponse","_refreshError","_ajax","_this9","_this10","expires","client","_getTTLMilliseconds","ttl","_this11","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","_this12","subRefreshTimeout","_subRefresh","_this13","isResubscribe","_this14","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","isRecover","_this15","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","ctx","latency","_processServerSubs","recovered","subCtx","pubs","publications","reverse","_handlePublication","_this16","_isSubscribing","_setSubscribeError","_this17","_setSubscribeSuccess","_recoverable","info","_isServerSub","leave","unsub","unsubscribe","resubscribe","subscribe","pub","decodePush","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","SUB","_handleSub","messages","_this18","PING","_pingResponse","lastSeq","lastOffset","lastGen","lastEpoch","_this19","_nextMessageId","_isConnected","_ping","_flush","_this20","authChannels","batch","_ret2","currentSub","_setEvents","_isUnsubscribed","Subscription","_STATE_NEW","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","errContext","_resolve","_reject","knownEvents","ev","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","subPromise","_isError","res","rej","_nextPromiseId","_methodCall","PRESENCE","PRESENCE_STATS","HISTORY","encodedCommands","encodedReplies","methodType","pushType","Op","fn","noop","State","writer","head","tail","states","Writer","writeByte","pos","writeVarint32","VarintOp","writeVarint64","writeFixed32","BufferWriter","alloc","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","string","fork","reset","ldelim","finish","BufferWriter_","indexOutOfRange","reader","writeLength","Reader","buffer","readLongVarint","readFixed32_end","end","readFixed64","BufferReader","create_array","isBuffer","_slice","readFloatLE","readDoubleLE","start","read","skip","skipType","wireType","BufferReader_","zzDecode","OneOf","oneof","fieldsArray","addFieldsToParent","field","splice","oneofName","Message","encode","encodeDelimited","decodeDelimited","verify","fromObject","pending","moduleName","mod","genTypePartial","fieldIndex","ref","group","encoder","mtype","sort","_fieldsArray","keyType","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","MapField","decoder","verifier","converter","wrappers","fieldsById","oneofsArray","generateConstructor","ctorProperties","inherited","filter","setup","wrapper","originalThis","resolvedKeyType","fieldKeyType","fieldValueType","_methodsArray","service","Method","rpc","methodsArray","rpcImpl","requestDelimited","responseDelimited","rpcService","methodName","q","resolvedRequestType","resolvedResponseType","requestType","responseType","requestStream","responseStream","missing","rfield","invalid","expected","genVerifyValue","j","genVerifyKey","seenFirstField","oneofProp","genValuePartial_fromObject","isUnsigned","genValuePartial_toObject","repeatedFields","mapFields","normalFields","low","high","arrayDefault","fromCharCode","hasKs2","type_url","substr","deferred","files","SYNC","tryHandleExtension","extendedType","sisterField","common","resolvePath","load","sync","getBundledFileName","idx","altname","source","imports","weakImports","queued","weak","readFileSync","loadSync","exposeRe","parse_","common_","_protobuf","CentrifugeProtobuf","ProtobufDecoder","ProtobufEncoder","protobuf","require","proto","methodValues","protobufMethodType","methodSchema","protobufPushType","PushSchema","Push","Command","Reply","assign","_decode","_Centrifuge","build","configure","ceil","b64","s64","t","parts","chunk","charCodeAt","evt","Float32Array","writeFloat_f32_cpy","f32","f8b","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","le","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","sign","exponent","LN2","mantissa","readFloat_ieee754","readUint","uint","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","writeDouble_f64_cpy","f64","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","c1","c2","SIZE","MAX","slab","zero","parseInt","fromString","toLong","mask","part0","part1","part2","writeStringBuffer","writeBytesBuffer","byteLength","utf8Slice","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","functionParams","functionName","Codegen","formatStringOrScope","verbose","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","body","functionNameOverride","readFile","contents","binary","overrideMimeType","isAbsolute","normalize","absolute","originPath","includePath","alreadyNormalized","protocol","MethodType","PushType","ClientInfo","user","conn_info","chan_info","Publication","uid","Join","Leave","Unsub","Sub","ConnectRequest","ConnectResult","version","RefreshRequest","RefreshResult","SubscribeRequest","SubscribeResult","SubRefreshRequest","SubRefreshResult","UnsubscribeRequest","UnsubscribeResult","PublishRequest","PublishResult","PresenceRequest","PresenceResult","presence","PresenceStatsRequest","PresenceStatsResult","num_clients","num_users","HistoryRequest","HistoryResult","PingRequest","PingResult","RPCRequest","RPCResult","SendRequest"],"mappings":"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","file":"centrifuge.protobuf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 32);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = __webpack_require__(1);\n\nvar roots = __webpack_require__(20);\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = __webpack_require__(46);\nutil.fetch   = __webpack_require__(47);\nutil.path    = __webpack_require__(48);\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = __webpack_require__(22);\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = __webpack_require__(2);\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(30))());\n    }\n});\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = __webpack_require__(17);\n\n// converts to / from base64 encoded strings\nutil.base64 = __webpack_require__(37);\n\n// base class of rpc.Service\nutil.EventEmitter = __webpack_require__(38);\n\n// float handling accross browsers\nutil.float = __webpack_require__(39);\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = __webpack_require__(18);\n\n// converts to / from utf8 encoded strings\nutil.utf8 = __webpack_require__(40);\n\n// provides a node-like buffer pool in the browser\nutil.pool = __webpack_require__(41);\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = __webpack_require__(42);\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(4);\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = __webpack_require__(8),\n    util = __webpack_require__(0);\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = __webpack_require__(0);\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(4);\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = __webpack_require__(2),\n    types = __webpack_require__(9),\n    util  = __webpack_require__(0);\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startsWith = startsWith;\nexports.isFunction = isFunction;\nexports.log = log;\nexports.backoff = backoff;\nexports.errorExists = errorExists;\nexports.extend = extend;\nfunction startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nfunction isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nfunction log(level, args) {\n  if (global.console) {\n    var logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nfunction backoff(step, min, max) {\n  var jitter = 0.5 * Math.random();\n  var interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nfunction errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nfunction extend(a, b) {\n  for (var key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(4);\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = __webpack_require__(5),\n    util     = __webpack_require__(0);\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = __webpack_require__(0);\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Centrifuge = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(6);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _subscription = __webpack_require__(11);\n\nvar _subscription2 = _interopRequireDefault(_subscription);\n\nvar _json = __webpack_require__(12);\n\nvar _utils = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _errorTimeout = 'timeout';\nvar _errorConnectionClosed = 'connection closed';\n\nvar Centrifuge = exports.Centrifuge = function (_EventEmitter) {\n  _inherits(Centrifuge, _EventEmitter);\n\n  function Centrifuge(url, options) {\n    _classCallCheck(this, Centrifuge);\n\n    var _this = _possibleConstructorReturn(this, (Centrifuge.__proto__ || Object.getPrototypeOf(Centrifuge)).call(this));\n\n    _this._url = url;\n    _this._websocket = null;\n    _this._sockjs = null;\n    _this._isSockjs = false;\n    _this._binary = false;\n    _this._methodType = null;\n    _this._pushType = null;\n    _this._encoder = null;\n    _this._decoder = null;\n    _this._status = 'disconnected';\n    _this._reconnect = true;\n    _this._reconnecting = false;\n    _this._transport = null;\n    _this._transportName = null;\n    _this._transportClosed = true;\n    _this._messageId = 0;\n    _this._clientID = null;\n    _this._refreshRequired = false;\n    _this._subs = {};\n    _this._serverSubs = {};\n    _this._lastSeq = {};\n    _this._lastGen = {};\n    _this._lastOffset = {};\n    _this._lastEpoch = {};\n    _this._messages = [];\n    _this._isBatching = false;\n    _this._isSubscribeBatching = false;\n    _this._privateChannels = {};\n    _this._numRefreshFailed = 0;\n    _this._refreshTimeout = null;\n    _this._pingTimeout = null;\n    _this._pongTimeout = null;\n    _this._subRefreshTimeouts = {};\n    _this._retries = 0;\n    _this._callbacks = {};\n    _this._latency = null;\n    _this._latencyStart = null;\n    _this._connectData = null;\n    _this._token = null;\n    _this._xhrID = 0;\n    _this._xhrs = {};\n    _this._dispatchPromise = Promise.resolve();\n    _this._config = {\n      debug: false,\n      websocket: null,\n      sockjs: null,\n      promise: null,\n      middleware: [],\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: ['websocket', 'xdr-streaming', 'xhr-streaming', 'eventsource', 'iframe-eventsource', 'iframe-htmlfile', 'xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling'],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    _this._configure(options);\n    return _this;\n  }\n\n  _createClass(Centrifuge, [{\n    key: 'setToken',\n    value: function setToken(token) {\n      this._token = token;\n    }\n  }, {\n    key: 'setConnectData',\n    value: function setConnectData(data) {\n      this._connectData = data;\n    }\n  }, {\n    key: 'setRefreshHeaders',\n    value: function setRefreshHeaders(headers) {\n      this._config.refreshHeaders = headers;\n    }\n  }, {\n    key: 'setRefreshParams',\n    value: function setRefreshParams(params) {\n      this._config.refreshParams = params;\n    }\n  }, {\n    key: 'setRefreshData',\n    value: function setRefreshData(data) {\n      this._config.refreshData = data;\n    }\n  }, {\n    key: 'setSubscribeHeaders',\n    value: function setSubscribeHeaders(headers) {\n      this._config.subscribeHeaders = headers;\n    }\n  }, {\n    key: 'setSubscribeParams',\n    value: function setSubscribeParams(params) {\n      this._config.subscribeParams = params;\n    }\n  }, {\n    key: 'middleware',\n    value: function middleware() {\n      for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n        fns[_key] = arguments[_key];\n      }\n\n      this._config.middleware = fns;\n    }\n  }, {\n    key: '_ajax',\n    value: function _ajax(url, params, headers, data, callback) {\n      var _this2 = this;\n\n      var query = '';\n      this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n      var xhr = global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP');\n\n      for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n          if (query.length > 0) {\n            query += '&';\n          }\n          query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n        }\n      }\n      if (query.length > 0) {\n        query = '?' + query;\n      }\n      xhr.open('POST', url + query, true);\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = true;\n      }\n\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      for (var headerName in headers) {\n        if (headers.hasOwnProperty(headerName)) {\n          xhr.setRequestHeader(headerName, headers[headerName]);\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var _data = void 0,\n                parsed = false;\n            try {\n              _data = JSON.parse(xhr.responseText);\n              parsed = true;\n            } catch (e) {\n              callback({\n                error: 'Invalid JSON. Data was: ' + xhr.responseText,\n                status: 200,\n                data: null\n              });\n            }\n            if (parsed) {\n              // prevents double execution.\n              callback({\n                data: _data,\n                status: 200\n              });\n            }\n          } else {\n            _this2._log('wrong status code in AJAX response', xhr.status);\n            callback({\n              status: xhr.status,\n              data: null\n            });\n          }\n        }\n      };\n      setTimeout(function () {\n        return xhr.send(JSON.stringify(data));\n      }, 20);\n      return xhr;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      (0, _utils.log)('info', arguments);\n    }\n  }, {\n    key: '_debug',\n    value: function _debug() {\n      if (this._config.debug === true) {\n        (0, _utils.log)('debug', arguments);\n      }\n    }\n  }, {\n    key: '_websocketSupported',\n    value: function _websocketSupported() {\n      if (this._config.websocket !== null) {\n        return true;\n      }\n      return !(typeof WebSocket !== 'function' && (typeof WebSocket === 'undefined' ? 'undefined' : _typeof(WebSocket)) !== 'object');\n    }\n  }, {\n    key: '_setFormat',\n    value: function _setFormat(format) {\n      if (this._formatOverride(format)) {\n        return;\n      }\n      if (format === 'protobuf') {\n        throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n      }\n      this._binary = false;\n      this._methodType = _json.JsonMethodType;\n      this._pushType = _json.JsonPushType;\n      this._encoder = new _json.JsonEncoder();\n      this._decoder = new _json.JsonDecoder();\n    }\n  }, {\n    key: '_formatOverride',\n    value: function _formatOverride(format) {\n      return false;\n    }\n  }, {\n    key: '_configure',\n    value: function _configure(configuration) {\n      if (!('Promise' in global)) {\n        throw new Error('Promise polyfill required');\n      }\n\n      (0, _utils.extend)(this._config, configuration || {});\n      this._debug('centrifuge config', this._config);\n\n      if (!this._url) {\n        throw new Error('url required');\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n        this._setFormat('protobuf');\n      } else {\n        this._setFormat('json');\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'http')) {\n        this._debug('client will try to connect to SockJS endpoint');\n        if (this._config.sockjs !== null) {\n          this._debug('SockJS explicitly provided in options');\n          this._sockjs = this._config.sockjs;\n        } else {\n          if (typeof global.SockJS === 'undefined') {\n            throw new Error('SockJS not found, use ws:// in url or include SockJS');\n          }\n          this._debug('use globally defined SockJS');\n          this._sockjs = global.SockJS;\n        }\n      } else {\n        this._debug('client will connect to websocket endpoint');\n      }\n    }\n  }, {\n    key: '_setStatus',\n    value: function _setStatus(newStatus) {\n      if (this._status !== newStatus) {\n        this._debug('Status', this._status, '->', newStatus);\n        this._status = newStatus;\n      }\n    }\n  }, {\n    key: '_isDisconnected',\n    value: function _isDisconnected() {\n      return this._status === 'disconnected';\n    }\n  }, {\n    key: '_isConnecting',\n    value: function _isConnecting() {\n      return this._status === 'connecting';\n    }\n  }, {\n    key: '_isConnected',\n    value: function _isConnected() {\n      return this._status === 'connected';\n    }\n  }, {\n    key: '_nextMessageId',\n    value: function _nextMessageId() {\n      return ++this._messageId;\n    }\n  }, {\n    key: '_resetRetry',\n    value: function _resetRetry() {\n      this._debug('reset retries count to 0');\n      this._retries = 0;\n    }\n  }, {\n    key: '_getRetryInterval',\n    value: function _getRetryInterval() {\n      var interval = (0, _utils.backoff)(this._retries, this._config.minRetry, this._config.maxRetry);\n\n      this._retries += 1;\n      return interval;\n    }\n  }, {\n    key: '_abortInflightXHRs',\n    value: function _abortInflightXHRs() {\n      for (var xhrID in this._xhrs) {\n        try {\n          this._xhrs[xhrID].abort();\n        } catch (e) {\n          this._debug('error aborting xhr', e);\n        }\n        delete this._xhrs[xhrID];\n      }\n    }\n  }, {\n    key: '_clearConnectedState',\n    value: function _clearConnectedState(reconnect) {\n      this._clientID = null;\n      this._stopPing();\n\n      // fire errbacks of registered outgoing calls.\n      for (var id in this._callbacks) {\n        if (this._callbacks.hasOwnProperty(id)) {\n          var callbacks = this._callbacks[id];\n          clearTimeout(callbacks.timeout);\n          var errback = callbacks.errback;\n          if (!errback) {\n            continue;\n          }\n          errback({ error: this._createErrorObject('disconnected') });\n        }\n      }\n      this._callbacks = {};\n\n      // fire unsubscribe events\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n\n          if (reconnect) {\n            if (sub._isSuccess()) {\n              sub._triggerUnsubscribe();\n              sub._recover = true;\n            }\n            if (sub._shouldResubscribe()) {\n              sub._setSubscribing();\n            }\n          } else {\n            sub._setUnsubscribed();\n          }\n        }\n      }\n\n      this._abortInflightXHRs();\n\n      // clear refresh timer\n      if (this._refreshTimeout !== null) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n\n      // clear sub refresh timers\n      for (var _channel in this._subRefreshTimeouts) {\n        if (this._subRefreshTimeouts.hasOwnProperty(_channel) && this._subRefreshTimeouts[_channel]) {\n          this._clearSubRefreshTimeout(_channel);\n        }\n      }\n      this._subRefreshTimeouts = {};\n\n      if (!this._reconnect) {\n        // completely clear subscriptions\n        this._subs = {};\n      }\n    }\n  }, {\n    key: '_isTransportOpen',\n    value: function _isTransportOpen() {\n      if (this._isSockjs) {\n        return this._transport && this._transport.transport && this._transport.transport.readyState === this._transport.transport.OPEN;\n      }\n      return this._transport && this._transport.readyState === this._transport.OPEN;\n    }\n  }, {\n    key: '_transportSend',\n    value: function _transportSend(commands) {\n      if (!commands.length) {\n        return true;\n      }\n\n      if (!this._isTransportOpen()) {\n        // resolve pending commands with error if transport is not open\n        for (var command in commands) {\n          var id = command.id;\n          if (!(id in this._callbacks)) {\n            continue;\n          }\n          var callbacks = this._callbacks[id];\n          clearTimeout(this._callbacks[id].timeout);\n          delete this._callbacks[id];\n          var errback = callbacks.errback;\n          errback({ error: this._createErrorObject(_errorConnectionClosed, 0) });\n        }\n        return false;\n      }\n      this._transport.send(this._encoder.encodeCommands(commands));\n      return true;\n    }\n  }, {\n    key: '_setupTransport',\n    value: function _setupTransport() {\n      var _this3 = this;\n\n      this._isSockjs = false;\n\n      // detect transport to use - SockJS or Websocket\n      if (this._sockjs !== null) {\n        var sockjsOptions = {\n          transports: this._config.sockjsTransports\n        };\n\n        if (this._config.sockjsServer !== null) {\n          sockjsOptions.server = this._config.sockjsServer;\n        }\n        this._isSockjs = true;\n        this._transport = new this._sockjs(this._url, null, sockjsOptions);\n      } else {\n        if (!this._websocketSupported()) {\n          this._debug('No Websocket support and no SockJS configured, can not connect');\n          return;\n        }\n        if (this._config.websocket !== null) {\n          this._websocket = this._config.websocket;\n        } else {\n          this._websocket = WebSocket;\n        }\n        this._transport = new this._websocket(this._url);\n        if (this._binary === true) {\n          this._transport.binaryType = 'arraybuffer';\n        }\n      }\n\n      this._transport.onopen = function () {\n        _this3._transportClosed = false;\n\n        if (_this3._isSockjs) {\n          _this3._transportName = 'sockjs-' + _this3._transport.transport;\n          _this3._transport.onheartbeat = function () {\n            return _this3._restartPing();\n          };\n        } else {\n          _this3._transportName = 'websocket';\n        }\n\n        // Can omit method here due to zero value.\n        var msg = {\n          // method: this._methodType.CONNECT\n        };\n\n        if (_this3._token || _this3._connectData) {\n          msg.params = {};\n        }\n\n        if (_this3._token) {\n          msg.params.token = _this3._token;\n        }\n\n        if (_this3._connectData) {\n          msg.params.data = _this3._connectData;\n        }\n\n        var subs = {};\n        var hasSubs = false;\n        for (var channel in _this3._serverSubs) {\n          if (_this3._serverSubs.hasOwnProperty(channel) && _this3._serverSubs[channel].recoverable) {\n            hasSubs = true;\n            var sub = {\n              'recover': true\n            };\n            if (_this3._serverSubs[channel].seq || _this3._serverSubs[channel].gen) {\n              if (_this3._serverSubs[channel].seq) {\n                sub['seq'] = _this3._serverSubs[channel].seq;\n              }\n              if (_this3._serverSubs[channel].gen) {\n                sub['gen'] = _this3._serverSubs[channel].gen;\n              }\n            } else {\n              if (_this3._serverSubs[channel].offset) {\n                sub['offset'] = _this3._serverSubs[channel].offset;\n              }\n            }\n            if (_this3._serverSubs[channel].epoch) {\n              sub['epoch'] = _this3._serverSubs[channel].epoch;\n            }\n            subs[channel] = sub;\n          }\n        }\n        if (hasSubs) {\n          if (!msg.params) {\n            msg.params = {};\n          }\n          msg.params.subs = subs;\n        }\n\n        _this3._latencyStart = new Date();\n        _this3._call(msg).then(function (resolveCtx) {\n          _this3._connectResponse(_this3._decoder.decodeCommandResult(_this3._methodType.CONNECT, resolveCtx.result), hasSubs);\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, function (rejectCtx) {\n          var err = rejectCtx.error;\n          if (err.code === 109) {\n            // token expired.\n            _this3._refreshRequired = true;\n          }\n          _this3._disconnect('connect error', true);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      };\n\n      this._transport.onerror = function (error) {\n        _this3._debug('transport level error', error);\n      };\n\n      this._transport.onclose = function (closeEvent) {\n        _this3._transportClosed = true;\n        var reason = _errorConnectionClosed;\n        var needReconnect = true;\n\n        if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n          try {\n            var advice = JSON.parse(closeEvent.reason);\n            _this3._debug('reason is an advice object', advice);\n            reason = advice.reason;\n            needReconnect = advice.reconnect;\n          } catch (e) {\n            reason = closeEvent.reason;\n            _this3._debug('reason is a plain string', reason);\n          }\n        }\n\n        // onTransportClose callback should be executed every time transport was closed.\n        // This can be helpful to catch failed connection events (because our disconnect\n        // event only called once and every future attempts to connect do not fire disconnect\n        // event again).\n        if (_this3._config.onTransportClose !== null) {\n          _this3._config.onTransportClose({\n            event: closeEvent,\n            reason: reason,\n            reconnect: needReconnect\n          });\n        }\n\n        _this3._disconnect(reason, needReconnect);\n\n        if (_this3._reconnect === true) {\n          _this3._reconnecting = true;\n          var interval = _this3._getRetryInterval();\n\n          _this3._debug('reconnect after ' + interval + ' milliseconds');\n          setTimeout(function () {\n            if (_this3._reconnect === true) {\n              if (_this3._refreshRequired) {\n                _this3._refresh();\n              } else {\n                _this3._connect();\n              }\n            }\n          }, interval);\n        }\n      };\n\n      this._transport.onmessage = function (event) {\n        _this3._dataReceived(event.data);\n      };\n    }\n  }, {\n    key: 'rpc',\n    value: function rpc(data) {\n      return this._rpc('', data);\n    }\n  }, {\n    key: 'namedRPC',\n    value: function namedRPC(method, data) {\n      return this._rpc(method, data);\n    }\n  }, {\n    key: '_rpc',\n    value: function _rpc(method, data) {\n      var _this4 = this;\n\n      var params = {\n        data: data\n      };\n      if (method !== '') {\n        params.method = method;\n      };\n      var msg = {\n        method: this._methodType.RPC,\n        params: params\n      };\n\n      if (!this.isConnected()) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      }\n\n      return this._call(msg).then(function (resolveCtx) {\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n        return _this4._decoder.decodeCommandResult(_this4._methodType.RPC, resolveCtx.result);\n      }, function (rejectCtx) {\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n        return Promise.reject(rejectCtx.error);\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(data) {\n      var msg = {\n        method: this._methodType.SEND,\n        params: {\n          data: data\n        }\n      };\n\n      if (!this.isConnected()) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      }\n\n      var sent = this._transportSend([msg]); // can send async message to server without id set\n      if (!sent) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      };\n      return Promise.resolve({});\n    }\n  }, {\n    key: 'publish',\n    value: function publish(channel, data) {\n      var msg = {\n        method: this._methodType.PUBLISH,\n        params: {\n          channel: channel,\n          data: data\n        }\n      };\n\n      if (!this.isConnected()) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      }\n\n      return this._call(msg).then(function (result) {\n        if (result.next) {\n          result.next();\n        }\n        return {};\n      });\n    }\n  }, {\n    key: '_dataReceived',\n    value: function _dataReceived(data) {\n      var _this5 = this;\n\n      var replies = this._decoder.decodeReplies(data);\n      // we have to guarantee order of events in replies processing - i.e. start processing\n      // next reply only when we finished processing of current one. Without syncing things in\n      // this way we could get wrong publication events order as reply promises resolve\n      // on next loop tick so for loop continues before we finished emitting all reply events.\n      this._dispatchPromise = this._dispatchPromise.then(function () {\n        var finishDispatch = void 0;\n        _this5._dispatchPromise = new Promise(function (resolve) {\n          finishDispatch = resolve;\n        });\n        _this5._dispatchSynchronized(replies, finishDispatch);\n      });\n      this._restartPing();\n    }\n  }, {\n    key: '_hookMiddleware',\n    value: function _hookMiddleware(data) {\n      var middleware = this._config.middleware;\n\n      if (Array.isArray(middleware)) {\n        middleware.forEach(function (mw) {\n          if (typeof mw === 'function') {\n            mw(data);\n          }\n        });\n      }\n\n      if (typeof middleware === 'function') {\n        middleware(data);\n      }\n    }\n  }, {\n    key: '_dispatchSynchronized',\n    value: function _dispatchSynchronized(replies, finishDispatch) {\n      var _this6 = this;\n\n      var p = Promise.resolve();\n\n      var _loop = function _loop(i) {\n        if (replies.hasOwnProperty(i)) {\n          p = p.then(function () {\n            _this6._hookMiddleware(replies[i]);\n            return _this6._dispatchReply(replies[i]);\n          });\n        }\n      };\n\n      for (var i in replies) {\n        _loop(i);\n      }\n      p = p.then(function () {\n        finishDispatch();\n      });\n    }\n  }, {\n    key: '_dispatchReply',\n    value: function _dispatchReply(reply) {\n      var next;\n      var p = new Promise(function (resolve) {\n        next = resolve;\n      });\n\n      if (reply === undefined || reply === null) {\n        this._debug('dispatch: got undefined or null reply');\n        next();\n        return p;\n      }\n\n      var id = reply.id;\n\n      if (id && id > 0) {\n        this._handleReply(reply, next);\n      } else {\n        this._handlePush(reply.result, next);\n      }\n\n      return p;\n    }\n  }, {\n    key: '_call',\n    value: function _call(msg) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        var id = _this7._addMessage(msg);\n        _this7._registerCall(id, resolve, reject);\n      });\n    }\n  }, {\n    key: '_connect',\n    value: function _connect() {\n      if (this.isConnected()) {\n        this._debug('connect called when already connected');\n        return;\n      }\n      if (this._status === 'connecting') {\n        return;\n      }\n\n      this._debug('start connecting');\n      this._setStatus('connecting');\n      this._clientID = null;\n      this._reconnect = true;\n      this._setupTransport();\n    }\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(reason, shouldReconnect) {\n\n      var reconnect = shouldReconnect || false;\n      if (reconnect === false) {\n        this._reconnect = false;\n      }\n\n      if (this._isDisconnected()) {\n        if (!reconnect) {\n          this._clearConnectedState(reconnect);\n        }\n        return;\n      }\n\n      this._clearConnectedState(reconnect);\n\n      this._debug('disconnected:', reason, shouldReconnect);\n      this._setStatus('disconnected');\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (this._reconnecting === false) {\n        // fire unsubscribe events for server side subs.\n        for (var channel in this._serverSubs) {\n          if (this._serverSubs.hasOwnProperty(channel)) {\n            this.emit('unsubscribe', { channel: channel });\n          }\n        }\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n\n      if (reconnect === false) {\n        this._subs = {};\n        this._serverSubs = {};\n      }\n\n      if (!this._transportClosed) {\n        this._transport.close();\n      }\n    }\n  }, {\n    key: '_refreshFailed',\n    value: function _refreshFailed() {\n      this._numRefreshFailed = 0;\n      if (!this._isDisconnected()) {\n        this._disconnect('refresh failed', false);\n      }\n      if (this._config.onRefreshFailed !== null) {\n        this._config.onRefreshFailed();\n      }\n    }\n  }, {\n    key: '_refresh',\n    value: function _refresh() {\n      var _this8 = this;\n\n      // ask application for new connection token.\n      this._debug('refresh token');\n\n      if (this._config.refreshAttempts === 0) {\n        this._debug('refresh attempts set to 0, do not send refresh request at all');\n        this._refreshFailed();\n        return;\n      }\n\n      if (this._refreshTimeout !== null) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n\n      var clientID = this._clientID;\n      var xhrID = this._newXHRID();\n\n      var cb = function cb(resp) {\n        if (xhrID in _this8._xhrs) {\n          delete _this8._xhrs[xhrID];\n        }\n        if (_this8._clientID !== clientID) {\n          return;\n        }\n        if (resp.error || resp.status !== 200) {\n          // We don't perform any connection status related actions here as we are\n          // relying on server that must close connection eventually.\n          if (resp.error) {\n            _this8._debug('error refreshing connection token', resp.error);\n          } else {\n            _this8._debug('error refreshing connection token: wrong status code', resp.status);\n          }\n          _this8._numRefreshFailed++;\n          if (_this8._refreshTimeout !== null) {\n            clearTimeout(_this8._refreshTimeout);\n            _this8._refreshTimeout = null;\n          }\n          if (_this8._config.refreshAttempts !== null && _this8._numRefreshFailed >= _this8._config.refreshAttempts) {\n            _this8._refreshFailed();\n            return;\n          }\n          var jitter = Math.round(Math.random() * 1000 * Math.max(_this8._numRefreshFailed, 20));\n          var interval = _this8._config.refreshInterval + jitter;\n          _this8._refreshTimeout = setTimeout(function () {\n            return _this8._refresh();\n          }, interval);\n          return;\n        }\n        _this8._numRefreshFailed = 0;\n        _this8._token = resp.data.token;\n        if (!_this8._token) {\n          _this8._refreshFailed();\n          return;\n        }\n        if (_this8._isDisconnected() && _this8._reconnect) {\n          _this8._debug('token refreshed, connect from scratch');\n          _this8._connect();\n        } else {\n          _this8._debug('send refreshed token');\n          var msg = {\n            method: _this8._methodType.REFRESH,\n            params: {\n              token: _this8._token\n            }\n          };\n          _this8._call(msg).then(function (resolveCtx) {\n            _this8._refreshResponse(_this8._decoder.decodeCommandResult(_this8._methodType.REFRESH, resolveCtx.result));\n            if (resolveCtx.next) {\n              resolveCtx.next();\n            }\n          }, function (rejectCtx) {\n            _this8._refreshError(rejectCtx.error);\n            if (rejectCtx.next) {\n              rejectCtx.next();\n            }\n          });\n        }\n      };\n\n      if (this._config.onRefresh !== null) {\n        var context = {};\n        this._config.onRefresh(context, cb);\n      } else {\n        var xhr = this._ajax(this._config.refreshEndpoint, this._config.refreshParams, this._config.refreshHeaders, this._config.refreshData, cb);\n        this._xhrs[xhrID] = xhr;\n      }\n    }\n  }, {\n    key: '_refreshError',\n    value: function _refreshError(err) {\n      var _this9 = this;\n\n      this._debug('refresh error', err);\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      var interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n      this._refreshTimeout = setTimeout(function () {\n        return _this9._refresh();\n      }, interval);\n    }\n  }, {\n    key: '_refreshResponse',\n    value: function _refreshResponse(result) {\n      var _this10 = this;\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (result.expires) {\n        this._clientID = result.client;\n        this._refreshTimeout = setTimeout(function () {\n          return _this10._refresh();\n        }, this._getTTLMilliseconds(result.ttl));\n      }\n    }\n  }, {\n    key: '_newXHRID',\n    value: function _newXHRID() {\n      this._xhrID++;\n      return this._xhrID;\n    }\n  }, {\n    key: '_subRefresh',\n    value: function _subRefresh(channel) {\n      var _this11 = this;\n\n      this._debug('refresh subscription token for channel', channel);\n\n      if (this._subRefreshTimeouts[channel] !== undefined) {\n        this._clearSubRefreshTimeout(channel);\n      } else {\n        return;\n      }\n\n      var clientID = this._clientID;\n      var xhrID = this._newXHRID();\n\n      var cb = function cb(resp) {\n        if (xhrID in _this11._xhrs) {\n          delete _this11._xhrs[xhrID];\n        }\n        if (resp.error || resp.status !== 200 || _this11._clientID !== clientID) {\n          return;\n        }\n        var channelsData = {};\n        if (resp.data.channels) {\n          for (var i in resp.data.channels) {\n            var channelData = resp.data.channels[i];\n            if (!channelData.channel) {\n              continue;\n            }\n            channelsData[channelData.channel] = channelData.token;\n          }\n        }\n\n        var token = channelsData[channel];\n        if (!token) {\n          return;\n        }\n        var msg = {\n          method: _this11._methodType.SUB_REFRESH,\n          params: {\n            channel: channel,\n            token: token\n          }\n        };\n\n        var sub = _this11._getSub(channel);\n        if (sub === null) {\n          return;\n        }\n\n        _this11._call(msg).then(function (resolveCtx) {\n          _this11._subRefreshResponse(channel, _this11._decoder.decodeCommandResult(_this11._methodType.SUB_REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, function (rejectCtx) {\n          _this11._subRefreshError(channel, rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      };\n\n      var data = {\n        client: this._clientID,\n        channels: [channel]\n      };\n\n      if (this._config.onPrivateSubscribe !== null) {\n        this._config.onPrivateSubscribe({\n          data: data\n        }, cb);\n      } else {\n        var xhr = this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n        this._xhrs[xhrID] = xhr;\n      }\n    }\n  }, {\n    key: '_clearSubRefreshTimeout',\n    value: function _clearSubRefreshTimeout(channel) {\n      if (this._subRefreshTimeouts[channel] !== undefined) {\n        clearTimeout(this._subRefreshTimeouts[channel]);\n        delete this._subRefreshTimeouts[channel];\n      }\n    }\n  }, {\n    key: '_subRefreshError',\n    value: function _subRefreshError(channel, err) {\n      var _this12 = this;\n\n      this._debug('subscription refresh error', channel, err);\n      this._clearSubRefreshTimeout(channel);\n      var sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n      var jitter = Math.round(Math.random() * 1000);\n      var subRefreshTimeout = setTimeout(function () {\n        return _this12._subRefresh(channel);\n      }, this._config.subRefreshInterval + jitter);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      return;\n    }\n  }, {\n    key: '_subRefreshResponse',\n    value: function _subRefreshResponse(channel, result) {\n      var _this13 = this;\n\n      this._debug('subscription refresh success', channel);\n      this._clearSubRefreshTimeout(channel);\n      var sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n      if (result.expires === true) {\n        var subRefreshTimeout = setTimeout(function () {\n          return _this13._subRefresh(channel);\n        }, this._getTTLMilliseconds(result.ttl));\n        this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      }\n      return;\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe(sub, isResubscribe) {\n      var _this14 = this;\n\n      this._debug('subscribing on', sub.channel);\n      var channel = sub.channel;\n\n      if (!(channel in this._subs)) {\n        this._subs[channel] = sub;\n      }\n\n      if (!this.isConnected()) {\n        // subscribe will be called later\n        sub._setNew();\n        return;\n      }\n\n      sub._setSubscribing(isResubscribe);\n\n      var msg = {\n        method: this._methodType.SUBSCRIBE,\n        params: {\n          channel: channel\n        }\n      };\n\n      // If channel name does not start with privateChannelPrefix - then we\n      // can just send subscription message to Centrifuge. If channel name\n      // starts with privateChannelPrefix - then this is a private channel\n      // and we should ask web application backend for permission first.\n      if ((0, _utils.startsWith)(channel, this._config.privateChannelPrefix)) {\n        // private channel.\n        if (this._isSubscribeBatching) {\n          this._privateChannels[channel] = true;\n        } else {\n          this.startSubscribeBatching();\n          this._subscribe(sub);\n          this.stopSubscribeBatching();\n        }\n      } else {\n        var recover = sub._needRecover();\n\n        if (recover === true) {\n          msg.params.recover = true;\n          var seq = this._getLastSeq(channel);\n          var gen = this._getLastGen(channel);\n          if (seq || gen) {\n            if (seq) {\n              msg.params.seq = seq;\n            }\n            if (gen) {\n              msg.params.gen = gen;\n            }\n          } else {\n            var offset = this._getLastOffset(channel);\n            if (offset) {\n              msg.params.offset = offset;\n            }\n          }\n          var epoch = this._getLastEpoch(channel);\n          if (epoch) {\n            msg.params.epoch = epoch;\n          }\n        }\n\n        this._call(msg).then(function (resolveCtx) {\n          _this14._subscribeResponse(channel, recover, _this14._decoder.decodeCommandResult(_this14._methodType.SUBSCRIBE, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, function (rejectCtx) {\n          _this14._subscribeError(channel, rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    }\n  }, {\n    key: '_unsubscribe',\n    value: function _unsubscribe(sub) {\n      delete this._subs[sub.channel];\n      delete this._lastOffset[sub.channel];\n      delete this._lastSeq[sub.channel];\n      delete this._lastGen[sub.channel];\n      if (this.isConnected()) {\n        // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n        this._addMessage({\n          method: this._methodType.UNSUBSCRIBE,\n          params: {\n            channel: sub.channel\n          }\n        });\n      }\n    }\n  }, {\n    key: '_getTTLMilliseconds',\n    value: function _getTTLMilliseconds(ttl) {\n      // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n      return Math.min(ttl * 1000, 2147483647);\n    }\n  }, {\n    key: 'getSub',\n    value: function getSub(channel) {\n      return this._getSub(channel);\n    }\n  }, {\n    key: '_getSub',\n    value: function _getSub(channel) {\n      var sub = this._subs[channel];\n      if (!sub) {\n        return null;\n      }\n      return sub;\n    }\n  }, {\n    key: '_isServerSub',\n    value: function _isServerSub(channel) {\n      return this._serverSubs[channel] !== undefined;\n    }\n  }, {\n    key: '_connectResponse',\n    value: function _connectResponse(result, isRecover) {\n      var _this15 = this;\n\n      var wasReconnecting = this._reconnecting;\n      this._reconnecting = false;\n      this._resetRetry();\n      this._refreshRequired = false;\n\n      if (this.isConnected()) {\n        return;\n      }\n\n      if (this._latencyStart !== null) {\n        this._latency = new Date().getTime() - this._latencyStart.getTime();\n        this._latencyStart = null;\n      }\n\n      this._clientID = result.client;\n      this._setStatus('connected');\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n\n      if (result.expires) {\n        this._refreshTimeout = setTimeout(function () {\n          return _this15._refresh();\n        }, this._getTTLMilliseconds(result.ttl));\n      }\n\n      this.startBatching();\n      this.startSubscribeBatching();\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n          if (sub._shouldResubscribe()) {\n            this._subscribe(sub, wasReconnecting);\n          }\n        }\n      }\n      this.stopSubscribeBatching();\n      this.stopBatching();\n\n      this._startPing();\n\n      var ctx = {\n        client: result.client,\n        transport: this._transportName,\n        latency: this._latency\n      };\n      if (result.data) {\n        ctx.data = result.data;\n      }\n\n      this.emit('connect', ctx);\n\n      if (result.subs) {\n        this._processServerSubs(result.subs, isRecover);\n      }\n    }\n  }, {\n    key: '_processServerSubs',\n    value: function _processServerSubs(subs, isRecover) {\n      for (var channel in subs) {\n        if (subs.hasOwnProperty(channel)) {\n          var sub = subs[channel];\n          var recovered = sub.recovered === true;\n          var subCtx = { channel: channel, isResubscribe: isRecover, recovered: recovered };\n          this.emit('subscribe', subCtx);\n        }\n      }\n      for (var _channel2 in subs) {\n        if (subs.hasOwnProperty(_channel2)) {\n          var _sub = subs[_channel2];\n          if (_sub.recovered) {\n            var pubs = _sub.publications;\n            if (pubs && pubs.length > 0) {\n\n              // handle legacy order.\n              // TODO: remove as soon as Centrifuge v1 released.\n              if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n                pubs = pubs.reverse();\n              }\n\n              for (var i in pubs) {\n                if (pubs.hasOwnProperty(i)) {\n                  this._handlePublication(_channel2, pubs[i]);\n                }\n              }\n            }\n          }\n          this._serverSubs[_channel2] = {\n            'seq': _sub.seq,\n            'gen': _sub.gen,\n            'offset': _sub.offset,\n            'epoch': _sub.epoch,\n            'recoverable': _sub.recoverable\n          };\n        }\n      }\n    }\n  }, {\n    key: '_stopPing',\n    value: function _stopPing() {\n      if (this._pongTimeout !== null) {\n        clearTimeout(this._pongTimeout);\n        this._pongTimeout = null;\n      }\n      if (this._pingTimeout !== null) {\n        clearTimeout(this._pingTimeout);\n        this._pingTimeout = null;\n      }\n    }\n  }, {\n    key: '_startPing',\n    value: function _startPing() {\n      var _this16 = this;\n\n      if (this._config.ping !== true || this._config.pingInterval <= 0) {\n        return;\n      }\n      if (!this.isConnected()) {\n        return;\n      }\n\n      this._pingTimeout = setTimeout(function () {\n        if (!_this16.isConnected()) {\n          _this16._stopPing();\n          return;\n        }\n        _this16.ping();\n        _this16._pongTimeout = setTimeout(function () {\n          _this16._disconnect('no ping', true);\n        }, _this16._config.pongWaitTimeout);\n      }, this._config.pingInterval);\n    }\n  }, {\n    key: '_restartPing',\n    value: function _restartPing() {\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_subscribeError',\n    value: function _subscribeError(channel, error) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n      if (error.code === 0 && error.message === _errorTimeout) {\n        // client side timeout.\n        this._disconnect('timeout', true);\n        return;\n      }\n      sub._setSubscribeError(error);\n    }\n  }, {\n    key: '_subscribeResponse',\n    value: function _subscribeResponse(channel, isRecover, result) {\n      var _this17 = this;\n\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n\n      var recovered = false;\n      if ('recovered' in result) {\n        recovered = result.recovered;\n      }\n      sub._setSubscribeSuccess(recovered);\n\n      var pubs = result.publications;\n      if (pubs && pubs.length > 0) {\n        if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n          // handle legacy order.\n          pubs = pubs.reverse();\n        }\n        for (var i in pubs) {\n          if (pubs.hasOwnProperty(i)) {\n            this._handlePublication(channel, pubs[i]);\n          }\n        }\n      }\n\n      if (result.recoverable && (!isRecover || !recovered)) {\n        this._lastSeq[channel] = result.seq || 0;\n        this._lastGen[channel] = result.gen || 0;\n        this._lastOffset[channel] = result.offset || 0;\n      }\n\n      this._lastEpoch[channel] = result.epoch || '';\n\n      if (result.recoverable) {\n        sub._recoverable = true;\n      }\n\n      if (result.expires === true) {\n        var subRefreshTimeout = setTimeout(function () {\n          return _this17._subRefresh(channel);\n        }, this._getTTLMilliseconds(result.ttl));\n        this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      }\n    }\n  }, {\n    key: '_handleReply',\n    value: function _handleReply(reply, next) {\n      var id = reply.id;\n      var result = reply.result;\n\n      if (!(id in this._callbacks)) {\n        next();\n        return;\n      }\n      var callbacks = this._callbacks[id];\n      clearTimeout(this._callbacks[id].timeout);\n      delete this._callbacks[id];\n\n      if (!(0, _utils.errorExists)(reply)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n          return;\n        }\n        callback({ result: result, next: next });\n      } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n          next();\n          return;\n        }\n        var error = reply.error;\n        errback({ error: error, next: next });\n      }\n    }\n  }, {\n    key: '_handleJoin',\n    value: function _handleJoin(channel, join) {\n      var ctx = { 'info': join.info };\n      var sub = this._getSub(channel);\n      if (!sub) {\n        if (this._isServerSub(channel)) {\n          ctx.channel = channel;\n          this.emit('join', ctx);\n        }\n        return;\n      }\n      sub.emit('join', ctx);\n    }\n  }, {\n    key: '_handleLeave',\n    value: function _handleLeave(channel, leave) {\n      var ctx = { 'info': leave.info };\n      var sub = this._getSub(channel);\n      if (!sub) {\n        if (this._isServerSub(channel)) {\n          ctx.channel = channel;\n          this.emit('leave', ctx);\n        }\n        return;\n      }\n      sub.emit('leave', ctx);\n    }\n  }, {\n    key: '_handleUnsub',\n    value: function _handleUnsub(channel, unsub) {\n      var ctx = {};\n      var sub = this._getSub(channel);\n      if (!sub) {\n        if (this._isServerSub(channel)) {\n          delete this._serverSubs[channel];\n          ctx.channel = channel;\n          this.emit('unsubscribe', ctx);\n        }\n        return;\n      }\n      sub.unsubscribe();\n      if (unsub.resubscribe === true) {\n        sub.subscribe();\n      }\n    }\n  }, {\n    key: '_handleSub',\n    value: function _handleSub(channel, sub) {\n      this._serverSubs[channel] = {\n        'seq': sub.seq,\n        'gen': sub.gen,\n        'offset': sub.offset,\n        'epoch': sub.epoch,\n        'recoverable': sub.recoverable\n      };\n      var ctx = { 'channel': channel, isResubscribe: false, recovered: false };\n      this.emit('subscribe', ctx);\n    }\n  }, {\n    key: '_handlePublication',\n    value: function _handlePublication(channel, pub) {\n      var sub = this._getSub(channel);\n      var ctx = {\n        'data': pub.data,\n        'seq': pub.seq,\n        'gen': pub.gen,\n        'offset': pub.offset\n      };\n      if (pub.info) {\n        ctx.info = pub.info;\n      }\n      if (!sub) {\n        if (this._isServerSub(channel)) {\n          if (pub.seq !== undefined) {\n            this._serverSubs[channel].seq = pub.seq;\n          }\n          if (pub.gen !== undefined) {\n            this._serverSubs[channel].gen = pub.gen;\n          }\n          if (pub.offset !== undefined) {\n            this._serverSubs[channel].offset = pub.offset;\n          }\n          ctx.channel = channel;\n          this.emit('publish', ctx);\n        }\n        return;\n      }\n      if (pub.seq !== undefined) {\n        this._lastSeq[channel] = pub.seq;\n      }\n      if (pub.gen !== undefined) {\n        this._lastGen[channel] = pub.gen;\n      }\n      if (pub.offset !== undefined) {\n        this._lastOffset[channel] = pub.offset;\n      }\n      sub.emit('publish', ctx);\n    }\n  }, {\n    key: '_handleMessage',\n    value: function _handleMessage(message) {\n      this.emit('message', message.data);\n    }\n  }, {\n    key: '_handlePush',\n    value: function _handlePush(data, next) {\n      var push = this._decoder.decodePush(data);\n      var type = 0;\n      if ('type' in push) {\n        type = push['type'];\n      }\n      var channel = push.channel;\n\n      if (type === this._pushType.PUBLICATION) {\n        var pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n        this._handlePublication(channel, pub);\n      } else if (type === this._pushType.MESSAGE) {\n        var message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n        this._handleMessage(message);\n      } else if (type === this._pushType.JOIN) {\n        var join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n        this._handleJoin(channel, join);\n      } else if (type === this._pushType.LEAVE) {\n        var leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n        this._handleLeave(channel, leave);\n      } else if (type === this._pushType.UNSUB) {\n        var unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n        this._handleUnsub(channel, unsub);\n      } else if (type === this._pushType.SUB) {\n        var sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n        this._handleSub(channel, sub);\n      }\n      next();\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var messages = this._messages.slice(0);\n      this._messages = [];\n      this._transportSend(messages);\n    }\n  }, {\n    key: '_ping',\n    value: function _ping() {\n      var _this18 = this;\n\n      var msg = {\n        method: this._methodType.PING\n      };\n      this._call(msg).then(function (resolveCtx) {\n        _this18._pingResponse(_this18._decoder.decodeCommandResult(_this18._methodType.PING, resolveCtx.result));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, function (rejectCtx) {\n        _this18._debug('ping error', rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  }, {\n    key: '_pingResponse',\n    value: function _pingResponse(result) {\n      if (!this.isConnected()) {\n        return;\n      }\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_getLastSeq',\n    value: function _getLastSeq(channel) {\n      var lastSeq = this._lastSeq[channel];\n      if (lastSeq) {\n        return lastSeq;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastOffset',\n    value: function _getLastOffset(channel) {\n      var lastOffset = this._lastOffset[channel];\n      if (lastOffset) {\n        return lastOffset;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastGen',\n    value: function _getLastGen(channel) {\n      var lastGen = this._lastGen[channel];\n      if (lastGen) {\n        return lastGen;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastEpoch',\n    value: function _getLastEpoch(channel) {\n      var lastEpoch = this._lastEpoch[channel];\n      if (lastEpoch) {\n        return lastEpoch;\n      }\n      return '';\n    }\n  }, {\n    key: '_createErrorObject',\n    value: function _createErrorObject(message, code) {\n      var errObject = {\n        message: message,\n        code: code || 0\n      };\n\n      return errObject;\n    }\n  }, {\n    key: '_registerCall',\n    value: function _registerCall(id, callback, errback) {\n      var _this19 = this;\n\n      this._callbacks[id] = {\n        callback: callback,\n        errback: errback,\n        timeout: null\n      };\n      this._callbacks[id].timeout = setTimeout(function () {\n        delete _this19._callbacks[id];\n        if ((0, _utils.isFunction)(errback)) {\n          errback({ error: _this19._createErrorObject(_errorTimeout) });\n        }\n      }, this._config.timeout);\n    }\n  }, {\n    key: '_addMessage',\n    value: function _addMessage(message) {\n      var id = this._nextMessageId();\n      message.id = id;\n      if (this._isBatching === true) {\n        this._messages.push(message);\n      } else {\n        this._transportSend([message]);\n      }\n      return id;\n    }\n  }, {\n    key: 'isConnected',\n    value: function isConnected() {\n      return this._isConnected();\n    }\n  }, {\n    key: 'connect',\n    value: function connect() {\n      this._connect();\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this._disconnect('client', false);\n    }\n  }, {\n    key: 'ping',\n    value: function ping() {\n      return this._ping();\n    }\n  }, {\n    key: 'startBatching',\n    value: function startBatching() {\n      // start collecting messages without sending them to Centrifuge until flush\n      // method called\n      this._isBatching = true;\n    }\n  }, {\n    key: 'stopBatching',\n    value: function stopBatching() {\n      this._isBatching = false;\n      this._flush();\n    }\n  }, {\n    key: 'startSubscribeBatching',\n    value: function startSubscribeBatching() {\n      // start collecting private channels to create bulk authentication\n      // request to subscribeEndpoint when stopSubscribeBatching will be called\n      this._isSubscribeBatching = true;\n    }\n  }, {\n    key: 'stopSubscribeBatching',\n    value: function stopSubscribeBatching() {\n      var _this20 = this;\n\n      // create request to subscribeEndpoint with collected private channels\n      // to ask if this client can subscribe on each channel\n      this._isSubscribeBatching = false;\n      var authChannels = this._privateChannels;\n      this._privateChannels = {};\n\n      var channels = [];\n\n      for (var channel in authChannels) {\n        if (authChannels.hasOwnProperty(channel)) {\n          var sub = this._getSub(channel);\n          if (!sub) {\n            continue;\n          }\n          channels.push(channel);\n        }\n      }\n\n      if (channels.length === 0) {\n        this._debug('no private channels found, no need to make request');\n        return;\n      }\n\n      var data = {\n        client: this._clientID,\n        channels: channels\n      };\n\n      var clientID = this._clientID;\n      var xhrID = this._newXHRID();\n\n      var cb = function cb(resp) {\n        if (xhrID in _this20._xhrs) {\n          delete _this20._xhrs[xhrID];\n        }\n        if (_this20._clientID !== clientID) {\n          return;\n        }\n        if (resp.error || resp.status !== 200) {\n          _this20._debug('authorization request failed');\n          for (var i in channels) {\n            if (channels.hasOwnProperty(i)) {\n              var _channel3 = channels[i];\n              _this20._subscribeError(_channel3, _this20._createErrorObject('authorization request failed'));\n            }\n          }\n          return;\n        }\n\n        var channelsData = {};\n        if (resp.data.channels) {\n          for (var _i in resp.data.channels) {\n            var channelData = resp.data.channels[_i];\n            if (!channelData.channel) {\n              continue;\n            }\n            channelsData[channelData.channel] = channelData.token;\n          }\n        }\n\n        // try to send all subscriptions in one request.\n        var batch = false;\n\n        if (!_this20._isBatching) {\n          _this20.startBatching();\n          batch = true;\n        }\n\n        for (var _i2 in channels) {\n          if (channels.hasOwnProperty(_i2)) {\n            var _ret2 = function () {\n              var channel = channels[_i2];\n              var token = channelsData[channel];\n\n              if (!token) {\n                // subscription:error\n                _this20._subscribeError(channel, _this20._createErrorObject('permission denied', 103));\n                return 'continue';\n              } else {\n                var msg = {\n                  method: _this20._methodType.SUBSCRIBE,\n                  params: {\n                    channel: channel,\n                    token: token\n                  }\n                };\n\n                var _sub2 = _this20._getSub(channel);\n                if (_sub2 === null) {\n                  return 'continue';\n                }\n\n                var recover = _sub2._needRecover();\n\n                if (recover === true) {\n                  msg.params.recover = true;\n                  var seq = _this20._getLastSeq(channel);\n                  var gen = _this20._getLastGen(channel);\n                  if (seq || gen) {\n                    if (seq) {\n                      msg.params.seq = seq;\n                    }\n                    if (gen) {\n                      msg.params.gen = gen;\n                    }\n                  } else {\n                    var offset = _this20._getLastOffset(channel);\n                    if (offset) {\n                      msg.params.offset = offset;\n                    }\n                  }\n                  var epoch = _this20._getLastEpoch(channel);\n                  if (epoch) {\n                    msg.params.epoch = epoch;\n                  }\n                }\n                _this20._call(msg).then(function (resolveCtx) {\n                  _this20._subscribeResponse(channel, recover, _this20._decoder.decodeCommandResult(_this20._methodType.SUBSCRIBE, resolveCtx.result));\n                  if (resolveCtx.next) {\n                    resolveCtx.next();\n                  }\n                }, function (rejectCtx) {\n                  _this20._subscribeError(channel, rejectCtx.error);\n                  if (rejectCtx.next) {\n                    rejectCtx.next();\n                  }\n                });\n              }\n            }();\n\n            if (_ret2 === 'continue') continue;\n          }\n        }\n\n        if (batch) {\n          _this20.stopBatching();\n        }\n      };\n\n      if (this._config.onPrivateSubscribe !== null) {\n        this._config.onPrivateSubscribe({\n          data: data\n        }, cb);\n      } else {\n        var xhr = this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n        this._xhrs[xhrID] = xhr;\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(channel, events) {\n      var currentSub = this._getSub(channel);\n      if (currentSub !== null) {\n        currentSub._setEvents(events);\n        if (currentSub._isUnsubscribed()) {\n          currentSub.subscribe();\n        }\n        return currentSub;\n      }\n      var sub = new _subscription2.default(this, channel, events);\n      this._subs[channel] = sub;\n      sub.subscribe();\n      return sub;\n    }\n  }]);\n\n  return Centrifuge;\n}(_events2.default);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(6);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _utils = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _STATE_NEW = 0;\nvar _STATE_SUBSCRIBING = 1;\nvar _STATE_SUCCESS = 2;\nvar _STATE_ERROR = 3;\nvar _STATE_UNSUBSCRIBED = 4;\n\nvar Subscription = function (_EventEmitter) {\n  _inherits(Subscription, _EventEmitter);\n\n  function Subscription(centrifuge, channel, events) {\n    _classCallCheck(this, Subscription);\n\n    var _this = _possibleConstructorReturn(this, (Subscription.__proto__ || Object.getPrototypeOf(Subscription)).call(this));\n\n    _this.channel = channel;\n    _this._centrifuge = centrifuge;\n    _this._status = _STATE_NEW;\n    _this._error = null;\n    _this._isResubscribe = false;\n    _this._ready = false;\n    _this._subscriptionPromise = null;\n    _this._noResubscribe = false;\n    _this._recoverable = false;\n    _this._recover = false;\n    _this._setEvents(events);\n    _this._initializePromise();\n    _this._promises = {};\n    _this._promiseId = 0;\n    _this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n    return _this;\n  }\n\n  _createClass(Subscription, [{\n    key: '_nextPromiseId',\n    value: function _nextPromiseId() {\n      return ++this._promiseId;\n    }\n  }, {\n    key: '_initializePromise',\n    value: function _initializePromise() {\n      var _this2 = this;\n\n      // this helps us to wait until subscription will successfully\n      // subscribe and call actions such as presence, history etc in\n      // synchronous way.\n      this._ready = false;\n\n      this._subscriptionPromise = new Promise(function (resolve, reject) {\n        _this2._resolve = function (value) {\n          _this2._ready = true;\n          resolve(value);\n        };\n        _this2._reject = function (err) {\n          _this2._ready = true;\n          reject(err);\n        };\n      }).then(function () {}, function () {});\n    }\n  }, {\n    key: '_needRecover',\n    value: function _needRecover() {\n      return this._recoverable === true && this._recover === true;\n    }\n  }, {\n    key: '_setEvents',\n    value: function _setEvents(events) {\n      if (!events) {\n        return;\n      }\n      if ((0, _utils.isFunction)(events)) {\n        // events is just a function to handle publication received from channel.\n        this.on('publish', events);\n      } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n        var knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n        for (var i = 0, l = knownEvents.length; i < l; i++) {\n          var ev = knownEvents[i];\n          if (ev in events) {\n            this.on(ev, events[ev]);\n          }\n        }\n      }\n    }\n  }, {\n    key: '_isNew',\n    value: function _isNew() {\n      return this._status === _STATE_NEW;\n    }\n  }, {\n    key: '_isUnsubscribed',\n    value: function _isUnsubscribed() {\n      return this._status === _STATE_UNSUBSCRIBED;\n    }\n  }, {\n    key: '_isSubscribing',\n    value: function _isSubscribing() {\n      return this._status === _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_isReady',\n    value: function _isReady() {\n      return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_isSuccess',\n    value: function _isSuccess() {\n      return this._status === _STATE_SUCCESS;\n    }\n  }, {\n    key: '_isError',\n    value: function _isError() {\n      return this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_setNew',\n    value: function _setNew() {\n      this._status = _STATE_NEW;\n    }\n  }, {\n    key: '_setSubscribing',\n    value: function _setSubscribing(isResubscribe) {\n      this._isResubscribe = isResubscribe || false;\n      if (this._ready === true) {\n        // new promise for this subscription\n        this._initializePromise();\n      }\n      this._status = _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_setSubscribeSuccess',\n    value: function _setSubscribeSuccess(recovered) {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._status = _STATE_SUCCESS;\n      var successContext = this._getSubscribeSuccessContext(recovered);\n\n      this._recover = false;\n      this.emit('subscribe', successContext);\n      this._resolve(successContext);\n      for (var id in this._promises) {\n        clearTimeout(this._promises[id].timeout);\n        this._promises[id].resolve();\n        delete this._promises[id];\n      }\n    }\n  }, {\n    key: '_setSubscribeError',\n    value: function _setSubscribeError(err) {\n      if (this._status === _STATE_ERROR) {\n        return;\n      }\n      this._status = _STATE_ERROR;\n      this._error = err;\n      var errContext = this._getSubscribeErrorContext();\n      this.emit('error', errContext);\n      this._reject(errContext);\n      for (var id in this._promises) {\n        clearTimeout(this._promises[id].timeout);\n        this._promises[id].reject(err);\n        delete this._promises[id];\n      }\n    }\n  }, {\n    key: '_triggerUnsubscribe',\n    value: function _triggerUnsubscribe() {\n      this.emit('unsubscribe', {\n        channel: this.channel\n      });\n    }\n  }, {\n    key: '_setUnsubscribed',\n    value: function _setUnsubscribed(noResubscribe) {\n      this._centrifuge._clearSubRefreshTimeout(this.channel);\n      if (this._status === _STATE_UNSUBSCRIBED) {\n        return;\n      }\n      var needTrigger = this._status === _STATE_SUCCESS;\n      this._status = _STATE_UNSUBSCRIBED;\n      if (noResubscribe === true) {\n        this._recover = false;\n        this._noResubscribe = true;\n        delete this._centrifuge._lastSeq[this.channel];\n        delete this._centrifuge._lastGen[this.channel];\n        delete this._centrifuge._lastEpoch[this.channel];\n      }\n      if (needTrigger) {\n        this._triggerUnsubscribe();\n      }\n    }\n  }, {\n    key: '_shouldResubscribe',\n    value: function _shouldResubscribe() {\n      return !this._noResubscribe;\n    }\n  }, {\n    key: '_getSubscribeSuccessContext',\n    value: function _getSubscribeSuccessContext(recovered) {\n      return {\n        channel: this.channel,\n        isResubscribe: this._isResubscribe,\n        recovered: recovered\n      };\n    }\n  }, {\n    key: '_getSubscribeErrorContext',\n    value: function _getSubscribeErrorContext() {\n      var subscribeErrorContext = this._error;\n      subscribeErrorContext.channel = this.channel;\n      subscribeErrorContext.isResubscribe = this._isResubscribe;\n      return subscribeErrorContext;\n    }\n  }, {\n    key: 'ready',\n    value: function ready(callback, errback) {\n      if (this._ready) {\n        if (this._isSuccess()) {\n          callback(this._getSubscribeSuccessContext());\n        } else {\n          errback(this._getSubscribeErrorContext());\n        }\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._noResubscribe = false;\n      this._centrifuge._subscribe(this);\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      this._setUnsubscribed(true);\n      this._centrifuge._unsubscribe(this);\n    }\n  }, {\n    key: '_methodCall',\n    value: function _methodCall(message, type) {\n      var _this3 = this;\n\n      var methodCallPromise = new Promise(function (resolve, reject) {\n        var subPromise = void 0;\n        if (_this3._isSuccess()) {\n          subPromise = Promise.resolve();\n        } else if (_this3._isError()) {\n          subPromise = Promise.reject(_this3._error);\n        } else {\n          subPromise = new Promise(function (res, rej) {\n            var timeout = setTimeout(function () {\n              rej({ 'code': 0, 'message': 'timeout' });\n            }, _this3._centrifuge._config.timeout);\n            _this3._promises[_this3._nextPromiseId()] = {\n              timeout: timeout,\n              resolve: res,\n              reject: rej\n            };\n          });\n        }\n        subPromise.then(function () {\n          return _this3._centrifuge._call(message).then(function (resolveCtx) {\n            resolve(_this3._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n            if (resolveCtx.next) {\n              resolveCtx.next();\n            }\n          }, function (rejectCtx) {\n            reject(rejectCtx.error);\n            if (rejectCtx.next) {\n              rejectCtx.next();\n            }\n          });\n        }, function (error) {\n          reject(error);\n        });\n      });\n      return methodCallPromise;\n    }\n  }, {\n    key: 'publish',\n    value: function publish(data) {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PUBLISH,\n        params: {\n          channel: this.channel,\n          data: data\n        }\n      }, this._centrifuge._methodType.PUBLISH);\n    }\n  }, {\n    key: 'presence',\n    value: function presence() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE);\n    }\n  }, {\n    key: 'presenceStats',\n    value: function presenceStats() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE_STATS,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE_STATS);\n    }\n  }, {\n    key: 'history',\n    value: function history() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.HISTORY,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.HISTORY);\n    }\n  }]);\n\n  return Subscription;\n}(_events2.default);\n\nexports.default = Subscription;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JsonMethodType = exports.JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nvar JsonPushType = exports.JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4,\n  SUB: 5\n};\n\nvar JsonEncoder = exports.JsonEncoder = function () {\n  function JsonEncoder() {\n    _classCallCheck(this, JsonEncoder);\n  }\n\n  _createClass(JsonEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var encodedCommands = [];\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          encodedCommands.push(JSON.stringify(commands[i]));\n        }\n      }\n      return encodedCommands.join('\\n');\n    }\n  }]);\n\n  return JsonEncoder;\n}();\n\nvar JsonDecoder = exports.JsonDecoder = function () {\n  function JsonDecoder() {\n    _classCallCheck(this, JsonDecoder);\n  }\n\n  _createClass(JsonDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var encodedReplies = data.split('\\n');\n      for (var i in encodedReplies) {\n        if (encodedReplies.hasOwnProperty(i)) {\n          if (!encodedReplies[i]) {\n            continue;\n          }\n          var reply = JSON.parse(encodedReplies[i]);\n          replies.push(reply);\n        }\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      return data;\n    }\n  }, {\n    key: 'decodePush',\n    value: function decodePush(data) {\n      return data;\n    }\n  }, {\n    key: 'decodePushData',\n    value: function decodePushData(pushType, data) {\n      return data;\n    }\n  }]);\n\n  return JsonDecoder;\n}();\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Writer;\n\nvar util      = __webpack_require__(1);\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Reader;\n\nvar util      = __webpack_require__(1);\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(4);\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = __webpack_require__(5),\n    util  = __webpack_require__(0);\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Message;\n\nvar util = __webpack_require__(1);\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = __webpack_require__(45);\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = encoder;\n\nvar Enum     = __webpack_require__(2),\n    types    = __webpack_require__(9),\n    util     = __webpack_require__(0);\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = __webpack_require__(8);\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = __webpack_require__(2),\n    OneOf     = __webpack_require__(15),\n    Field     = __webpack_require__(5),\n    MapField  = __webpack_require__(23),\n    Service   = __webpack_require__(24),\n    Message   = __webpack_require__(16),\n    Reader    = __webpack_require__(14),\n    Writer    = __webpack_require__(13),\n    util      = __webpack_require__(0),\n    encoder   = __webpack_require__(21),\n    decoder   = __webpack_require__(26),\n    verifier  = __webpack_require__(27),\n    converter = __webpack_require__(28),\n    wrappers  = __webpack_require__(29);\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = MapField;\n\n// extends Field\nvar Field = __webpack_require__(5);\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = __webpack_require__(9),\n    util    = __webpack_require__(0);\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = __webpack_require__(8);\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = __webpack_require__(25),\n    util   = __webpack_require__(0),\n    rpc    = __webpack_require__(19);\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = __webpack_require__(4);\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = __webpack_require__(0);\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = decoder;\n\nvar Enum    = __webpack_require__(2),\n    types   = __webpack_require__(9),\n    util    = __webpack_require__(0);\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"k=r.%s()\", field.keyType)\n                (\"r.pos++\"); // assumes id 2 + value wireType\n            if (types.long[field.keyType] !== undefined) {\n                if (types.basic[type] === undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\n            } else {\n                if (types.basic[type] === undefined) gen\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[k]=r.%s()\", ref, type);\n            }\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = verifier;\n\nvar Enum      = __webpack_require__(2),\n    util      = __webpack_require__(0);\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = __webpack_require__(2),\n    util = __webpack_require__(0);\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = __webpack_require__(16);\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n            var type = this.lookup(object[\"@type\"]);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                return this.create({\n                    type_url: \"/\" + type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            object[\"@type\"] = message.$type.fullName;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = __webpack_require__(8);\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = __webpack_require__(5),\n    Enum    = __webpack_require__(2),\n    OneOf   = __webpack_require__(15),\n    util    = __webpack_require__(0);\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            util.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n\n\n/***/ }),\n/* 31 */,\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _protobuf = __webpack_require__(33);\n\nexports.default = _protobuf.CentrifugeProtobuf;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CentrifugeProtobuf = exports.ProtobufDecoder = exports.ProtobufEncoder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _centrifuge = __webpack_require__(10);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar protobuf = __webpack_require__(34);\nvar proto = protobuf.Root.fromJSON(__webpack_require__(49));\n\nvar methodValues = proto.lookupEnum('MethodType').values;\n\nvar protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nvar methodSchema = {\n  CONNECT: [proto.lookupType('protocol.ConnectRequest'), proto.lookupType('protocol.ConnectResult')],\n  REFRESH: [proto.lookupType('protocol.RefreshRequest'), proto.lookupType('protocol.RefreshResult')],\n  SUBSCRIBE: [proto.lookupType('protocol.SubscribeRequest'), proto.lookupType('protocol.SubscribeResult')],\n  SUB_REFRESH: [proto.lookupType('protocol.SubRefreshRequest'), proto.lookupType('protocol.SubRefreshResult')],\n  UNSUBSCRIBE: [proto.lookupType('protocol.UnsubscribeRequest'), proto.lookupType('protocol.UnsubscribeResult')],\n  PUBLISH: [proto.lookupType('protocol.PublishRequest'), proto.lookupType('protocol.PublishResult')],\n  PRESENCE: [proto.lookupType('protocol.PresenceRequest'), proto.lookupType('protocol.PresenceResult')],\n  PRESENCE_STATS: [proto.lookupType('protocol.PresenceStatsRequest'), proto.lookupType('protocol.PresenceStatsResult')],\n  HISTORY: [proto.lookupType('protocol.HistoryRequest'), proto.lookupType('protocol.HistoryResult')],\n  PING: [proto.lookupType('protocol.PingRequest'), proto.lookupType('protocol.PingResult')],\n  RPC: [proto.lookupType('protocol.RPCRequest'), proto.lookupType('protocol.RPCResult')],\n  SEND: [proto.lookupType('protocol.SendRequest'), null]\n};\n\nvar protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nvar PushSchema = {\n  PUBLICATION: proto.lookupType('protocol.Publication'),\n  JOIN: proto.lookupType('protocol.Join'),\n  LEAVE: proto.lookupType('protocol.Leave'),\n  UNSUB: proto.lookupType('protocol.Unsub'),\n  MESSAGE: proto.lookupType('protocol.Message'),\n  SUB: proto.lookupType('protocol.Sub')\n};\n\nvar Push = proto.lookupType('protocol.Push');\nvar Command = proto.lookupType('protocol.Command');\nvar Reply = proto.lookupType('protocol.Reply');\n\nvar ProtobufEncoder = exports.ProtobufEncoder = function () {\n  function ProtobufEncoder() {\n    _classCallCheck(this, ProtobufEncoder);\n  }\n\n  _createClass(ProtobufEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var writer = protobuf.Writer.create();\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          var command = Object.assign({}, commands[i]);\n          if (command.params) {\n            var type = void 0;\n            if (!command.method) {\n              command.method = protobufMethodType.CONNECT;\n            };\n            switch (command.method) {\n              case protobufMethodType.CONNECT:\n                type = methodSchema.CONNECT[0];\n                break;\n              case protobufMethodType.REFRESH:\n                type = methodSchema.REFRESH[0];\n                break;\n              case protobufMethodType.SUBSCRIBE:\n                type = methodSchema.SUBSCRIBE[0];\n                break;\n              case protobufMethodType.SUB_REFRESH:\n                type = methodSchema.SUB_REFRESH[0];\n                break;\n              case protobufMethodType.UNSUBSCRIBE:\n                type = methodSchema.UNSUBSCRIBE[0];\n                break;\n              case protobufMethodType.PUBLISH:\n                type = methodSchema.PUBLISH[0];\n                break;\n              case protobufMethodType.PRESENCE:\n                type = methodSchema.PRESENCE[0];\n                break;\n              case protobufMethodType.PRESENCE_STATS:\n                type = methodSchema.PRESENCE_STATS[0];\n                break;\n              case protobufMethodType.HISTORY:\n                type = methodSchema.HISTORY[0];\n                break;\n              case protobufMethodType.PING:\n                type = methodSchema.PING[0];\n                break;\n              case protobufMethodType.RPC:\n                type = methodSchema.RPC[0];\n                break;\n              case protobufMethodType.SEND:\n                type = methodSchema.SEND[0];\n                break;\n            }\n            command.params = type.encode(command.params).finish();\n          }\n          Command.encodeDelimited(command, writer);\n        }\n      }\n      return writer.finish();\n    }\n  }]);\n\n  return ProtobufEncoder;\n}();\n\nvar ProtobufDecoder = exports.ProtobufDecoder = function () {\n  function ProtobufDecoder() {\n    _classCallCheck(this, ProtobufDecoder);\n  }\n\n  _createClass(ProtobufDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var reader = protobuf.Reader.create(new Uint8Array(data));\n      while (reader.pos < reader.len) {\n        var reply = Reply.decodeDelimited(reader);\n        replies.push(reply);\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      var type;\n      switch (methodType) {\n        case protobufMethodType.CONNECT:\n          type = methodSchema.CONNECT[1];\n          break;\n        case protobufMethodType.REFRESH:\n          type = methodSchema.REFRESH[1];\n          break;\n        case protobufMethodType.SUBSCRIBE:\n          type = methodSchema.SUBSCRIBE[1];\n          break;\n        case protobufMethodType.SUB_REFRESH:\n          type = methodSchema.SUB_REFRESH[1];\n          break;\n        case protobufMethodType.UNSUBSCRIBE:\n          type = methodSchema.UNSUBSCRIBE[1];\n          break;\n        case protobufMethodType.PUBLISH:\n          type = methodSchema.PUBLISH[1];\n          break;\n        case protobufMethodType.PRESENCE:\n          type = methodSchema.PRESENCE[1];\n          break;\n        case protobufMethodType.PRESENCE_STATS:\n          type = methodSchema.PRESENCE_STATS[1];\n          break;\n        case protobufMethodType.HISTORY:\n          type = methodSchema.HISTORY[1];\n          break;\n        case protobufMethodType.PING:\n          type = methodSchema.PING[1];\n          break;\n        case protobufMethodType.RPC:\n          type = methodSchema.RPC[1];\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: 'decodePush',\n    value: function decodePush(data) {\n      return this._decode(Push, data);\n    }\n  }, {\n    key: 'decodePushData',\n    value: function decodePushData(pushType, data) {\n      var type;\n      switch (pushType) {\n        case protobufPushType.PUBLICATION:\n          type = PushSchema.PUBLICATION;\n          break;\n        case protobufPushType.MESSAGE:\n          type = PushSchema.MESSAGE;\n          break;\n        case protobufPushType.JOIN:\n          type = PushSchema.JOIN;\n          break;\n        case protobufPushType.LEAVE:\n          type = PushSchema.LEAVE;\n          break;\n        case protobufPushType.UNSUB:\n          type = PushSchema.UNSUB;\n          break;\n        case protobufPushType.SUB:\n          type = PushSchema.SUB;\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: '_decode',\n    value: function _decode(type, data) {\n      var res = void 0;\n      try {\n        res = type.decode(data);\n      } catch (err) {\n        return null;\n      }\n      return res;\n    }\n  }]);\n\n  return ProtobufDecoder;\n}();\n\nvar CentrifugeProtobuf = exports.CentrifugeProtobuf = function (_Centrifuge) {\n  _inherits(CentrifugeProtobuf, _Centrifuge);\n\n  function CentrifugeProtobuf() {\n    _classCallCheck(this, CentrifugeProtobuf);\n\n    return _possibleConstructorReturn(this, (CentrifugeProtobuf.__proto__ || Object.getPrototypeOf(CentrifugeProtobuf)).apply(this, arguments));\n  }\n\n  _createClass(CentrifugeProtobuf, [{\n    key: '_formatOverride',\n    value: function _formatOverride(format) {\n      if (format === 'protobuf') {\n        this._binary = true;\n        this._methodType = protobufMethodType;\n        this._pushType = protobufPushType;\n        this._encoder = new ProtobufEncoder();\n        this._decoder = new ProtobufDecoder();\n        return true;\n      }\n      return false;\n    }\n  }]);\n\n  return CentrifugeProtobuf;\n}(_centrifuge.Centrifuge);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// light library entry point.\n\n\nmodule.exports = __webpack_require__(35);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar protobuf = module.exports = __webpack_require__(36);\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = __webpack_require__(21);\nprotobuf.decoder          = __webpack_require__(26);\nprotobuf.verifier         = __webpack_require__(27);\nprotobuf.converter        = __webpack_require__(28);\n\n// Reflection\nprotobuf.ReflectionObject = __webpack_require__(4);\nprotobuf.Namespace        = __webpack_require__(8);\nprotobuf.Root             = __webpack_require__(30);\nprotobuf.Enum             = __webpack_require__(2);\nprotobuf.Type             = __webpack_require__(22);\nprotobuf.Field            = __webpack_require__(5);\nprotobuf.OneOf            = __webpack_require__(15);\nprotobuf.MapField         = __webpack_require__(23);\nprotobuf.Service          = __webpack_require__(24);\nprotobuf.Method           = __webpack_require__(25);\n\n// Runtime\nprotobuf.Message          = __webpack_require__(16);\nprotobuf.wrappers         = __webpack_require__(29);\n\n// Utility\nprotobuf.types            = __webpack_require__(9);\nprotobuf.util             = __webpack_require__(0);\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = __webpack_require__(13);\nprotobuf.BufferWriter = __webpack_require__(43);\nprotobuf.Reader       = __webpack_require__(14);\nprotobuf.BufferReader = __webpack_require__(44);\n\n// Utility\nprotobuf.util         = __webpack_require__(1);\nprotobuf.rpc          = __webpack_require__(19);\nprotobuf.roots        = __webpack_require__(20);\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = LongBits;\n\nvar util = __webpack_require__(1);\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = __webpack_require__(13);\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = __webpack_require__(1);\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = __webpack_require__(14);\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = __webpack_require__(1);\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = Service;\n\nvar util = __webpack_require__(1);\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = __webpack_require__(17),\r\n    inquire   = __webpack_require__(18);\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"nested\":{\"protocol\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"SUBSCRIBE\":1,\"UNSUBSCRIBE\":2,\"PUBLISH\":3,\"PRESENCE\":4,\"PRESENCE_STATS\":5,\"HISTORY\":6,\"PING\":7,\"SEND\":8,\"RPC\":9,\"REFRESH\":10,\"SUB_REFRESH\":11}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"PushType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3,\"MESSAGE\":4,\"SUB\":5}},\"Push\":{\"fields\":{\"type\":{\"type\":\"PushType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"conn_info\":{\"type\":\"bytes\",\"id\":3},\"chan_info\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"seq\":{\"type\":\"uint32\",\"id\":1},\"gen\":{\"type\":\"uint32\",\"id\":2},\"uid\":{\"type\":\"string\",\"id\":3},\"data\":{\"type\":\"bytes\",\"id\":4},\"info\":{\"type\":\"ClientInfo\",\"id\":5},\"offset\":{\"type\":\"uint64\",\"id\":6}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{\"resubscribe\":{\"type\":\"bool\",\"id\":1}}},\"Sub\":{\"fields\":{\"recoverable\":{\"type\":\"bool\",\"id\":1},\"seq\":{\"type\":\"uint32\",\"id\":2},\"gen\":{\"type\":\"uint32\",\"id\":3},\"epoch\":{\"type\":\"string\",\"id\":4},\"offset\":{\"type\":\"uint64\",\"id\":5}}},\"Message\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"ConnectRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2},\"subs\":{\"keyType\":\"string\",\"type\":\"SubscribeRequest\",\"id\":3}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4},\"data\":{\"type\":\"bytes\",\"id\":5},\"subs\":{\"keyType\":\"string\",\"type\":\"SubscribeResult\",\"id\":6}}},\"RefreshRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2},\"recover\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"offset\":{\"type\":\"uint64\",\"id\":7}}},\"SubscribeResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2},\"recoverable\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":7},\"recovered\":{\"type\":\"bool\",\"id\":8},\"offset\":{\"type\":\"uint64\",\"id\":9}}},\"SubRefreshRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2}}},\"SubRefreshResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResult\":{\"fields\":{\"num_clients\":{\"type\":\"uint32\",\"id\":1},\"num_users\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{}},\"PingResult\":{\"fields\":{}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1},\"method\":{\"type\":\"string\",\"id\":2}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"SendRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}}}}}}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// centrifuge.protobuf.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fe3a0c95ebde1c2cb254","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/minimal.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/enum.js\n// module id = 2\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/object.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/field.js\n// module id = 5\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/namespace.js\n// module id = 8\n// module chunks = 0","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/types.js\n// module id = 9\n// module chunks = 0","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._config = {\n      debug: false,\n      websocket: null,\n      sockjs: null,\n      promise: null,\n      middleware: [],\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n  middleware(...fns) {\n    this._config.middleware = fns;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData) {\n        msg.params = {};\n      }\n\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        if (!msg.params) {msg.params = {};}\n        msg.params.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result), hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    let params = {\n      data: data\n    };\n    if (method !== '') {\n      params.method = method;\n    };\n    const msg = {\n      method: this._methodType.RPC,\n      params: params\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(resolveCtx => {\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n      return this._decoder.decodeCommandResult(this._methodType.RPC, resolveCtx.result);\n    }, rejectCtx => {\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n      return Promise.reject(rejectCtx.error);\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(result => {\n      if (result.next) {\n        result.next();\n      }\n      return {};\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve =>{\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _hookMiddleware(data) {\n    const {middleware} = this._config;\n    if (Array.isArray(middleware)) {\n      middleware.forEach(mw => {\n        if (typeof mw === 'function') {\n          mw(data);\n        }\n      });\n    }\n\n    if (typeof middleware === 'function') {\n      middleware(data);\n    }\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          this._hookMiddleware(replies[i]);\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', {channel: channel});\n        }\n      }\n      this.emit('disconnect', {\n        reason: reason,\n        reconnect: reconnect\n      });\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          if (gen) {\n            msg.params.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            msg.params.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs, isRecover);\n    }\n  };\n\n  _processServerSubs(subs, isRecover) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const recovered = sub.recovered === true;\n        let subCtx = {channel: channel, isResubscribe: isRecover, recovered: recovered};\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = {'info': join.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = {'info': leave.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    const ctx = {'channel': channel, isResubscribe: false, recovered: false};\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUB) {\n      const sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  msg.params.seq = seq;\n                }\n                if (gen) {\n                  msg.params.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  msg.params.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(recovered) {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    const methodCallPromise = new Promise((resolve, reject) => {\n      let subPromise;\n      if (this._isSuccess()) {\n        subPromise = Promise.resolve();\n      } else if (this._isError()) {\n        subPromise = Promise.reject(this._error);\n      } else {\n        subPromise = new Promise((res, rej) => {\n          const timeout = setTimeout(function () {\n            rej({'code': 0, 'message': 'timeout'});\n          }, this._centrifuge._config.timeout);\n          this._promises[this._nextPromiseId()] = {\n            timeout: timeout,\n            resolve: res,\n            reject: rej\n          };\n        });\n      }\n      subPromise.then(\n        () => {\n          return this._centrifuge._call(message).then(\n            resolveCtx => {\n              resolve(this._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            },\n            rejectCtx => {\n              reject(rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            }\n          );\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n    return methodCallPromise;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4,\n  SUB: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/oneof.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/message.js\n// module id = 16\n// module chunks = 0","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/aspromise/index.js\n// module id = 17\n// module chunks = 0","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/inquire/index.js\n// module id = 18\n// module chunks = 0","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/roots.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/encoder.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/type.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/mapfield.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/service.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/method.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"k=r.%s()\", field.keyType)\n                (\"r.pos++\"); // assumes id 2 + value wireType\n            if (types.long[field.keyType] !== undefined) {\n                if (types.basic[type] === undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\n            } else {\n                if (types.basic[type] === undefined) gen\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[k]=r.%s()\", ref, type);\n            }\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/decoder.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/verifier.js\n// module id = 27\n// module chunks = 0","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/converter.js\n// module id = 28\n// module chunks = 0","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n            var type = this.lookup(object[\"@type\"]);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                return this.create({\n                    type_url: \"/\" + type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            object[\"@type\"] = message.$type.fullName;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/wrappers.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            util.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/root.js\n// module id = 30\n// module chunks = 0","import {CentrifugeProtobuf} from './protobuf.js';\nexport default CentrifugeProtobuf;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index_protobuf.js","import {Centrifuge} from './centrifuge.js';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst methodValues = proto.lookupEnum('MethodType').values;\n\nconst protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nconst methodSchema = {\n  CONNECT: [\n    proto.lookupType('protocol.ConnectRequest'),\n    proto.lookupType('protocol.ConnectResult')\n  ],\n  REFRESH: [\n    proto.lookupType('protocol.RefreshRequest'),\n    proto.lookupType('protocol.RefreshResult')\n  ],\n  SUBSCRIBE: [\n    proto.lookupType('protocol.SubscribeRequest'),\n    proto.lookupType('protocol.SubscribeResult')\n  ],\n  SUB_REFRESH: [\n    proto.lookupType('protocol.SubRefreshRequest'),\n    proto.lookupType('protocol.SubRefreshResult')\n  ],\n  UNSUBSCRIBE: [\n    proto.lookupType('protocol.UnsubscribeRequest'),\n    proto.lookupType('protocol.UnsubscribeResult')\n  ],\n  PUBLISH: [\n    proto.lookupType('protocol.PublishRequest'),\n    proto.lookupType('protocol.PublishResult')\n  ],\n  PRESENCE: [\n    proto.lookupType('protocol.PresenceRequest'),\n    proto.lookupType('protocol.PresenceResult')\n  ],\n  PRESENCE_STATS: [\n    proto.lookupType('protocol.PresenceStatsRequest'),\n    proto.lookupType('protocol.PresenceStatsResult')\n  ],\n  HISTORY: [\n    proto.lookupType('protocol.HistoryRequest'),\n    proto.lookupType('protocol.HistoryResult')\n  ],\n  PING: [\n    proto.lookupType('protocol.PingRequest'),\n    proto.lookupType('protocol.PingResult')\n  ],\n  RPC: [\n    proto.lookupType('protocol.RPCRequest'),\n    proto.lookupType('protocol.RPCResult')\n  ],\n  SEND: [\n    proto.lookupType('protocol.SendRequest'),\n    null\n  ]\n};\n\nconst protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nconst PushSchema = {\n  PUBLICATION: proto.lookupType('protocol.Publication'),\n  JOIN: proto.lookupType('protocol.Join'),\n  LEAVE: proto.lookupType('protocol.Leave'),\n  UNSUB: proto.lookupType('protocol.Unsub'),\n  MESSAGE: proto.lookupType('protocol.Message'),\n  SUB: proto.lookupType('protocol.Sub')\n};\n\nconst Push = proto.lookupType('protocol.Push');\nconst Command = proto.lookupType('protocol.Command');\nconst Reply = proto.lookupType('protocol.Reply');\n\nexport class ProtobufEncoder {\n  encodeCommands(commands) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        if (command.params) {\n          let type;\n          if (!command.method) {\n            command.method = protobufMethodType.CONNECT;\n          };\n          switch (command.method) {\n            case protobufMethodType.CONNECT:\n              type = methodSchema.CONNECT[0];\n              break;\n            case protobufMethodType.REFRESH:\n              type = methodSchema.REFRESH[0];\n              break;\n            case protobufMethodType.SUBSCRIBE:\n              type = methodSchema.SUBSCRIBE[0];\n              break;\n            case protobufMethodType.SUB_REFRESH:\n              type = methodSchema.SUB_REFRESH[0];\n              break;\n            case protobufMethodType.UNSUBSCRIBE:\n              type = methodSchema.UNSUBSCRIBE[0];\n              break;\n            case protobufMethodType.PUBLISH:\n              type = methodSchema.PUBLISH[0];\n              break;\n            case protobufMethodType.PRESENCE:\n              type = methodSchema.PRESENCE[0];\n              break;\n            case protobufMethodType.PRESENCE_STATS:\n              type = methodSchema.PRESENCE_STATS[0];\n              break;\n            case protobufMethodType.HISTORY:\n              type = methodSchema.HISTORY[0];\n              break;\n            case protobufMethodType.PING:\n              type = methodSchema.PING[0];\n              break;\n            case protobufMethodType.RPC:\n              type = methodSchema.RPC[0];\n              break;\n            case protobufMethodType.SEND:\n              type = methodSchema.SEND[0];\n              break;\n          }\n          command.params = type.encode(command.params).finish();\n        }\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    var type;\n    switch (methodType) {\n      case protobufMethodType.CONNECT:\n        type = methodSchema.CONNECT[1];\n        break;\n      case protobufMethodType.REFRESH:\n        type = methodSchema.REFRESH[1];\n        break;\n      case protobufMethodType.SUBSCRIBE:\n        type = methodSchema.SUBSCRIBE[1];\n        break;\n      case protobufMethodType.SUB_REFRESH:\n        type = methodSchema.SUB_REFRESH[1];\n        break;\n      case protobufMethodType.UNSUBSCRIBE:\n        type = methodSchema.UNSUBSCRIBE[1];\n        break;\n      case protobufMethodType.PUBLISH:\n        type = methodSchema.PUBLISH[1];\n        break;\n      case protobufMethodType.PRESENCE:\n        type = methodSchema.PRESENCE[1];\n        break;\n      case protobufMethodType.PRESENCE_STATS:\n        type = methodSchema.PRESENCE_STATS[1];\n        break;\n      case protobufMethodType.HISTORY:\n        type = methodSchema.HISTORY[1];\n        break;\n      case protobufMethodType.PING:\n        type = methodSchema.PING[1];\n        break;\n      case protobufMethodType.RPC:\n        type = methodSchema.RPC[1];\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  decodePush(data) {\n    return this._decode(Push, data);\n  }\n\n  decodePushData(pushType, data) {\n    var type;\n    switch (pushType) {\n      case protobufPushType.PUBLICATION:\n        type = PushSchema.PUBLICATION;\n        break;\n      case protobufPushType.MESSAGE:\n        type = PushSchema.MESSAGE;\n        break;\n      case protobufPushType.JOIN:\n        type = PushSchema.JOIN;\n        break;\n      case protobufPushType.LEAVE:\n        type = PushSchema.LEAVE;\n        break;\n      case protobufPushType.UNSUB:\n        type = PushSchema.UNSUB;\n        break;\n      case protobufPushType.SUB:\n        type = PushSchema.SUB;\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  _decode(type, data) {\n    let res;\n    try {\n      res = type.decode(data);\n    } catch (err) {\n      return null;\n    }\n    return res;\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n  _formatOverride(format) {\n    if (format === 'protobuf') {\n      this._binary = true;\n      this._methodType = protobufMethodType;\n      this._pushType = protobufPushType;\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/protobuf.js","// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/light.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-light.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-minimal.js\n// module id = 36\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/base64/index.js\n// module id = 37\n// module chunks = 0","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/eventemitter/index.js\n// module id = 38\n// module chunks = 0","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/float/index.js\n// module id = 39\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/utf8/index.js\n// module id = 40\n// module chunks = 0","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/pool/index.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/longbits.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer_buffer.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader_buffer.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc/service.js\n// module id = 45\n// module chunks = 0","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/codegen/index.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/fetch/index.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/path/index.js\n// module id = 48\n// module chunks = 0","module.exports = {\"nested\":{\"protocol\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"SUBSCRIBE\":1,\"UNSUBSCRIBE\":2,\"PUBLISH\":3,\"PRESENCE\":4,\"PRESENCE_STATS\":5,\"HISTORY\":6,\"PING\":7,\"SEND\":8,\"RPC\":9,\"REFRESH\":10,\"SUB_REFRESH\":11}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"PushType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3,\"MESSAGE\":4,\"SUB\":5}},\"Push\":{\"fields\":{\"type\":{\"type\":\"PushType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"conn_info\":{\"type\":\"bytes\",\"id\":3},\"chan_info\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"seq\":{\"type\":\"uint32\",\"id\":1},\"gen\":{\"type\":\"uint32\",\"id\":2},\"uid\":{\"type\":\"string\",\"id\":3},\"data\":{\"type\":\"bytes\",\"id\":4},\"info\":{\"type\":\"ClientInfo\",\"id\":5},\"offset\":{\"type\":\"uint64\",\"id\":6}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{\"resubscribe\":{\"type\":\"bool\",\"id\":1}}},\"Sub\":{\"fields\":{\"recoverable\":{\"type\":\"bool\",\"id\":1},\"seq\":{\"type\":\"uint32\",\"id\":2},\"gen\":{\"type\":\"uint32\",\"id\":3},\"epoch\":{\"type\":\"string\",\"id\":4},\"offset\":{\"type\":\"uint64\",\"id\":5}}},\"Message\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"ConnectRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2},\"subs\":{\"keyType\":\"string\",\"type\":\"SubscribeRequest\",\"id\":3}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4},\"data\":{\"type\":\"bytes\",\"id\":5},\"subs\":{\"keyType\":\"string\",\"type\":\"SubscribeResult\",\"id\":6}}},\"RefreshRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2},\"recover\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"offset\":{\"type\":\"uint64\",\"id\":7}}},\"SubscribeResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2},\"recoverable\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":7},\"recovered\":{\"type\":\"bool\",\"id\":8},\"offset\":{\"type\":\"uint64\",\"id\":9}}},\"SubRefreshRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2}}},\"SubRefreshResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResult\":{\"fields\":{\"num_clients\":{\"type\":\"uint32\",\"id\":1},\"num_users\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{}},\"PingResult\":{\"fields\":{}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1},\"method\":{\"type\":\"string\",\"id\":2}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"SendRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}}}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client.proto.json\n// module id = 49\n// module chunks = 0"],"sourceRoot":""}