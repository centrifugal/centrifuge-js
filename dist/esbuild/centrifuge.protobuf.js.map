{
  "version": 3,
  "sources": ["../../node_modules/events/events.js", "../../node_modules/@protobufjs/aspromise/index.js", "../../node_modules/@protobufjs/base64/index.js", "../../node_modules/@protobufjs/eventemitter/index.js", "../../node_modules/@protobufjs/float/index.js", "../../node_modules/@protobufjs/inquire/index.js", "../../node_modules/@protobufjs/utf8/index.js", "../../node_modules/@protobufjs/pool/index.js", "../../node_modules/protobufjs/src/util/longbits.js", "../../node_modules/protobufjs/src/util/minimal.js", "../../node_modules/protobufjs/src/writer.js", "../../node_modules/protobufjs/src/writer_buffer.js", "../../node_modules/protobufjs/src/reader.js", "../../node_modules/protobufjs/src/reader_buffer.js", "../../node_modules/protobufjs/src/rpc/service.js", "../../node_modules/protobufjs/src/rpc.js", "../../node_modules/protobufjs/src/roots.js", "../../node_modules/protobufjs/src/index-minimal.js", "../../node_modules/@protobufjs/codegen/index.js", "../../node_modules/@protobufjs/fetch/index.js", "../../node_modules/@protobufjs/path/index.js", "../../node_modules/protobufjs/src/types.js", "../../node_modules/protobufjs/src/field.js", "../../node_modules/protobufjs/src/oneof.js", "../../node_modules/protobufjs/src/namespace.js", "../../node_modules/protobufjs/src/mapfield.js", "../../node_modules/protobufjs/src/method.js", "../../node_modules/protobufjs/src/service.js", "../../node_modules/protobufjs/src/message.js", "../../node_modules/protobufjs/src/decoder.js", "../../node_modules/protobufjs/src/verifier.js", "../../node_modules/protobufjs/src/converter.js", "../../node_modules/protobufjs/src/wrappers.js", "../../node_modules/protobufjs/src/type.js", "../../node_modules/protobufjs/src/root.js", "../../node_modules/protobufjs/src/util.js", "../../node_modules/protobufjs/src/object.js", "../../node_modules/protobufjs/src/enum.js", "../../node_modules/protobufjs/src/encoder.js", "../../node_modules/protobufjs/src/index-light.js", "../../node_modules/protobufjs/light.js", "../../src/centrifuge.ts", "../../src/subscription.ts", "../../src/codes.ts", "../../src/utils.ts", "../../src/transport_sockjs.ts", "../../src/transport_websocket.ts", "../../src/transport_http_stream.ts", "../../src/transport_sse.ts", "../../src/json.ts", "../../src/protobuf.ts", "../../src/index_protobuf.ts", "../../src/browser.protobuf.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n", "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n", "\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n", "\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n", "\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n", "\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    OneOf    = require(\"./oneof\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace || object instanceof OneOf))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n", "\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n", "\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n", "\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n", "\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/", "\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n", "\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}", "\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n", "\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n", "\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n", "\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n", "\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n", "\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n", "\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n", "\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n", "// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");", "// @ts-nocheck\nimport EventEmitter from 'events';\nimport { subscriptionState, Subscription } from './subscription';\nimport {\n  errorCodes,\n  disconnectedCodes,\n  connectingCodes,\n  subscribingCodes\n} from './codes';\n\nimport { SockjsTransport } from './transport_sockjs';\nimport { WebsocketTransport } from './transport_websocket';\nimport { HttpStreamTransport } from './transport_http_stream';\nimport { SseTransport } from './transport_sse';\n\nimport {\n  JsonEncoder,\n  JsonDecoder\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend,\n  ttlMilliseconds\n} from './utils';\n\nconst clientState = {\n  // Initial state, state when connection explicitly disconnected, disconnect\n  // forced by a server, or when terminal condition met on client-side.\n  // Possible next states: connecting.\n  Disconnected: 'disconnected',\n  // State after connect call, state after connection lost, after a disconnect\n  // send by server with reconnect code.\n  // Possible next states: connected, disconnected.\n  Connecting: 'connecting',\n  // State when connected and authenticated (connect result received).\n  // Possible next states: disconnected, connecting.\n  Connected: 'connected'\n};\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(endpoint, options) {\n    super();\n    this.state = clientState.Disconnected;\n    this._endpoint = endpoint;\n    this._emulation = false;\n    this._transports = [];\n    this._currentTransportIndex = 0;\n    this._triedAllTransports = false;\n    this._transportWasOpen = false;\n    this._transport = null;\n    this._transportClosed = true;\n    this._encoder = null;\n    this._decoder = null;\n    this._reconnectTimeout = null;\n    this._reconnectAttempts = 0;\n    this._client = null;\n    this._session = '';\n    this._node = '';\n    this._subs = {};\n    this._serverSubs = {};\n    this._commandId = 0;\n    this._commands = [];\n    this._batching = false;\n    this._refreshRequired = false;\n    this._refreshTimeout = null;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._token = null;\n    this._dispatchPromise = Promise.resolve();\n    this._serverPing = 0;\n    this._serverPingTimeout = null;\n    this._sendPong = false;\n    this._promises = {};\n    this._promiseId = 0;\n    this._debugEnabled = false;\n    this._config = {\n      protocol: 'json',\n      token: null,\n      data: null,\n      debug: false,\n      name: 'js',\n      version: '',\n      fetch: null,\n      readableStream: null,\n      websocket: null,\n      eventsource: null,\n      sockjs: null,\n      sockjsServer: null,\n      sockjsTimeout: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      httpStreamRequestMode: 'cors',\n      emulationEndpoint: '/emulation',\n      emulationRequestMode: 'cors',\n      minReconnectDelay: 500,\n      maxReconnectDelay: 20000,\n      timeout: 5000,\n      maxServerPingDelay: 10000,\n      getToken: null\n    };\n\n    this._configure(options);\n\n    if (this._debugEnabled) {\n      this.on('state', function (ctx) {\n        this._debug('client state', ctx.oldState, '->', ctx.newState);\n      });\n      this.on('error', function (ctx) {\n        this._debug('client error', ctx);\n      });\n    }\n  }\n\n  // newSubscription allocates new Subscription to a channel. Since server only allows\n  // one subscription per channel per client this method throws if client already has\n  // channel subscription in internal registry.\n  newSubscription(channel, opts) {\n    if (this.getSubscription(channel) !== null) {\n      throw new Error('Subscription to the channel ' + channel + ' already exists');\n    }\n    const sub = new Subscription(this, channel, opts);\n    this._subs[channel] = sub;\n    return sub;\n  }\n\n  // getSubscription returns Subscription if it's registered in the internal\n  // registry or null.\n  getSubscription(channel) {\n    return this._getSub(channel);\n  }\n\n  // removeSubscription allows removing Subcription from the internal registry.\n  // Subscrption must be in unsubscribed state.\n  removeSubscription(sub) {\n    if (!sub) {\n      return;\n    }\n    if (sub.state !== subscriptionState.Unsubscribed) {\n      throw new Error('Subscription must be in unsubscribed state to be removed');\n    }\n    this._removeSubscription(sub);\n  }\n\n  // Get a map with all current client-side subscriptions.\n  subscriptions() {\n    return this._subs;\n  }\n\n  // ready returns a Promise which resolves upon client goes to Connected\n  // state and rejects in case of client goes to Disconnected or Failed state.\n  // Users can provide optional timeout in milliseconds.\n  ready(timeout) {\n    if (this.state === clientState.Disconnected) {\n      return Promise.reject({ code: errorCodes.clientDisconnected, message: 'client disconnected' });\n    };\n    if (this.state === clientState.Connected) {\n      return Promise.resolve();\n    };\n    return new Promise((res, rej) => {\n      let ctx = {\n        resolve: res,\n        reject: rej\n      };\n      if (timeout) {\n        ctx.timeout = setTimeout(function () {\n          rej({ code: errorCodes.timeout, message: 'timeout' });\n        }, timeout);;\n      }\n      this._promises[this._nextPromiseId()] = ctx;\n    });\n  }\n\n  // connect to a server.\n  connect() {\n    if (this._isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._isConnecting()) {\n      this._debug('connect called when already connecting');\n      return;\n    }\n    this._reconnectAttempts = 0;\n    this._startConnecting();\n  };\n\n  // disconnect from a server.\n  disconnect() {\n    this._disconnect(disconnectedCodes.disconnectCalled, 'disconnect called', false);\n  };\n\n  // send asynchronous data to a server (without any response from a server\n  // expected, see rpc method if you need response).\n  send(data) {\n    const cmd = {\n      send: {\n        data: data\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      const sent = self._transportSendCommands([cmd]); // can send async message to server without id set\n      if (!sent) {\n        return Promise.reject(self._createErrorObject(errorCodes.transportWriteError, 'transport write error'));\n      };\n      return Promise.resolve();\n    });\n  }\n\n  // rpc to a server - i.e. a call which waits for a response with data.\n  rpc(method, data) {\n    const cmd = {\n      rpc: {\n        method: method,\n        data: data\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply) {\n        return {\n          'data': reply.rpc.data\n        };\n      });\n    });\n  }\n\n  // publish data to a channel.\n  publish(channel, data) {\n    const cmd = {\n      publish: {\n        channel: channel,\n        data: data\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function () {\n        return {};\n      });\n    });\n  }\n\n  // history of a channel.\n  history(channel, options) {\n    const cmd = {\n      history: this._getHistoryRequest(channel, options)\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply) {\n        const result = reply.history;\n        const publications = [];\n        if (result.publications) {\n          for (let i = 0; i < result.publications.length; i++) {\n            publications.push(self._getPublicationContext(channel, result.publications[i]));\n          }\n        }\n        return {\n          'publications': publications,\n          'epoch': result.epoch || '',\n          'offset': result.offset || 0\n        };\n      });\n    });\n  }\n\n  // presence for a channel.\n  presence(channel) {\n    const cmd = {\n      presence: {\n        channel: channel\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply) {\n        return {\n          'clients': reply.presence.presence\n        };\n      });\n    });\n  }\n\n  // presence stats for a channel.\n  presenceStats(channel) {\n    const cmd = {\n      'presence_stats': {\n        channel: channel\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply) {\n        const result = reply.presence_stats;\n        return {\n          'numUsers': result.num_users,\n          'numClients': result.num_clients\n        };\n      });\n    });\n  }\n\n  // start command batching (collect into temporary buffer without sending to a server)\n  // until stopBatching called.\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._batching = true;\n  };\n\n  // stop batching commands and flush collected commands to the network (all in one request/frame).\n  stopBatching() {\n    this._batching = false;\n    this._flush();\n  };\n\n  _log() { log('info', arguments); };\n\n  _debug() {\n    if (!this._debugEnabled) {\n      return;\n    }\n    log('debug', arguments);\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON-only Centrifuge client, use client with Protobuf support');\n    }\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(_format) {\n    return false;\n  }\n\n  _configure(options) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, options || {});\n\n    if (!this._endpoint) {\n      throw new Error('endpoint configuration required');\n    }\n\n    if (this._config.protocol !== 'json' && this._config.protocol !== 'protobuf') {\n      throw new Error('unsupported protocol ' + this._config.protocol);\n    }\n\n    if (this._config.token !== null) {\n      this._token = this._config.token;\n    }\n\n    this._setFormat('json');\n    if (this._config.protocol === 'protobuf') {\n      this._setFormat('protobuf');\n    }\n\n    if (this._config.debug === true ||\n      (typeof localStorage !== 'undefined' && localStorage.getItem('centrifuge.debug'))) {\n      this._debugEnabled = true;\n    }\n\n    this._debug('config', this._config);\n\n    if (typeof this._endpoint === 'string') {\n      // Single address.\n    } else if (typeof this._endpoint === 'object' && this._endpoint instanceof Array) {\n      this._transports = this._endpoint;\n      this._emulation = true;\n      for (const i in this._transports) {\n        const transportConfig = this._transports[i];\n        if (!transportConfig.endpoint || !transportConfig.transport) {\n          throw new Error('malformed transport configuration');\n        }\n        const transportName = transportConfig.transport;\n        if (['websocket', 'http_stream', 'sse', 'sockjs'].indexOf(transportName) < 0) {\n          throw new Error('unsupported transport name: ' + transportName);\n        }\n      }\n    } else {\n      throw new Error('unsupported url configuration type: only string or array of objects are supported');\n    }\n  };\n\n  _setState(newState) {\n    if (this.state !== newState) {\n      const oldState = this.state;\n      this.state = newState;\n      this.emit('state', { 'newState': newState, 'oldState': oldState });\n      return true;\n    }\n    return false;\n  };\n\n  _isDisconnected() {\n    return this.state === clientState.Disconnected;\n  };\n\n  _isConnecting() {\n    return this.state === clientState.Connecting;\n  };\n\n  _isConnected() {\n    return this.state === clientState.Connected;\n  };\n\n  _nextCommandId() {\n    return ++this._commandId;\n  };\n\n  _getReconnectDelay() {\n    const delay = backoff(this._reconnectAttempts, this._config.minReconnectDelay, this._config.maxReconnectDelay);\n    this._reconnectAttempts += 1;\n    return delay;\n  };\n\n  _clearOutgoingRequests() {\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({ error: this._createErrorObject(errorCodes.connectionClosed, 'connection closed') });\n      }\n    }\n    this._callbacks = {};\n  }\n\n  _clearConnectedState() {\n    this._client = null;\n    this._clearServerPingTimeout();\n    this._clearRefreshTimeout();\n\n    // fire events for client-side subscriptions.\n    for (const channel in this._subs) {\n      if (!this._subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = this._subs[channel];\n      if (sub._isSubscribed()) {\n        sub._setSubscribing(subscribingCodes.transportClosed, 'transport closed');\n      }\n    }\n\n    // fire events for server-side subscriptions.\n    for (const channel in this._serverSubs) {\n      if (this._serverSubs.hasOwnProperty(channel)) {\n        this.emit('subscribing', { channel: channel });\n      }\n    }\n  };\n\n  _handleWriteError(commands) {\n    for (let command in commands) {\n      let id = command.id;\n      if (!(id in this._callbacks)) {\n        continue;\n      }\n      const callbacks = this._callbacks[id];\n      clearTimeout(this._callbacks[id].timeout);\n      delete this._callbacks[id];\n      const errback = callbacks.errback;\n      errback({ error: this._createErrorObject(errorCodes.transportWriteError, 'transport write error') });\n    }\n  }\n\n  _transportSendCommands(commands) {\n    if (!commands.length) {\n      return true;\n    }\n    try {\n      this._transport.send(this._encoder.encodeCommands(commands), this._session, this._node);\n    } catch (e) {\n      this._debug('error writing commands', e);\n      this._handleWriteError(commands);\n      return false;\n    }\n    return true;\n  }\n\n  _initializeTransport() {\n    let websocket;\n    if (this._config.websocket !== null) {\n      websocket = this._config.websocket;\n    } else {\n      if (!(typeof WebSocket !== 'function' && typeof WebSocket !== 'object')) {\n        websocket = WebSocket;\n      }\n    }\n\n    let sockjs = null;\n    if (this._config.sockjs !== null) {\n      sockjs = this._config.sockjs;\n    } else {\n      if (typeof global.SockJS !== 'undefined') {\n        sockjs = global.SockJS;\n      }\n    }\n\n    let eventsource = null;\n    if (this._config.eventsource !== null) {\n      eventsource = this._config.eventsource;\n    } else {\n      if (typeof global.EventSource !== 'undefined') {\n        eventsource = global.EventSource;\n      }\n    }\n\n    let fetchFunc = null;\n    if (this._config.fetch !== null) {\n      fetchFunc = this._config.fetch;\n    } else {\n      if (typeof global.fetch !== 'undefined') {\n        fetchFunc = global.fetch;\n      }\n    }\n\n    let readableStream = null;\n    if (this._config.readableStream !== null) {\n      readableStream = this._config.readableStream;\n    } else {\n      if (typeof global.ReadableStream !== 'undefined') {\n        readableStream = global.ReadableStream;\n      }\n    }\n\n    if (!this._emulation) {\n      if (startsWith(this._endpoint, 'http')) {\n        this._debug('client will use sockjs');\n        this._transport = new SockjsTransport(this._endpoint, {\n          sockjs: sockjs,\n          transports: this._config.sockjsTransports,\n          server: this._config.sockjsServer,\n          timeout: this._config.sockjsTimeout\n        });\n        if (!this._transport.supported()) {\n          throw new Error('SockJS not available, use ws(s):// in url or include SockJS');\n        }\n      } else {\n        this._debug('client will use websocket');\n        this._transport = new WebsocketTransport(this._endpoint, {\n          websocket: websocket\n        });\n        if (!this._transport.supported()) {\n          throw new Error('WebSocket not available');\n        }\n      }\n    } else {\n      if (this._currentTransportIndex >= this._transports.length) {\n        this._triedAllTransports = true;\n        this._currentTransportIndex = 0;\n      }\n      let count = 0;\n      while (true) {\n        if (count >= this._transports.length) {\n          throw new Error('no supported transport found');\n        }\n        const transportConfig = this._transports[this._currentTransportIndex];\n        const transportName = transportConfig.transport;\n        const transportEndpoint = transportConfig.endpoint;\n\n        if (transportName === 'websocket') {\n          this._debug('trying websocket transport');\n          this._transport = new WebsocketTransport(transportEndpoint, {\n            websocket: websocket\n          });\n          if (!this._transport.supported()) {\n            this._debug('websocket transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'http_stream') {\n          this._debug('trying http_stream transport');\n          this._transport = new HttpStreamTransport(transportEndpoint, {\n            fetch: fetchFunc,\n            readableStream: readableStream,\n            requestMode: this._config.httpStreamRequestMode,\n            emulationEndpoint: this._config.emulationEndpoint,\n            emulationRequestMode: this._config.emulationRequestMode,\n            decoder: this._decoder,\n            encoder: this._encoder\n          });\n          if (!this._transport.supported()) {\n            this._debug('http_stream transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'sse') {\n          this._debug('trying sse transport');\n          this._transport = new SseTransport(transportEndpoint, {\n            eventsource: eventsource,\n            fetch: fetchFunc,\n            emulationEndpoint: this._config.emulationEndpoint,\n            emulationRequestMode: this._config.emulationRequestMode\n          });\n          if (!this._transport.supported()) {\n            this._debug('sse transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'sockjs') {\n          this._debug('trying sockjs');\n          this._transport = new SockjsTransport(transportEndpoint, {\n            sockjs: sockjs,\n            transports: this._config.sockjsTransports,\n            server: this._config.sockjsServer,\n            timeout: this._config.sockjsTimeout\n          });\n          if (!this._transport.supported()) {\n            this._debug('sockjs transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else {\n          throw new Error('unknown transport ' + transportName);\n        }\n        break;\n      }\n    }\n\n    const connectCommand = this._constructConnectCommand();\n\n    if (this._transport.emulation()) {\n      this._latencyStart = new Date();\n      connectCommand.id = this._nextCommandId();\n      this._callConnectFake(connectCommand.id).then(resolveCtx => {\n        const result = resolveCtx.reply.connect;\n        this._connectResponse(result);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        if (rejectCtx.error.code >= 100) {\n          this._connectError(rejectCtx.error);\n        }\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n\n    const self = this;\n\n    let transportName;\n    let wasOpen = false;\n\n    this._transport.initialize(this._config.protocol, {\n      onOpen: function () {\n        wasOpen = true;\n        transportName = self._transport.subName();\n        self._debug(transportName, 'transport open');\n        self._transportWasOpen = true;\n        self._transportClosed = false;\n\n        if (self._transport.emulation()) {\n          return;\n        }\n\n        self._latencyStart = new Date();\n\n        self._sendConnect();\n      },\n      onError: function (e) {\n        self._debug('transport level error', e);\n      },\n      onClose: function (closeEvent) {\n        self._debug(self._transport.name(), 'transport closed');\n        self._transportClosed = true;\n\n        let reason = 'connection closed';\n        let needReconnect = true;\n        let code = 0;\n\n        if (closeEvent && 'code' in closeEvent && closeEvent.code) {\n          code = closeEvent.code;\n        }\n\n        if (closeEvent && closeEvent.reason) {\n          try {\n            const advice = JSON.parse(closeEvent.reason);\n            reason = advice.reason;\n            needReconnect = advice.reconnect;\n          } catch (e) {\n            reason = closeEvent.reason;\n            if ((code >= 3500 && code < 4000) || (code >= 4500 && code < 5000)) {\n              needReconnect = false;\n            }\n          }\n        }\n\n        if (code < 3000) {\n          if (code === 1009) {\n            code = disconnectedCodes.messageSizeLimit;\n            reason = 'message size limit exceeded';\n            needReconnect = false;\n          } else {\n            code = connectingCodes.transportClosed;\n            reason = 'transport closed';\n          }\n          if (self._emulation && !self._transportWasOpen) {\n            self._currentTransportIndex++;\n            if (self._currentTransportIndex >= self._transports.length) {\n              self._triedAllTransports = true;\n              self._currentTransportIndex = 0;\n            }\n          }\n        } else {\n          // Codes >= 3000 are sent from a server application level.\n          self._transportWasOpen = true;\n        }\n\n        let isInitialHandshake = false;\n        if (self._emulation && !self._transportWasOpen && !self._triedAllTransports) {\n          isInitialHandshake = true;\n        }\n\n        if (self._isConnecting() && !wasOpen) {\n          self.emit('error', {\n            type: 'transport',\n            error: {\n              code: errorCodes.transportClosed,\n              message: 'transport closed'\n            },\n            transport: self._transport.name()\n          });\n        }\n\n        self._disconnect(code, reason, needReconnect);\n\n        if (self._isConnecting()) {\n          let delay = self._getReconnectDelay();\n          if (isInitialHandshake) {\n            delay = 0;\n          }\n          self._debug('reconnect after ' + delay + ' milliseconds');\n          self._reconnectTimeout = setTimeout(() => {\n            self._startReconnecting();\n          }, delay);\n        }\n      },\n      onMessage: function (data) {\n        self._dataReceived(data);\n      }\n    }, this._encoder.encodeCommands([connectCommand]));\n  };\n\n  _sendConnect() {\n    const connectCommand = this._constructConnectCommand();\n    const self = this;\n    this._call(connectCommand).then(resolveCtx => {\n      const result = resolveCtx.reply.connect;\n      self._connectResponse(result);\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      self._connectError(rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  }\n\n  _startReconnecting() {\n    if (!this._isConnecting()) {\n      return;\n    }\n\n    const needTokenRefresh = this._refreshRequired || (!this._token && this._config.getToken !== null);\n    if (!needTokenRefresh) {\n      this._startConnecting();\n      return;\n    }\n\n    const self = this;\n\n    this._getToken().then(function (token) {\n      if (!self._isConnecting()) {\n        return;\n      }\n      if (!token) {\n        self._failUnauthorized();\n        return;\n      }\n      self._token = token;\n      self._debug('connection token refreshed');\n      self._startConnecting();\n    }).catch(function (e) {\n      if (!self._isConnecting()) {\n        return;\n      }\n      this.emit('error', {\n        'type': 'connectToken',\n        'error': {\n          code: errorCodes.clientConnectToken,\n          message: e !== undefined ? e.toString() : ''\n        }\n      });\n      const delay = self._getReconnectDelay();\n      self._debug('error on connection token refresh, reconnect after ' + delay + ' milliseconds', e);\n      self._reconnectTimeout = setTimeout(() => {\n        self._startReconnecting();\n      }, delay);\n    });\n  }\n\n  _connectError(err) {\n    if (this.state !== clientState.Connecting) {\n      return;\n    }\n    if (err.code === 109) { // token expired.\n      // next connect attempt will try to refresh token.\n      this._refreshRequired = true;\n    }\n    if (err.code < 100 || err.temporary === true || err.code === 109) {\n      this.emit('error', {\n        'type': 'connect',\n        'error': err\n      });\n      // Not yet connected, closing transport is enough.\n      if (this._transport && !this._transportClosed) {\n        this._transportClosed = true;\n        this._transport.close();\n      }\n    } else {\n      this._disconnect(err.code, err.message, false);\n    }\n  }\n\n  _constructConnectCommand() {\n    const req = {};\n\n    if (this._token) {\n      req.token = this._token;\n    }\n    if (this._config.data) {\n      req.data = this._config.data;\n    }\n    if (this._config.name) {\n      req.name = this._config.name;\n    }\n    if (this._config.version) {\n      req.version = this._config.version;\n    }\n\n    let subs = {};\n    let hasSubs = false;\n    for (const channel in this._serverSubs) {\n      if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n        hasSubs = true;\n        let sub = {\n          'recover': true\n        };\n        if (this._serverSubs[channel].offset) {\n          sub['offset'] = this._serverSubs[channel].offset;\n        }\n        if (this._serverSubs[channel].epoch) {\n          sub['epoch'] = this._serverSubs[channel].epoch;\n        }\n        subs[channel] = sub;\n      }\n    }\n    if (hasSubs) {\n      req.subs = subs;\n    }\n    return {\n      connect: req\n    };\n  }\n\n  _getHistoryRequest(channel, options) {\n    let req = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        req.since = {\n          offset: options.since.offset\n        };\n        if (options.since.epoch) {\n          req.since.epoch = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        req.limit = options.limit;\n      }\n      if (options.reverse === true) {\n        req.reverse = true;\n      }\n    };\n    return req;\n  }\n\n  _methodCall() {\n    if (this._isConnected()) {\n      return Promise.resolve();\n    }\n    return new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({ code: errorCodes.timeout, message: 'timeout' });\n      }, this._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n  }\n\n  _callPromise(cmd, resultCB) {\n    return new Promise((resolve, reject) => {\n      this._call(cmd).then(resolveCtx => {\n        resolve(resultCB(resolveCtx.reply));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  _dataReceived(data) {\n    if (this._serverPing > 0) {\n      this._waitServerPing();\n    }\n    const replies = this._decoder.decodeReplies(data);\n    // We have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve => {\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve => {\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      if (!reply.push) {\n        this._handleServerPing(next);\n      } else {\n        this._handlePush(reply.push, next);\n      }\n    }\n\n    return p;\n  };\n\n  _call(cmd) {\n    return new Promise((resolve, reject) => {\n      cmd.id = this._nextCommandId();\n      this._registerCall(cmd.id, resolve, reject);\n      this._addCommand(cmd);\n    });\n  }\n\n  _callConnectFake(id) {\n    return new Promise((resolve, reject) => {\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _startConnecting() {\n    this._debug('start connecting');\n    if (this._setState(clientState.Connecting)) {\n      this.emit('connecting', { code: connectingCodes.connectCalled, reason: 'connect called' });\n    };\n    this._client = null;\n    this._initializeTransport();\n  }\n\n  _disconnect(code, reason, reconnect) {\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    const previousState = this.state;\n\n    const ctx = {\n      code: code,\n      reason: reason\n    };\n\n    let needEvent = false;\n\n    if (reconnect) {\n      needEvent = this._setState(clientState.Connecting);\n    } else {\n      needEvent = this._setState(clientState.Disconnected);\n      this._rejectPromises({ code: errorCodes.clientDisconnected, message: 'disconnected' });\n    }\n\n    this._clearOutgoingRequests();\n\n    if (previousState === clientState.Connecting) {\n      this._clearReconnectTimeout();\n    }\n    if (previousState === clientState.Connected) {\n      this._clearConnectedState();\n    }\n\n    if (needEvent) {\n      if (this._isConnecting()) {\n        this.emit('connecting', ctx);\n      } else {\n        this.emit('disconnected', ctx);\n      }\n    }\n\n    if (this._transport && !this._transportClosed) {\n      this._transportClosed = true;\n      this._transport.close();\n    }\n  };\n\n  _failUnauthorized() {\n    this._disconnect(disconnectedCodes.unauthorized, 'unauthorized', false);\n  }\n\n  _getToken() {\n    // ask application for new connection token.\n    this._debug('get connection token');\n    if (this._config.getToken === null) {\n      throw new Error('provide a function to get connection token');\n    }\n    return this._config.getToken({});\n  }\n\n  _refresh() {\n    const clientId = this._client;\n    const self = this;\n    this._getToken().then(function (token) {\n      if (clientId !== self._client) {\n        return;\n      }\n      if (!token) {\n        self._failUnauthorized();\n        return;\n      }\n      self._token = token;\n      self._debug('connection token refreshed');\n\n      if (!self._isConnected()) {\n        return;\n      }\n\n      const cmd = {\n        refresh: { token: self._token }\n      };\n\n      self._call(cmd).then(resolveCtx => {\n        const result = resolveCtx.reply.refresh;\n        self._refreshResponse(result);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        self._refreshError(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }).catch(function (e) {\n      self.emit('error', {\n        type: 'refreshToken',\n        error: {\n          code: errorCodes.clientRefreshToken,\n          message: e !== undefined ? e.toString() : ''\n        }\n      });\n      self._refreshTimeout = setTimeout(() => self._refresh(), self._getRefreshRetryDelay());\n    });\n  };\n\n  _refreshError(err) {\n    if (err.code < 100 || err.temporary === true) {\n      this.emit('error', {\n        type: 'refresh',\n        error: err\n      });\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getRefreshRetryDelay());\n    } else {\n      this._disconnect(err.code, err.message, false);\n    }\n  }\n\n  _getRefreshRetryDelay() {\n    return backoff(0, 5000, 10000);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._client = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n  };\n\n  _subscribe(sub) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this._isConnected()) {\n      this._debug('delay subscribe on', sub.channel, 'till connected');\n      // subscribe will be called later automatically.\n      return;\n    }\n\n    if (sub._usesToken()) {\n      // token channel, need to get token before sending subscribe.\n      const clientId = this._client;\n      const self = this;\n      if (sub._token) {\n        this._sendSubscribe(sub, sub._token);\n      } else {\n        sub._getSubscriptionToken().then(function (token) {\n          if (clientId !== self._client) {\n            return;\n          }\n          if (!sub._isSubscribing()) {\n            return;\n          }\n          if (!token) {\n            sub._failUnauthorized();\n            return;\n          }\n          sub._token = token;\n          self._sendSubscribe(sub, token);\n        }).catch(function (e) {\n          if (!sub._isSubscribing()) {\n            return;\n          }\n          sub.emit('error', {\n            type: 'subscribeToken',\n            channel: sub.channel,\n            error: {\n              code: errorCodes.subscriptionSubscribeToken,\n              message: e !== undefined ? e.toString() : ''\n            }\n          });\n          sub._scheduleResubscribe();\n        });\n      }\n    } else {\n      this._sendSubscribe(sub);\n    }\n  };\n\n  _sendSubscribe(sub, token) {\n    const channel = sub.channel;\n\n    const req = {\n      channel: channel\n    };\n\n    if (token) {\n      req.token = token;\n    }\n\n    if (sub._data) {\n      req.data = sub._data;\n    }\n\n    if (sub._positioned) {\n      req.positioned = true;\n    }\n\n    if (sub._recoverable) {\n      req.recoverable = true;\n    }\n\n    if (sub._needRecover()) {\n      req.recover = true;\n      const offset = sub._getOffset();\n      if (offset) {\n        req.offset = offset;\n      }\n      const epoch = sub._getEpoch();\n      if (epoch) {\n        req.epoch = epoch;\n      }\n    }\n\n    const cmd = { subscribe: req };\n\n    this._call(cmd).then(resolveCtx => {\n      const result = resolveCtx.reply.subscribe;\n      this._subscribeResponse(\n        channel,\n        result\n      );\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._subscribeError(channel, rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  }\n\n  _sendSubRefresh(sub, token) {\n    const req = {\n      channel: sub.channel,\n      token: token\n    };\n    const cmd = { 'sub_refresh': req };\n\n    this._call(cmd).then(resolveCtx => {\n      const result = resolveCtx.reply.sub_refresh;\n      sub._refreshResponse(result);\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      sub._refreshError(rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  }\n\n  _removeSubscription(sub) {\n    if (sub === null) {\n      return;\n    }\n    delete this._subs[sub.channel];\n  }\n\n  _unsubscribe(sub) {\n    if (!this._isConnected()) {\n      return;\n    }\n    const req = {\n      channel: sub.channel\n    };\n    const cmd = { unsubscribe: req };\n\n    const self = this;\n\n    this._call(cmd).then(resolveCtx => {\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n      self._disconnect(connectingCodes.unsubscribeError, 'unsubscribe error', true);\n    });\n  };\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result) {\n    this._transportWasOpen = true;\n    this._reconnectAttempts = 0;\n    this._refreshRequired = false;\n\n    if (this._isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._client = result.client;\n    this._setState(clientState.Connected);\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n\n    this._session = result.session;\n    this._node = result.node;\n\n    this.startBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._isSubscribing()) {\n          this._subscribe(sub);\n        }\n      }\n    }\n    this.stopBatching();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transport.subName()\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connected', ctx);\n\n    this._resolvePromises();\n\n    this._processServerSubs(result.subs || {});\n\n    if (result.ping && result.ping > 0) {\n      this._serverPing = result.ping * 1000;\n      this._sendPong = result.pong === true;\n      this._waitServerPing();\n    } else {\n      this._serverPing = 0;\n    }\n  };\n\n  _processServerSubs(subs) {\n    for (const channel in subs) {\n      if (!subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = subs[channel];\n      this._serverSubs[channel] = {\n        'offset': sub.offset,\n        'epoch': sub.epoch,\n        'recoverable': sub.recoverable || false\n      };\n      const subCtx = this._getSubscribeContext(channel, sub);\n      this.emit('subscribed', subCtx);\n    }\n\n    for (const channel in subs) {\n      if (!subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = subs[channel];\n      if (sub.recovered) {\n        let pubs = sub.publications;\n        if (pubs && pubs.length > 0) {\n          for (let i in pubs) {\n            if (pubs.hasOwnProperty(i)) {\n              this._handlePublication(channel, pubs[i]);\n            }\n          }\n        }\n      }\n    }\n\n    for (const channel in this._serverSubs) {\n      if (!this._serverSubs.hasOwnProperty(channel)) {\n        continue;\n      }\n      if (!subs[channel]) {\n        this.emit('unsubscribed', { channel: channel });\n        delete this._serverSubs[channel];\n      }\n    }\n  };\n\n  _clearRefreshTimeout() {\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n  };\n\n  _clearReconnectTimeout() {\n    if (this._reconnectTimeout !== null) {\n      clearTimeout(this._reconnectTimeout);\n      this._reconnectTimeout = null;\n    }\n  };\n\n  _clearServerPingTimeout() {\n    if (this._serverPingTimeout !== null) {\n      clearTimeout(this._serverPingTimeout);\n      this._serverPingTimeout = null;\n    }\n  };\n\n  _waitServerPing() {\n    if (this._config.maxServerPingDelay === 0) {\n      return;\n    }\n    if (!this._isConnected()) {\n      return;\n    }\n    this._clearServerPingTimeout();\n    this._serverPingTimeout = setTimeout(() => {\n      if (!this._isConnected()) {\n        return;\n      }\n      this._disconnect(connectingCodes.noPing, 'no ping', true);\n    }, this._serverPing + this._config.maxServerPingDelay);\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === errorCodes.timeout) {\n      this._disconnect(connectingCodes.subscribeTimeout, 'subscribe timeout', true);\n      return;\n    }\n    sub._subscribeError(error);\n  };\n\n  _getSubscribeContext(channel, result) {\n    const ctx = {\n      channel: channel,\n      positioned: false,\n      recoverable: false,\n      wasRecovering: false,\n      recovered: false\n    };\n    if (result.recovered) {\n      ctx.recovered = true;\n    }\n    if (result.positioned) {\n      ctx.positioned = true;\n    }\n    if (result.recoverable) {\n      ctx.recoverable = true;\n    }\n    if (result.was_recovering) {\n      ctx.wasRecovering = true;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (ctx.positioned || ctx.recoverable) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    }\n    if (result.data) {\n      ctx.data = result.data;\n    }\n    return ctx;\n  }\n\n  _subscribeResponse(channel, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribed(result);\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({ reply, next });\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({ error, next });\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        const ctx = { channel: channel, info: this._getJoinLeaveContext(join.info) };\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub._handleJoin(join);\n  };\n\n  _handleLeave(channel, leave) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        const ctx = { channel: channel, info: this._getJoinLeaveContext(leave.info) };\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub._handleLeave(leave);\n  };\n\n  _handleUnsubscribe(channel, unsubscribe) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        this.emit('unsubscribed', { channel: channel });\n      }\n      return;\n    }\n    if (unsubscribe.code < 2500) {\n      sub._setUnsubscribed(unsubscribe.code, unsubscribe.reason, false);\n    } else {\n      sub._setSubscribing(unsubscribe.code, unsubscribe.reason, false);\n    }\n  };\n\n  _handleSubscribe(channel, sub) {\n    this._serverSubs[channel] = {\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable || false\n    };\n    this.emit('subscribed', this._getSubscribeContext(channel, sub));\n  };\n\n  _handleDisconnect(disconnect) {\n    const code = disconnect.code;\n    let reconnect = true;\n    if ((code >= 3500 && code < 4000) || (code >= 4500 && code < 5000)) {\n      reconnect = false;\n    }\n    this._disconnect(code, disconnect.reason, reconnect);\n  };\n\n  _getPublicationContext(channel, pub) {\n    const ctx = {\n      channel: channel,\n      data: pub.data\n    };\n    if (pub.offset) {\n      ctx.offset = pub.offset;\n    }\n    if (pub.info) {\n      ctx.info = this._getJoinLeaveContext(pub.info);\n    }\n    if (pub.tags) {\n      ctx.tags = pub.tags;\n    }\n    return ctx;\n  }\n\n  _getJoinLeaveContext(clientInfo) {\n    const info = {\n      client: clientInfo.client,\n      user: clientInfo.user\n    };\n    if (clientInfo.conn_info) {\n      info.connInfo = clientInfo.conn_info;\n    }\n    if (clientInfo.chan_info) {\n      info.chanInfo = clientInfo.chan_info;\n    }\n    return info;\n  }\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        const ctx = this._getPublicationContext(channel, pub);\n        this.emit('publication', ctx);\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n      }\n      return;\n    }\n    sub._handlePublication(pub);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handleServerPing(next) {\n    if (this._sendPong) {\n      const cmd = {};\n      this._transportSendCommands([cmd]);\n    }\n    next();\n  }\n\n  _handlePush(data, next) {\n    const channel = data.channel;\n    if (data.pub) {\n      this._handlePublication(channel, data.pub);\n    } else if (data.message) {\n      this._handleMessage(data.message);\n    } else if (data.join) {\n      this._handleJoin(channel, data.join);\n    } else if (data.leave) {\n      this._handleLeave(channel, data.leave);\n    } else if (data.unsubscribe) {\n      this._handleUnsubscribe(channel, data.unsubscribe);\n    } else if (data.subscribe) {\n      this._handleSubscribe(channel, data.subscribe);\n    } else if (data.disconnect) {\n      this._handleDisconnect(data.disconnect);\n    }\n    next();\n  }\n\n  _flush() {\n    const commands = this._commands.slice(0);\n    this._commands = [];\n    this._transportSendCommands(commands);\n  };\n\n  _createErrorObject(code, message, temporary) {\n    const errObject = {\n      code: code,\n      message: message\n    };\n    if (temporary) {\n      errObject.temporary = true;\n    }\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({ error: this._createErrorObject(errorCodes.timeout, 'timeout') });\n      }\n    }, this._config.timeout);\n  };\n\n  _addCommand(command) {\n    if (this._batching) {\n      this._commands.push(command);\n    } else {\n      this._transportSendCommands([command]);\n    }\n  };\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _resolvePromises() {\n    for (const id in this._promises) {\n      if (this._promises[id].timeout) {\n        clearTimeout(this._promises[id].timeout);\n      }\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  }\n\n  _rejectPromises(err) {\n    for (const id in this._promises) {\n      if (this._promises[id].timeout) {\n        clearTimeout(this._promises[id].timeout);\n      }\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  }\n}\n\nCentrifuge.State = clientState;\nCentrifuge.SubscriptionState = subscriptionState;\n", "import EventEmitter from 'events';\nimport { errorCodes, unsubscribedCodes, subscribingCodes } from './codes';\nimport { ttlMilliseconds, backoff } from './utils';\n\nexport const subscriptionState = {\n  // Unsubscribed is an initial state, also state when unsubscribe called from client,\n  // also state when server called unsubscribe for a channel.\n  Unsubscribed: 'unsubscribed',\n  // Subscribing to a channel in progress.\n  Subscribing: 'subscribing',\n  // Sussessfully subscribed to a channel.\n  Subscribed: 'subscribed'\n};\n\nexport class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, options) {\n    super();\n    // @ts-ignore\n    this.channel = channel;\n    // @ts-ignore\n    this.state = subscriptionState.Unsubscribed;\n    // @ts-ignore\n    this._centrifuge = centrifuge;\n    // @ts-ignore\n    this._token = null;\n    // @ts-ignore\n    this._getToken = null;\n    // @ts-ignore\n    this._data = null;\n    // @ts-ignore\n    this._recover = false;\n    // @ts-ignore\n    this._offset = null;\n    // @ts-ignore\n    this._epoch = null;\n    // @ts-ignore\n    this._recoverable = false;\n    // @ts-ignore\n    this._positioned = false;\n    // @ts-ignore\n    this._minResubscribeDelay = 500;\n    // @ts-ignore\n    this._maxResubscribeDelay = 20000;\n    // @ts-ignore\n    this._resubscribeTimeout = null;\n    // @ts-ignore\n    this._resubscribeAttempts = 0;\n    // @ts-ignore\n    this._promises = {};\n    // @ts-ignore\n    this._promiseId = 0;\n    // @ts-ignore\n    this._refreshTimeout = null;\n    this._setOptions(options);\n    // @ts-ignore\n    if (this._centrifuge._debugEnabled) {\n      this.on('state', function (ctx) {\n        // @ts-ignore\n        this._centrifuge._debug('subscription state', channel, ctx.oldState, '->', ctx.newState);\n      });\n      this.on('error', function (ctx) {\n        // @ts-ignore\n        this._centrifuge._debug('subscription error', channel, ctx);\n      });\n    }\n  }\n\n  // ready returns a Promise which resolves upon subscription goes to Subscribed\n  // state and rejects in case of subscription goes to Unsubscribed state.\n  // Optional timeout can be passed.\n  ready(timeout) {\n    // @ts-ignore\n    if (this.state === subscriptionState.Unsubscribed) {\n      // @ts-ignore\n      return Promise.reject({ code: errorCodes.subscriptionUnsubscribed, message: this.state });\n    };\n    // @ts-ignore\n    if (this.state === subscriptionState.Subscribed) {\n      return Promise.resolve();\n    };\n    return new Promise((res, rej) => {\n      let ctx = {\n        resolve: res,\n        reject: rej\n      };\n      if (timeout) {\n        // @ts-ignore\n        ctx.timeout = setTimeout(function () {\n          rej({ code: errorCodes.timeout, message: 'timeout' });\n        }, timeout);\n      }\n      // @ts-ignore\n      this._promises[this._nextPromiseId()] = ctx;\n    });\n  }\n\n  // subscribe to a channel.\n  subscribe() {\n    if (this._isSubscribed()) {\n      return;\n    }\n    // @ts-ignore\n    this._resubscribeAttempts = 0;\n    this._setSubscribing(subscribingCodes.subscribeCalled, 'subscribe called');\n  };\n\n  // unsubscribe from a channel, keeping position state.\n  unsubscribe() {\n    this._setUnsubscribed(unsubscribedCodes.unsubscribeCalled, 'unsubscribe called', true);\n  };\n\n  // cancel Subscription \u2013 remove it from client's registry and\n  // remove link to a client. Subscription is UNUSABLE after this.\n  // Subscription must be in Unsubscribed state before calling this.\n  cancel() {\n    // @ts-ignore\n    if (this.state !== subscriptionState.Unsubscribed) {\n      throw new Error('Subscription must be unsubscribed to cancel');\n    }\n    // @ts-ignore\n    this._centrifuge._removeSubscription(this);\n    // @ts-ignore\n    this._centrifuge = undefined;\n  };\n\n  // publish data to a channel.\n  publish(data) {\n    const self = this;\n    return this._methodCall().then(function () {\n      // @ts-ignore\n      return self._centrifuge.publish(self.channel, data);\n    });\n  };\n\n  // presence for a channel.\n  presence() {\n    const self = this;\n    return this._methodCall().then(function () {\n      // @ts-ignore\n      return self._centrifuge.presence(self.channel);\n    });\n  };\n\n  // presence stats for a channel.\n  presenceStats() {\n    const self = this;\n    return this._methodCall().then(function () {\n      // @ts-ignore\n      return self._centrifuge.presenceStats(self.channel);\n    });\n  };\n\n  // history for a channel.\n  history(opts) {\n    const self = this;\n    return this._methodCall().then(function () {\n      // @ts-ignore\n      return self._centrifuge.history(self.channel, opts);\n    });\n  };\n\n  _methodCall() {\n    if (this._isSubscribed()) {\n      return Promise.resolve();\n    }\n    return new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({ code: errorCodes.timeout, message: 'timeout' });\n        // @ts-ignore\n      }, this._centrifuge._config.timeout);\n      // @ts-ignore\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n  }\n\n  _nextPromiseId() {\n    // @ts-ignore\n    return ++this._promiseId;\n  }\n\n  _needRecover() {\n    // @ts-ignore\n    return this._recover === true;\n  };\n\n  _isUnsubscribed() {\n    // @ts-ignore\n    return this.state === subscriptionState.Unsubscribed;\n  }\n\n  _isSubscribing() {\n    // @ts-ignore\n    return this.state === subscriptionState.Subscribing;\n  }\n\n  _isSubscribed() {\n    // @ts-ignore\n    return this.state === subscriptionState.Subscribed;\n  }\n\n  _setState(newState) {\n    // @ts-ignore\n    if (this.state !== newState) {\n      // @ts-ignore\n      const oldState = this.state;\n      // @ts-ignore\n      this.state = newState;\n      // @ts-ignore\n      this.emit('state', { 'newState': newState, 'oldState': oldState, channel: this.channel });\n      return true;\n    }\n    return false;\n  };\n\n  _usesToken() {\n    // @ts-ignore\n    return this._token !== null || this._getToken !== null;\n  }\n\n  _clearSubscribingState() {\n    // @ts-ignore\n    this._resubscribeAttempts = 0;\n    this._clearResubscribeTimeout();\n  }\n\n  _clearSubscribedState() {\n    this._clearRefreshTimeout();\n  }\n\n  _setSubscribed(result) {\n    if (!this._isSubscribing()) {\n      return;\n    }\n    this._clearSubscribingState();\n\n    if (result.recoverable) {\n      // @ts-ignore\n      this._recover = true;\n      // @ts-ignore\n      this._offset = result.offset || 0;\n      // @ts-ignore\n      this._epoch = result.epoch || '';\n    }\n\n    this._setState(subscriptionState.Subscribed);\n    // @ts-ignore\n    const ctx = this._centrifuge._getSubscribeContext(this.channel, result);\n    this.emit('subscribed', ctx);\n    this._resolvePromises();\n\n    const pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      for (let i in pubs) {\n        if (!pubs.hasOwnProperty(i)) {\n          continue;\n        }\n        this._handlePublication(pubs[i]);\n      }\n    }\n\n    if (result.expires === true) {\n      // @ts-ignore\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n  };\n\n  _setSubscribing(code, reason) {\n    if (this._isSubscribing()) {\n      return;\n    }\n    if (this._isSubscribed()) {\n      this._clearSubscribedState();\n    }\n    if (this._setState(subscriptionState.Subscribing)) {\n      // @ts-ignore\n      this.emit('subscribing', { channel: this.channel, code: code, reason: reason });\n    }\n    // @ts-ignore\n    this._centrifuge._subscribe(this);\n  };\n\n  _setUnsubscribed(code, reason, sendUnsubscribe) {\n    if (this._isUnsubscribed()) {\n      return;\n    }\n    if (this._isSubscribed()) {\n      if (sendUnsubscribe) {\n        // @ts-ignore\n        this._centrifuge._unsubscribe(this);\n      }\n      this._clearSubscribedState();\n    }\n    if (this._isSubscribing()) {\n      this._clearSubscribingState();\n    }\n    if (this._setState(subscriptionState.Unsubscribed)) {\n      // @ts-ignore\n      this.emit('unsubscribed', { channel: this.channel, code: code, reason: reason });\n    }\n    this._rejectPromises({ code: errorCodes.subscriptionUnsubscribed, message: 'unsubscribed' });\n  };\n\n  _handlePublication(pub) {\n    // @ts-ignore\n    const ctx = this._centrifuge._getPublicationContext(this.channel, pub);\n    this.emit('publication', ctx);\n    if (pub.offset) {\n      // @ts-ignore\n      this._offset = pub.offset;\n    }\n  }\n\n  _handleJoin(join) {\n    // @ts-ignore\n    this.emit('join', { channel: this.channel, info: this._centrifuge._getJoinLeaveContext(join.info) });\n  }\n\n  _handleLeave(leave) {\n    // @ts-ignore\n    this.emit('leave', { channel: this.channel, info: this._centrifuge._getJoinLeaveContext(leave.info) });\n  }\n\n  _resolvePromises() {\n    // @ts-ignore\n    for (const id in this._promises) {\n      // @ts-ignore\n      if (this._promises[id].timeout) {\n        // @ts-ignore\n        clearTimeout(this._promises[id].timeout);\n      }\n      // @ts-ignore\n      this._promises[id].resolve();\n      // @ts-ignore\n      delete this._promises[id];\n    }\n  }\n\n  _rejectPromises(err) {\n    // @ts-ignore\n    for (const id in this._promises) {\n      // @ts-ignore\n      if (this._promises[id].timeout) {\n        // @ts-ignore\n        clearTimeout(this._promises[id].timeout);\n      }\n      // @ts-ignore\n      this._promises[id].reject(err);\n      // @ts-ignore\n      delete this._promises[id];\n    }\n  }\n\n  _scheduleResubscribe() {\n    const self = this;\n    const delay = this._getResubscribeDelay();\n    // @ts-ignore\n    this._resubscribeTimeout = setTimeout(function () {\n      if (self._isSubscribing()) {\n        // @ts-ignore\n        self._centrifuge._subscribe(self);\n      }\n    }, delay);\n  }\n\n  _subscribeError(err) {\n    if (!this._isSubscribing()) {\n      return;\n    }\n    if (err.code < 100 || err.code === 109 || err.temporary === true) {\n      if (err.code === 109) { // Token expired error.\n        // @ts-ignore\n        this._token = null;\n      }\n      const errContext = {\n        // @ts-ignore\n        channel: this.channel,\n        type: 'subscribe',\n        error: err\n      };\n      this.emit('error', errContext);\n      this._scheduleResubscribe();\n    } else {\n      this._setUnsubscribed(err.code, err.message, false);\n    }\n  };\n\n  _getResubscribeDelay() {\n    // @ts-ignore\n    const delay = backoff(this._resubscribeAttempts, this._minResubscribeDelay, this._maxResubscribeDelay);\n    // @ts-ignore\n    this._resubscribeAttempts++;\n    return delay;\n  }\n\n  _clearPositionState() {\n    // @ts-ignore\n    this._recover = false;\n    // @ts-ignore\n    this._offset = null;\n    // @ts-ignore\n    this._epoch = null;\n  }\n\n  _setOptions(options) {\n    if (!options) {\n      return;\n    }\n    if ('since' in options) {\n      // @ts-ignore\n      this._offset = options.since.offset;\n      // @ts-ignore\n      this._epoch = options.since.epoch;\n      // @ts-ignore\n      this._recover = true;\n    }\n    if ('data' in options) {\n      // @ts-ignore\n      this._data = options.data;\n    }\n    if ('minResubscribeDelay' in options) {\n      // @ts-ignore\n      this._minResubscribeDelay = options.minResubscribeDelay;\n    }\n    if ('maxResubscribeDelay' in options) {\n      // @ts-ignore\n      this._maxResubscribeDelay = options.maxResubscribeDelay;\n    }\n    if ('token' in options) {\n      // @ts-ignore\n      this._token = options.token;\n    }\n    if ('getToken' in options) {\n      // @ts-ignore\n      this._getToken = options.getToken;\n    }\n    if (options.positioned === true) {\n      // @ts-ignore\n      this._positioned = true;\n    }\n    if (options.recoverable === true) {\n      // @ts-ignore\n      this._recoverable = true;\n    }\n  }\n\n  _getOffset() {\n    // @ts-ignore\n    const offset = this._offset;\n    if (offset !== null) {\n      return offset;\n    }\n    return 0;\n  };\n\n  _getEpoch() {\n    // @ts-ignore\n    const epoch = this._epoch;\n    if (epoch !== null) {\n      return epoch;\n    }\n    return '';\n  };\n\n  _clearRefreshTimeout() {\n    // @ts-ignore\n    if (this._refreshTimeout !== null) {\n      // @ts-ignore\n      clearTimeout(this._refreshTimeout);\n      // @ts-ignore\n      this._refreshTimeout = null;\n    }\n  }\n\n  _clearResubscribeTimeout() {\n    // @ts-ignore\n    if (this._resubscribeTimeout !== null) {\n      // @ts-ignore\n      clearTimeout(this._resubscribeTimeout);\n      // @ts-ignore\n      this._resubscribeTimeout = null;\n    }\n  }\n\n  _getSubscriptionToken() {\n    // @ts-ignore\n    this._centrifuge._debug('get subscription token for channel', this.channel);\n    const ctx = {\n      // @ts-ignore\n      channel: this.channel\n    };\n    // @ts-ignore\n    const getToken = this._getToken;\n    if (getToken === null) {\n      throw new Error('provide a function to get channel subscription token');\n    }\n    return getToken(ctx);\n  }\n\n  _refresh() {\n    this._clearRefreshTimeout();\n    const self = this;\n    this._getSubscriptionToken().then(function (token) {\n      if (!self._isSubscribed()) {\n        return;\n      }\n      if (!token) {\n        self._failUnauthorized();\n        return;\n      }\n      // @ts-ignore\n      self._token = token;\n      const req = {\n        // @ts-ignore\n        channel: self.channel,\n        token: token\n      };\n      const msg = {\n        'sub_refresh': req\n      };\n      // @ts-ignore\n      self._centrifuge._call(msg).then(resolveCtx => {\n        const result = resolveCtx.reply.sub_refresh;\n        self._refreshResponse(result);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        self._refreshError(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }).catch(function (e) {\n      self.emit('error', {\n        type: 'refreshToken',\n        // @ts-ignore\n        channel: self.channel,\n        error: {\n          code: errorCodes.subscriptionRefreshToken,\n          message: e !== undefined ? e.toString() : ''\n        }\n      });\n      // @ts-ignore\n      self._refreshTimeout = setTimeout(() => self._refresh(), self._getRefreshRetryDelay());\n    });\n  }\n\n  _refreshResponse(result) {\n    // @ts-ignore\n    this._centrifuge._debug('subscription token refreshed, channel', this.channel);\n    this._clearRefreshTimeout();\n    if (result.expires === true) {\n      // @ts-ignore\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n  };\n\n  _refreshError(err) {\n    if (err.code < 100 || err.temporary === true) {\n      this.emit('error', {\n        type: 'refresh',\n        // @ts-ignore\n        channel: this.channel,\n        error: err\n      });\n      // @ts-ignore\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getRefreshRetryDelay());\n    } else {\n      this._setUnsubscribed(err.code, err.message, true);\n    }\n  }\n\n  _getRefreshRetryDelay() {\n    return backoff(0, 10000, 20000);\n  }\n\n  _failUnauthorized() {\n    this._setUnsubscribed(unsubscribedCodes.unauthorized, 'unauthorized', true);\n  };\n}\n", "export const errorCodes = {\n  timeout: 1,\n  transportClosed: 2,\n  clientDisconnected: 3,\n  clientClosed: 4,\n  clientConnectToken: 5,\n  clientRefreshToken: 6,\n  subscriptionUnsubscribed: 7,\n  subscriptionSubscribeToken: 8,\n  subscriptionRefreshToken: 9,\n  transportWriteError: 10,\n  connectionClosed: 11\n};\n\nexport const connectingCodes = {\n  connectCalled: 0,\n  transportClosed: 1,\n  noPing: 2,\n  subscribeTimeout: 3,\n  unsubscribeError: 4\n};\n\nexport const disconnectedCodes = {\n  disconnectCalled: 0,\n  unauthorized: 1,\n  badProtocol: 2,\n  messageSizeLimit: 3\n};\n\nexport const subscribingCodes = {\n  subscribeCalled: 0,\n  transportClosed: 1\n};\n\nexport const unsubscribedCodes = {\n  unsubscribeCalled: 0,\n  unauthorized: 1,\n  clientClosed: 2\n};\n", "export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nfunction randomInt(min, max) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport function backoff(step, min, max) {\n  // Full jitter technique, see:\n  // https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/\n  if (step > 31) { step = 31; };\n  const interval = randomInt(0, Math.min(max, min * Math.pow(2, step)));\n  return Math.min(max, min + interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\nexport function ttlMilliseconds(ttl) {\n  // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n  return Math.min(ttl * 1000, 2147483647);\n};\n", "export class SockjsTransport {\n  constructor(endpoint, options) {\n    // @ts-ignore\n    this.endpoint = endpoint;\n    // @ts-ignore\n    this.options = options;\n    // @ts-ignore\n    this._transport = null;\n  }\n\n  name() {\n    return 'sockjs';\n  }\n\n  subName() {\n    // @ts-ignore\n    return 'sockjs-' + this._transport.transport;\n  }\n\n  emulation() {\n    return false;\n  }\n\n  supported() {\n    // @ts-ignore\n    return this.options.sockjs !== null;\n  }\n\n  initialize(_protocol, callbacks, _connectCommand) {\n    const sockjsOptions = {\n      // @ts-ignore\n      transports: this.options.transports\n    };\n    // @ts-ignore\n    if (this.options.server !== null) {\n      // @ts-ignore\n      sockjsOptions.server = this.options.server;\n    }\n    // @ts-ignore\n    if (this.options.timeout !== null) {\n      // @ts-ignore\n      sockjsOptions.timeout = this.options.timeout;\n    }\n\n    // @ts-ignore\n    this._transport = new this.options.sockjs(this.endpoint, null, sockjsOptions);\n\n    // @ts-ignore\n    this._transport.onopen = () => {\n      callbacks.onOpen();\n    };\n\n    // @ts-ignore\n    this._transport.onerror = e => {\n      callbacks.onError(e);\n    };\n\n    // @ts-ignore\n    this._transport.onclose = closeEvent => {\n      callbacks.onClose(closeEvent);\n    };\n\n    // @ts-ignore\n    this._transport.onmessage = event => {\n      callbacks.onMessage(event.data);\n    };\n  }\n\n  close() {\n    // @ts-ignore\n    this._transport.close();\n  }\n\n  send(data) {\n    // @ts-ignore\n    this._transport.send(data);\n  }\n}\n", "export class WebsocketTransport {\n  constructor(endpoint, options) {\n    // @ts-ignore\n    this.endpoint = endpoint;\n    // @ts-ignore\n    this.options = options;\n    // @ts-ignore\n    this._transport = null;\n  }\n\n  name() {\n    return 'websocket';\n  }\n\n  subName() {\n    return 'websocket';\n  }\n\n  emulation() {\n    return false;\n  }\n\n  supported() {\n    // @ts-ignore\n    return this.options.websocket !== null;\n  }\n\n  initialize(protocol, callbacks, _connectCommand) {\n    let subProtocol = '';\n    if (protocol === 'protobuf') {\n      subProtocol = 'centrifuge-protobuf';\n    }\n    if (subProtocol !== '') {\n      // @ts-ignore\n      this._transport = new this.options.websocket(this.endpoint, subProtocol);\n    } else {\n      // @ts-ignore\n      this._transport = new this.options.websocket(this.endpoint);\n    }\n    if (protocol === 'protobuf') {\n      // @ts-ignore\n      this._transport.binaryType = 'arraybuffer';\n    }\n\n    // @ts-ignore\n    this._transport.onopen = () => {\n      callbacks.onOpen();\n    };\n\n    // @ts-ignore\n    this._transport.onerror = e => {\n      callbacks.onError(e);\n    };\n\n    // @ts-ignore\n    this._transport.onclose = closeEvent => {\n      callbacks.onClose(closeEvent);\n    };\n\n    // @ts-ignore\n    this._transport.onmessage = event => {\n      callbacks.onMessage(event.data);\n    };\n  }\n\n  close() {\n    // @ts-ignore\n    this._transport.close();\n  }\n\n  send(data) {\n    // @ts-ignore\n    this._transport.send(data);\n  }\n}\n", "export class HttpStreamTransport {\n  constructor(endpoint, options) {\n    // @ts-ignore\n    this.endpoint = endpoint;\n    // @ts-ignore\n    this.options = options;\n    // @ts-ignore\n    this._abortController = null;\n    // @ts-ignore\n    this._utf8decoder = new TextDecoder();\n    // @ts-ignore\n    this._protocol = 'json';\n  }\n\n  name() {\n    return 'http_stream';\n  }\n\n  subName() {\n    return 'http_stream';\n  }\n\n  emulation() {\n    return true;\n  }\n\n  _handleErrors(response) {\n    if (!response.ok) throw new Error(response.status);\n    return response;\n  }\n\n  _fetchEventTarget(self, endpoint, options) {\n    const eventTarget = new EventTarget();\n    // fetch with connection timeout maybe? https://github.com/github/fetch/issues/175\n    const fetchFunc = self.options.fetch;\n    fetchFunc(endpoint, options)\n      .then(self._handleErrors)\n      .then(response => {\n        eventTarget.dispatchEvent(new Event('open'));\n        let jsonStreamBuf = '';\n        let jsonStreamPos = 0;\n        let protoStreamBuf = new Uint8Array();\n        const reader = response.body.getReader();\n        return new self.options.readableStream({\n          start(controller) {\n            function pump() {\n              return reader.read().then(({ done, value }) => {\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                  eventTarget.dispatchEvent(new Event('close'));\n                  controller.close();\n                  return;\n                }\n                try {\n                  if (self._protocol === 'json') {\n                    jsonStreamBuf += self._utf8decoder.decode(value);\n                    while (jsonStreamPos < jsonStreamBuf.length) {\n                      if (jsonStreamBuf[jsonStreamPos] === '\\n') {\n                        const line = jsonStreamBuf.substring(0, jsonStreamPos);\n                        eventTarget.dispatchEvent(new MessageEvent('message', { data: line }));\n                        jsonStreamBuf = jsonStreamBuf.substring(jsonStreamPos + 1);\n                        jsonStreamPos = 0;\n                      } else {\n                        ++jsonStreamPos;\n                      }\n                    }\n                  } else {\n                    let mergedArray = new Uint8Array(protoStreamBuf.length + value.length);\n                    mergedArray.set(protoStreamBuf);\n                    mergedArray.set(value, protoStreamBuf.length);\n                    protoStreamBuf = mergedArray;\n\n                    while (true) {\n                      const result = self.options.decoder.decodeReply(protoStreamBuf);\n                      if (result.ok) {\n                        const data = protoStreamBuf.slice(0, result.pos);\n                        eventTarget.dispatchEvent(new MessageEvent('message', { data: data }));\n                        protoStreamBuf = protoStreamBuf.slice(result.pos);\n                        continue;\n                      }\n                      break;\n                    }\n                  }\n                } catch (error) {\n                  // @ts-ignore\n                  eventTarget.dispatchEvent(new Event('error', { detail: error }));\n                  eventTarget.dispatchEvent(new Event('close'));\n                  controller.close();\n                  return;\n                }\n                pump();\n              }).catch(function (e) {\n                // @ts-ignore\n                eventTarget.dispatchEvent(new Event('error', { detail: e }));\n                eventTarget.dispatchEvent(new Event('close'));\n                controller.close();\n                return;\n              });\n            }\n            return pump();\n          }\n        });\n      })\n      .catch(error => {\n        // @ts-ignore\n        eventTarget.dispatchEvent(new Event('error', { detail: error }));\n        eventTarget.dispatchEvent(new Event('close'));\n      });\n    return eventTarget;\n  }\n\n  supported() {\n    // @ts-ignore\n    return this.options.fetch !== null &&\n      // @ts-ignore\n      this.options.readableStream !== null &&\n      typeof TextDecoder !== 'undefined' &&\n      typeof AbortController !== 'undefined' &&\n      typeof EventTarget !== 'undefined' &&\n      typeof Event !== 'undefined' &&\n      typeof MessageEvent !== 'undefined' &&\n      typeof Error !== 'undefined';\n  }\n\n  initialize(protocol, callbacks, encodedConnectCommand) {\n    // @ts-ignore\n    this._protocol = protocol;\n    // @ts-ignore\n    this._abortController = new AbortController();\n\n    let headers;\n    let body;\n    if (protocol === 'json') {\n      headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      };\n      body = encodedConnectCommand;\n    } else {\n      headers = {\n        'Accept': 'application/octet-stream',\n        'Content-Type': 'application/octet-stream'\n      };\n      body = encodedConnectCommand;\n    }\n\n    // @ts-ignore\n    const eventTarget = new this._fetchEventTarget(\n      this,\n      // @ts-ignore\n      this.endpoint,\n      {\n        method: 'POST',\n        headers: headers,\n        // @ts-ignore\n        mode: this.options.requestMode,\n        // @ts-ignore\n        signal: this._abortController.signal,\n        body: body\n      }\n    );\n\n    eventTarget.addEventListener('open', () => {\n      callbacks.onOpen();\n    });\n\n    eventTarget.addEventListener('error', (e) => {\n      // @ts-ignore\n      this._abortController.abort();\n      callbacks.onError(e);\n    });\n\n    eventTarget.addEventListener('close', () => {\n      // @ts-ignore\n      this._abortController.abort();\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    });\n\n    eventTarget.addEventListener('message', (e) => {\n      callbacks.onMessage(e.data);\n    });\n  }\n\n  close() {\n    // @ts-ignore\n    this._abortController.abort();\n  }\n\n  send(data, session, node) {\n    let headers;\n    let body;\n    const req = {\n      session: session,\n      node: node,\n      data: data\n    };\n    // @ts-ignore\n    if (this._protocol === 'json') {\n      headers = {\n        'Content-Type': 'application/json'\n      };\n      body = JSON.stringify(req);\n    } else {\n      headers = {\n        'Content-Type': 'application/octet-stream'\n      };\n      // @ts-ignore\n      body = this.options.encoder.encodeEmulationRequest(req);\n    }\n\n    // @ts-ignore\n    const fetchFunc = this.options.fetch;\n    // @ts-ignore\n    fetchFunc(this.options.emulationEndpoint, {\n      method: 'POST',\n      headers: headers,\n      // @ts-ignore\n      mode: this.options.emulationRequestMode,\n      body: body\n    });\n  }\n}\n", "export class SseTransport {\n  constructor(endpoint, options) {\n    // @ts-ignore\n    this.endpoint = endpoint;\n    // @ts-ignore\n    this.options = options;\n    // @ts-ignore\n    this._protocol = 'json';\n    // @ts-ignore\n    this._transport = null;\n    // @ts-ignore\n    this._onClose = null;\n  }\n\n  name() {\n    return 'sse';\n  }\n\n  subName() {\n    return 'sse';\n  }\n\n  emulation() {\n    return true;\n  }\n\n  supported() {\n    // @ts-ignore\n    return this.options.eventsource !== null && this.options.fetch !== null;\n  }\n\n  initialize(_protocol, callbacks, encodedConnectCommand) {\n    // @ts-ignore\n    let url = new URL(this.endpoint);\n    url.searchParams.append('cf_connect', encodedConnectCommand);\n\n    // @ts-ignore\n    const eventSource = new this.options.eventsource(url.toString());\n    // @ts-ignore\n    this._transport = eventSource;\n\n    const self = this;\n\n    eventSource.onopen = function () {\n      callbacks.onOpen();\n    };\n\n    eventSource.onerror = function (e) {\n      eventSource.close();\n      callbacks.onError(e);\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    };\n\n    eventSource.onmessage = function (e) {\n      callbacks.onMessage(e.data);\n    };\n\n    // @ts-ignore\n    self._onClose = function () {\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    };\n  }\n\n  close() {\n    // @ts-ignore\n    this._transport.close();\n    // @ts-ignore\n    if (this._onClose !== null) {\n      // @ts-ignore\n      this._onClose();\n    }\n  }\n\n  send(data, session, node) {\n    const req = {\n      session: session,\n      node: node,\n      data: data\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const body = JSON.stringify(req);\n    // @ts-ignore\n    const fetchFunc = this.options.fetch;\n    // @ts-ignore\n    fetchFunc(this.options.emulationEndpoint, {\n      method: 'POST',\n      headers: headers,\n      // @ts-ignore\n      mode: this.options.emulationRequestMode,\n      body: body\n    });\n  }\n}\n", "export class JsonEncoder {\n  encodeCommands(commands) {\n    return commands.map(c => JSON.stringify(c)).join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    return data.split('\\n').filter(r => r !== '').map(r => JSON.parse(r));\n  }\n}\n", "import { Centrifuge } from './centrifuge';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst Command = proto.lookupType('protocol.Command');\nconst Reply = proto.lookupType('protocol.Reply');\nconst EmulationRequest = proto.lookupType('protocol.EmulationRequest');\n\nexport class ProtobufEncoder {\n  encodeEmulationRequest(req) {\n    const writer = protobuf.Writer.create();\n    EmulationRequest.encode(req, writer);\n    return writer.finish();\n  }\n\n  encodeCommands(commands) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      // @ts-ignore\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeReply(data) {\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      Reply.decodeDelimited(reader);\n      return {\n        ok: true,\n        pos: reader.pos\n      };\n    }\n    return {\n      ok: false\n    };\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n  _formatOverride(format) {\n    if (format === 'protobuf') {\n      // @ts-ignore\n      this._encoder = new ProtobufEncoder();\n      // @ts-ignore\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n", "import { CentrifugeProtobuf } from './protobuf.js';\nexport default CentrifugeProtobuf;\n", "/**\n * This file is the entrypoint of browser builds.\n * The code executes when loaded in a browser.\n */\nimport Centrifuge from './index_protobuf'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(window as any).Centrifuge = Centrifuge  // instead of casting window to any, you can extend the Window interface: https://stackoverflow.com/a/43513740/5433572\n"],
  "mappings": "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",
  "names": []
}
