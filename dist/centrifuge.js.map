{"version":3,"sources":["webpack://Centrifuge/webpack/universalModuleDefinition","webpack://Centrifuge/./src/centrifuge.js","webpack://Centrifuge/./src/index.js","webpack://Centrifuge/./src/json.js","webpack://Centrifuge/./src/subscription.js","webpack://Centrifuge/./src/utils.js","webpack://Centrifuge/./node_modules/events/events.js","webpack://Centrifuge/webpack/bootstrap","webpack://Centrifuge/webpack/runtime/global","webpack://Centrifuge/webpack/startup"],"names":["_errorTimeout","_errorConnectionClosed","Centrifuge","url","options","_url","_websocket","_sockjs","_isSockjs","_xmlhttprequest","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastSeq","_lastGen","_lastOffset","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","Promise","resolve","_config","debug","name","version","websocket","sockjs","xmlhttprequest","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","_configure","token","data","headers","params","callback","query","_debug","JSON","stringify","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","e","error","_log","setTimeout","send","arguments","WebSocket","format","_formatOverride","Error","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","indexOf","_setFormat","SockJS","newStatus","interval","xhrID","abort","reconnect","_stopPing","id","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","subs","hasSubs","recoverable","seq","gen","offset","epoch","Date","_call","then","resolveCtx","_connectResponse","decodeCommandResult","CONNECT","result","next","rejectCtx","err","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","method","RPC","_methodCall","SEND","isConnected","reject","sent","_transportSend","undefined","since","limit","resultCB","PUBLISH","_getHistoryParams","HISTORY","publications","PRESENCE","presence","PRESENCE_STATS","num_users","num_clients","replies","decodeReplies","finishDispatch","_dispatchSynchronized","p","_dispatchReply","reply","_handleReply","_handlePush","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","emit","close","_refreshFailed","clientID","_newXHRID","cb","resp","jitter","Math","round","random","max","REFRESH","_refreshResponse","_refreshError","context","_ajax","expires","client","_getTTLMilliseconds","ttl","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","min","isRecover","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","ctx","latency","_processServerSubs","subCtx","_expandSubscribeContext","recovered","pubs","reverse","_handlePublication","_isSubscribing","message","_setSubscribeError","positioned","streamPosition","_setSubscribeSuccess","_recoverable","join","info","_isServerSub","leave","unsub","unsubscribe","resubscribe","subscribe","pub","push","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","SUB","_handleSub","messages","slice","PING","_pingResponse","lastSeq","lastOffset","lastGen","lastEpoch","errObject","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","events","currentSub","_setEvents","_isUnsubscribed","Subscription","EventEmitter","map","c","split","filter","r","methodType","pushType","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","on","errContext","_resolve","value","_reject","Object","prototype","toString","call","knownEvents","l","ev","subscribeResult","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","_isError","subPromise","res","rej","_nextPromiseId","self","publish","presenceStats","history","startsWith","prefix","lastIndexOf","isFunction","log","level","args","console","logger","apply","backoff","step","pow","floor","errorExists","extend","a","b","key"],"mappings":"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AACqC,GAAL,CAASlC,GAAT,EAAckC,GAAG,GAAGrC,IAAI,CAACyK,GAAL,CAAS,CAAT,EAAYD,IAAI,GAAG,CAAnB,CAApB,CAAjB;AAEA,SAAOxK,IAAI,CAAC0K,KAAL,CAAW,CAAC,IAAI3K,MAAL,IAAehH,QAA1B,CAAP;AACD;;AAAA;;AAEM,SAAS4R,WAAT,CAAqBzU,IAArB,EAA2B;AAChC,SAAO,WAAWA,IAAX,IAAmBA,IAAI,CAAC2B,KAAL,KAAe,IAAzC;AACD;;AAAA;;AAEM,SAAS+S,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3B,OAAK,IAAMC,GAAX,IAAkBD,CAAlB,EAAqB;AACnB,QAAIA,CAAC,CAAC/T,cAAF,CAAiBgU,GAAjB,CAAJ,EAA2B;AACzBF,OAAC,CAACE,GAAD,CAAD,GAASD,CAAC,CAACC,GAAD,CAAV;AACD;AACF;;AACD,SAAOF,CAAP;AACD;;AAAA,C;;;;;;;ACvCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;UC3dA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;UCPD;UACA;UACA;UACA","file":"centrifuge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(this, function() {\nreturn ","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._xmlhttprequest = null;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._config = {\n      debug: false,\n      name: '',\n      version: '',\n      websocket: null,\n      sockjs: null,\n      xmlhttprequest: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    let xhr;\n    if (this._xmlhttprequest !== null) {\n      // use explicitly passed XMLHttpRequest object.\n      xhr = new this._xmlhttprequest();\n    } else {\n      xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n    }\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n\n    this._xmlhttprequest = this._config.xmlhttprequest;\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData || this._config.name || this._config.version) {\n        msg.params = {};\n      }\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n      if (this._config.name) {\n        msg.params.name = this._config.name;\n      }\n      if (this._config.version) {\n        msg.params.version = this._config.version;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        if (!msg.params) {msg.params = {};}\n        msg.params.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result), hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    let params = {\n      data: data\n    };\n    if (method !== '') {\n      params.method = method;\n    };\n    const msg = {\n      method: this._methodType.RPC,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  _getHistoryParams(channel, options) {\n    let params = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        params['use_since'] = true;\n        if (options.since.offset) {\n          params['offset'] = options.since.offset;\n        }\n        if (options.since.epoch) {\n          params['epoch'] = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        params['use_limit'] = true;\n        params['limit'] = options.limit;\n      }\n    };\n    return params;\n  }\n\n  _methodCall(msg, resultCB) {\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve(resultCB(this._decoder.decodeCommandResult(msg.method, resolveCtx.result)));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n    return this._methodCall(msg, function () {\n      return {};\n    });\n  }\n\n  history(channel, options) {\n    const params = this._getHistoryParams(channel, options);\n    const msg = {\n      method: this._methodType.HISTORY,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'publications': result.publications,\n        'epoch': result.epoch || '',\n        'offset': result.offset || 0\n      };\n    });\n  }\n\n  presence(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'presence': result.presence\n      };\n    });\n  }\n\n  presenceStats(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE_STATS,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'num_users': result.num_users,\n        'num_clients': result.num_clients\n      };\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve =>{\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', {channel: channel});\n        }\n      }\n      this.emit('disconnect', {\n        reason: reason,\n        reconnect: reconnect\n      });\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          if (gen) {\n            msg.params.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            msg.params.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs);\n    }\n  };\n\n  _processServerSubs(subs) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const isResubscribe = this._serverSubs[channel] !== undefined;\n        let subCtx = {channel: channel, isResubscribe: isResubscribe};\n        subCtx = this._expandSubscribeContext(subCtx, sub);\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _expandSubscribeContext(ctx, result) {\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    ctx.recovered = recovered;\n\n    let positioned = false;\n    if ('positioned' in result) {\n      positioned = result.positioned;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (positioned) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n    return ctx;\n  }\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribeSuccess(result);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !result.recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = {'info': join.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = {'info': leave.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    let ctx = {'channel': channel, isResubscribe: false};\n    ctx = this._expandSubscribeContext(ctx, sub);\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUB) {\n      const sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  msg.params.seq = seq;\n                }\n                if (gen) {\n                  msg.params.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  msg.params.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n","import {Centrifuge} from './centrifuge.js';\nexport default Centrifuge;\n","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4,\n  SUB: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    return commands.map(c => JSON.stringify(c)).join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    return data.split('\\n').filter(r => r !== '').map(r => JSON.parse(r));\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(subscribeResult) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(subscribeResult);\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(subscribeResult) {\n    let ctx = {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe\n    };\n    if (subscribeResult) {\n      // subscribeResult not available when called from Subscription.ready method at the moment.\n      ctx = this._centrifuge._expandSubscribeContext(ctx, subscribeResult);\n    }\n    return ctx;\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall() {\n    if (this._isSuccess()) {\n      return Promise.resolve();\n    } else if (this._isError()) {\n      return Promise.reject(this._error);\n    }\n    let subPromise = new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({'code': 0, 'message': 'timeout'});\n      }, this._centrifuge._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n    return subPromise;\n  }\n\n  publish(data) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.publish(self.channel, data);\n    });\n  };\n\n  presence() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presence(self.channel);\n    });\n  };\n\n  presenceStats() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presenceStats(self.channel);\n    });\n  };\n\n  history(options) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.history(self.channel, options);\n    });\n  };\n}\n","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(579);\n"],"sourceRoot":""}